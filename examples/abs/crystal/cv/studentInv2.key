// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
// Input file for KeY standalone prover version 0.497

\absSource ".";

\module "CV";
\class "Stud";

\programVariables {
	CV.StudI this;
	String cv;
}


\problem {

\forall ABSAnyInterface concreteCaller; \forall Future concreteFut;(
 (seqLen(history) % 2 = 0 & 
  \forall int idx;\exists ABSAnyInterface c; \exists Future u; (
    idx>=0 & idx<seqLen(history) & idx % 2 = 0 -> 
                   (HistoryLabel::seqGet(history, idx) = invocREv(c, this, u, CV.StudI::getCV, seqEmpty) &
                    HistoryLabel::seqGet(history, idx + 1) = compEv(this, u, CV.StudI::getCV, cv)) 
))
->

{history:=seqConcat(history, seqSingleton(invocREv(concreteCaller, this, concreteFut, CV.StudI::getCV, seqEmpty)))}

{history:=seqConcat(history, seqSingleton(compEv(this, concreteFut, CV.StudI::getCV, cv)))}

//[ CV.Stud getCV() ]

(seqLen(history) % 2 = 0 & \forall int idx;\exists ABSAnyInterface c; \exists Future u; (
    idx>=0 & idx<seqLen(history) & idx % 2 = 0 -> 
                   (HistoryLabel::seqGet(history, idx) = invocREv(c, this, u, CV.StudI::getCV, seqEmpty) &
                    HistoryLabel::seqGet(history, idx + 1) = compEv(this, u, CV.StudI::getCV, cv)) 
))
)
}


