module ReplicationSystem.Server.Interfaces;

export *;

import * from ReplicationSystem.Environment.Interfaces;
import * from ReplicationSystem.Environment.Files;
import * from ReplicationSystem.Environment.DataTypes;
import * from ReplicationSystem.Environment.ReplicationSnapshot.Interfaces;

import ClientJob from ReplicationSystem.Client.Interfaces;
import Node, Worker from ReplicationSystem.Interfaces;

interface SyncServerClientCoordinator { 

	//@ model Set<ConnnectionThread> ts; initially ts == EmptySet;
	//@ model ReplicationSnapshot snapshot; initially snapshot == null;

	//@ requires snapshot != null;
	//@ requires ! contains(ts, worker);
	//@ ensures contains(ts, worker);
 	//@ ensures \forall ConnectionThread t; 
	//@				contains(\old(ts), t) ==> contains(ts, t);
	//@ ensures snapshot.getIndexingId() >= \old(snapshot.getIndexingId());
	Unit startReplicationUpdate(ConnectionThread worker);
	
	//@ requires snapshot != null;
	//@ requires contains(ts, worker);
	//@ ensures ! contains(ts, worker); 
 	//@ ensures \forall ConnectionThread t; 
	//@				contains(\old(ts), t) && t != worker ==> contains(ts, t);
	//@ ensures snapshot.getIndexingId() == \old(snapshot.getIndexingId());
	Unit finishReplicationUpdate(ConnectionThread worker);

    //@ assignable this.snapshot;
    //@ ensures this.snapshot == snapshot;
	Unit setSnapshot(ReplicationSnapshot snapshot);
	
}

interface SyncServerAcceptor {
	//@ model SyncServer s;

	//@ requires s != null;
	//@ requires job != null;
	//@ ensures \fresh(\result); 
	//@ ensures s.isShutdownRequested() <==> \result != null; 
	[Far] 
	ConnectionThread getConnection(ClientJob job);
	
	//@ requires thread != null; 
	Unit finish(ConnectionThread thread);
}

interface ConnectionThread extends Worker { }

// Exposes schedule for testing
interface ServerNode extends Node {
	UpdatableDataBase getUpdatableDataBase();
	Schedules listSchedules();
	Schedule getSchedule(String name);
}

interface SyncServer extends ServerNode { 

	//@ model ReplicationSnapshot snapshot; 
	//@ invariant snapshot != null;
	
	//@ assignable \nothing;
	//@ ensures \result != null;
	SyncServerAcceptor getAcceptor();
	
	//@ assignable \nothing;
	//@ ensures \result != null;
	[Far] 
	SyncServerClientCoordinator getCoordinator();
	
	//@ assignable \nothing;
	//@ ensures \result != snapshot;
	[Near] 
	ReplicationSnapshot getReplicationSnapshot();
}