// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
// Input file for KeY standalone prover version 0.497

\absSource ".";

\module "CV";
\class "Stud";

\programVariables {
	StudI this;
	String cv;
}

\problem {

\forall ABSAnyInterface concreteCaller; \forall Future concreteFut;(
wfHist(history) & 
\forall ABSAnyInterface c; \forall Future u; \forall int idx;
    (idx = seqIndexOf(history, invocREv(c, this, u, CV.StudI::getCV, seqEmpty)) ->
     (idx >= 0 & idx < seqLen(history) - 1 & 
       HistoryLabel::seqGet(history, idx + 1) = compEv(this, u, CV.StudI::getCV, cv) ))

->

{history:=seqConcat(history, seqSingleton(invocREv(concreteCaller, this, concreteFut, CV.StudI::getCV, seqEmpty)))}

{history:=seqConcat(history, seqSingleton(compEv(this, concreteFut, CV.StudI::getCV, cv)))}

wfHist(history) ->
\forall ABSAnyInterface c; \forall Future u; \forall int idx;
    (idx = seqIndexOf(history, invocREv(c, this, u, CV.StudI::getCV, seqEmpty)) ->
     (idx >=0 & idx < seqLen(history) - 1 & 
       HistoryLabel::seqGet(history, idx + 1) = compEv(this, u, CV.StudI::getCV, cv) ))

)
}


