// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
// Input file for KeY standalone prover version 0.497

\absSource ".";


\programVariables {
	ABS.StdLib.Int myInt;
	History history;
	PingPong.Pong o;
}

\rules {

  variableDeclarationWithInitializer {
      \schemaVar \program ABSTypeRef TypeRef;
      \schemaVar \program Variable lhs;
      \schemaVar \program PureExp exp1;

      \schemaVar \program[list] Statement s;
      \schemaVar \formula post;
      
      \find (\[{ TypeRef lhs = exp1; s; }\]post) 
      \replacewith ({lhs:=exp1}\[{ s; }\]post)

      \heuristics(simplify_prog) 
  };


  assignment {
      \schemaVar \program Variable lhs;
      \schemaVar \program PureExp exp1;

      \schemaVar \program[list] Statement s;
      \schemaVar \formula post;
      
      \find (\[{ lhs = exp1; s; }\]post) 
      \replacewith ({lhs:=exp1}\[{ s; }\]post)

      \heuristics(simplify_prog)
  };

  emptyBox {
      \schemaVar \formula post;
      
      \find (\[{ }\]post) 
      \replacewith (post)
      \heuristics(simplify_prog)
  };


  boxTrue {      
      \schemaVar \program[list] Statement s;

      \find (\[{ s; }\]true) 
      \replacewith (true)
      \heuristics(concrete)
  };


}

//0151 614 725 48

\problem {
//   wfHist(history) & myInt > 0 ->
//	\[{ ABS.StdLib.Int j = myInt;  myInt = myInt * myInt; myInt = myInt + myInt;  }\] myInt > 0	
   wfHist(history) & myInt > 0 ->	\[{ List<Int> e = NIL; PingPong.Pong u = null; Fut<Unit> fu = u!nothing(); }\] myInt > 0	
}


