\rules {

  // definitions of the heap operations on sequences

  def_select {
    \schemaVar \term Seq s;
    \schemaVar \term Object o;
    \schemaVar \term Field f;
    \find ( beta::_select(s, o, f) )
    \replacewith ( beta::select(Heap::seqGet(s, seqLen(s)-1), o, f) )
  };

  def_store {
    \schemaVar \term Seq s;
    \schemaVar \term Object o;
    \schemaVar \term Field f;
    \schemaVar \term any v;
    \find ( _store(s, o, f, v) )
    \replacewith ( seqConcat(s, seqSingleton(
                     store(Heap::seqGet(s, seqLen(s)-1), o, f, v))) )
  };

  def_anon {
    \schemaVar \term Seq s;
    \schemaVar \term LocSet l;
    \schemaVar \term Heap h;
    \find ( _anon(s, l, h) )
    \replacewith ( seqConcat(seqRemove(s, seqLen(s)-1), seqSingleton(
                     anon(Heap::seqGet(s, seqLen(s)-1), l, h))) )
  };


}
