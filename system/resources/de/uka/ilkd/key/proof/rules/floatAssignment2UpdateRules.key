// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2014 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 


\schemaVariables {
  \modalOperator {diamond, box, diamond_transaction, box_transaction} #normalassign;

  \program JavaFloatExpression #seFloat, #seFloat0, #seFloat1 ;

  \program Variable #loc ;

  \formula post;
}



\rules(programRules:Java) {

  //------------- addition

  assignmentAdditionFloat  { 
      \find(\modality{#normalassign}{.. 
                #loc=#seFloat0 + #seFloat1; 
            ...}\endmodality(post)) 
     \replacewith(
         {#loc:=javaAddFloat(#seFloat0,#seFloat1)}
             \modality{#normalassign}{.. ...}\endmodality(post)) 
     \heuristics(executeFloatAssignment)
     \displayname "addition"
  };

  //------------- unary minus for float

  unaryMinusFloat { 
     \find (\modality{#normalassign}{.. 
                #loc = - #seFloat; 
            ...}\endmodality(post)) 
     \replacewith({#loc:=javaUnaryMinusFloat(#seFloat)}
                      \modality{#normalassign}{..  ...}\endmodality(post))
     \heuristics(executeFloatAssignment)
     \displayname "unaryMinus"
  };
}
