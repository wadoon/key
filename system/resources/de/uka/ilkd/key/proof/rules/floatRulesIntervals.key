// This file is part of KeY - Integrated Deductive Software Design
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2014 Karlsruhe Institute of Technology, Germany
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General
// Public License. See LICENSE.TXT for details.
// 


\schemaVariables {
  \term float f1, f2, f3, f4;
  \term numbers n1, n2;
  \program Variable #loc ;
}


\rules(programRules:Java, floatRules:intervalAbstractions){
  
  fpIntervalLtRight {
     \find(==> javaLtFloat(f1, f2))
     \replacewith(==> interLt(intervalMax(f1), intervalMin(f2)))
     \heuristics(javaFloatSemantics)
  };

  fpIntervalLtLeft {
     \find(javaLtFloat(f1, f2) ==>)
     \replacewith(interLt(intervalMin(f1), intervalMax(f2)) ==>)
     \heuristics(javaFloatSemantics)
  };

  fpIntervalUnaryMinusMin {
     \find(intervalMin(javaUnaryMinusFloat(f1)))
     \replacewith(javaUnaryMinusFloat(intervalMin(f1)))
     \heuristics(javaFloatSemantics)
  };

  fpIntervalUnaryMinusMax {
     \find(intervalMax(javaUnaryMinusFloat(f1)))
     \replacewith(javaUnaryMinusFloat(intervalMax(f1)))
     \heuristics(javaFloatSemantics)
  };

  fpIntervalVariableMin {
     \find(intervalMin(#loc))
     \replacewith(#loc)
     \heuristics(javaFloatSemantics)
  };

  fpIntervalVariableMax {
     \find(intervalMax(#loc))
     \replacewith(#loc)
     \heuristics(javaFloatSemantics)
  };

  fpIntervalLiteralMin {
     \find(intervalMin(FP(n1, n2)))
     \replacewith(FP(n1, n2))
     \heuristics(javaFloatSemantics)
  };

  fpIntervalLiteralMax {
     \find(intervalMax(FP(n1, n2)))
     \replacewith(FP(n1, n2))
     \heuristics(javaFloatSemantics)
  };

  fpIntervalAddMin {
     \find(intervalMin(javaAddFloat(f1, f2)))
     \replacewith(addFloatIEEE(RTN,
                               intervalMin(f1),
                               intervalMin(f2)))
     \heuristics(javaFloatSemantics)
  };

  fpIntervalAddMax {
     \find(intervalMax(javaAddFloat(f1, f2)))
     \replacewith(addFloatIEEE(RTP,
                               intervalMax(f1),
                               intervalMax(f2)))
     \heuristics(javaFloatSemantics)
  };




















}

