\sorts {
  //History \extends Seq;
  Future;
  HistoryLabel;
  ItfLabel;
  ClassLabel;
  MethodLabel;
  Unit;
}

\predicates {
    wfHist(Seq);
    containsMsg(HistoryLabel, Seq);
    containsFut(Future, Seq);
    
    isCompletionEv(HistoryLabel);
    isCompletionREv(HistoryLabel);
    isInvocationEv(HistoryLabel);
    isInvocationREv(HistoryLabel);
}

\functions {
    Null null;
    \unique HistoryLabel invocEv(ABSAnyInterface, ABSAnyInterface, Future, MethodLabel, Seq);
    \unique HistoryLabel invocREv(ABSAnyInterface, ABSAnyInterface, Future, MethodLabel, Seq);
    \unique HistoryLabel compEv(ABSAnyInterface, Future, MethodLabel, any);
    \unique HistoryLabel compREv(ABSAnyInterface, Future, any);
    Seq fid(Seq);
    
    any getResult(HistoryLabel);
    any getFuture(HistoryLabel);
}


\programVariables {
  Seq history;
}

\rules {

   getResultFromCompEv {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	\find (getResult(compEv(callee, fut, meth, result)))
   	\replacewith(result)
   	\heuristics(simplify)
   };

   getResultFromCompREv {
   	\schemaVar \term ABSAnyInterface receiver;
   	\schemaVar \term Future fut;
   	\schemaVar \term any result;
   	\find (getResult(compREv(receiver, fut, result)))
   	\replacewith(result)
   	\heuristics(simplify)
   };

   getResultFromCompEvEQ {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;
   	
   	\assumes (compEv(callee, fut, meth, result) = EQ ==>)
   	\find (getResult(EQ))
   	\sameUpdateLevel
   	\replacewith(result)
   	\heuristics(simplify)
   };

   getResultFromCompREvEQ {
   	\schemaVar \term ABSAnyInterface receiver;
   	\schemaVar \term Future fut;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;

   	\assumes (compREv(receiver, fut, result) = EQ ==>)
   	\find (getResult(EQ))
   	\sameUpdateLevel
   	\replacewith(result)
   	\heuristics(simplify)
   };

   getFutureFromCompEv {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	\find (getFuture(compEv(callee, fut, meth, result)))
   	\replacewith(fut)
   	\heuristics(simplify)
   };

   getFutureFromCompREv {
   	\schemaVar \term ABSAnyInterface receiver;
   	\schemaVar \term Future fut;
   	\schemaVar \term any result;
   	\find (getFuture(compREv(receiver, fut, result)))
   	\replacewith(fut)
   	\heuristics(simplify)
   };

   getFutureFromCompEvEQ {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;
   	
   	\assumes (compEv(callee, fut, meth, result) = EQ ==>)
   	\find (getFuture(EQ))
   	\sameUpdateLevel
   	\replacewith(fut)
   	\heuristics(simplify)
   };

   getFutureFromCompREvEQ {
   	\schemaVar \term ABSAnyInterface receiver;
   	\schemaVar \term Future fut;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;

   	\assumes (compREv(receiver, fut, result) = EQ ==>)
   	\find (getFuture(EQ))
   	\sameUpdateLevel
   	\replacewith(fut)
   	\heuristics(simplify)
   };

   getFutureFromInvocEv {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	
   	\find(getFuture(invocEv(caller, callee, fut, meth, args)))
   	
   	\replacewith(fut)
   	
   	\heuristics(simplify)
   };

   getFutureFromInvocREv {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	\find (getFuture(invocREv(caller, callee, fut, meth, args)))
   	\replacewith(fut)
   	\heuristics(simplify)
   };

   getFutureFromInvocEvEQ {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	\schemaVar \term HistoryLabel EQ;
   	
   	\assumes (invocEv(caller, callee, fut, meth, args) = EQ ==>)
   	\find (getFuture(EQ))
   	\sameUpdateLevel
   	\replacewith(fut)
   	\heuristics(simplify)
   };

   getFutureFromInvocREvEQ {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	\schemaVar \term HistoryLabel EQ;

   	\assumes (invocREv(caller, callee, fut, meth, args) = EQ ==>)
   	\find (getFuture(EQ))
   	\sameUpdateLevel
   	\replacewith(fut)
   	\heuristics(simplify)
   };

//

   isCompletionEvent {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;

   	\find (isCompletionEv(compEv(callee, fut, meth, result)))
   	\replacewith(true)
   	\heuristics(simplify)
   };

   isCompletionReactionEvent {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term any result;
   	
   	\find (isCompletionEv(compREv(callee, fut, result)))
   	\replacewith(true)
   	\heuristics(simplify)
   };


   isCompletionEventEQ {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;

	\assumes (compEv(callee, fut, meth, result) = EQ ==>)
   	\find (isCompletionEv(EQ))
   	\sameUpdateLevel
   	\replacewith(true)
   	\heuristics(simplify)
   };

   isCompletionReactionEventEQ {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;
   	
   	\assumes(EQ = compREv(callee, fut, result) ==>)
   	\find (isCompletionEv(EQ))
   	\sameUpdateLevel   	
   	\replacewith(true)
   	\heuristics(simplify)
   };




   isInvocationEvent {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;

   	\find (isInvocationEv(invocEv(caller, callee, fut, meth, args)))
   	\replacewith(true)
   	\heuristics(simplify)
   };

   isInvocationReactionEvent {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	
   	\find (isInvocationREv(invocREv(caller, callee, fut, meth, args)))
   	\replacewith(true)
   	\heuristics(simplify)
   };

   isInvocationEventEQ {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	\schemaVar \term HistoryLabel EQ;
   	
	\assumes (invocEv(caller, callee, fut, meth, args) = EQ ==>)
   	\find (isInvocationEv(EQ))
   	\sameUpdateLevel
   	
   	\replacewith(true)
   	\heuristics(simplify)
   };

   isInvocationReactionEventEQ {
   	\schemaVar \term ABSAnyInterface caller, callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	\schemaVar \term HistoryLabel EQ;
   	
   	\assumes (invocREv(caller, callee, fut, meth, args) = EQ ==>)
   	\find (isInvocationREv(EQ))
   	\sameUpdateLevel   
   		
   	\replacewith(true)
   	\heuristics(simplify)
   };



//
   isInvocationEventFalse1 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;

   	\find (isInvocationEv(compEv(callee, fut, meth, result)))
   	\replacewith(false)
   	\heuristics(simplify)
   };

   isInvocationEventFalse2 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;

   	\find (isInvocationEv(compREv(callee, fut, result)))
   	\replacewith(false)
   	\heuristics(simplify)
   };

   isInvocationReactionEventFalse1 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	
   	\find (isInvocationREv(compEv(callee, fut, meth, result)))
   	\replacewith(false)
   	\heuristics(simplify)
   };

   isInvocationReactionEventFalse2 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	
   	\find (isInvocationREv(compREv(callee, fut, result)))
   	\replacewith(false)
   	\heuristics(simplify)
   };

   isInvocationEventEQFalse1 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;
   	
	\assumes (compEv(callee, fut, meth, result) = EQ ==>)
   	\find (isInvocationEv(EQ))
   	\replacewith(false)
   	\heuristics(simplify)
   };

   isInvocationEventEQFalse2 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term any result;
   	\schemaVar \term HistoryLabel EQ;
   	
	\assumes (compREv(callee, fut, result) = EQ ==>)
   	\find (isInvocationEv(EQ))
   	\replacewith(false)
   	\heuristics(simplify)
   };
   
   isInvocationReactionEventEQFalse1 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term Seq args;
   	\schemaVar \term HistoryLabel EQ;
   
   	\assumes (compREv(callee, fut, args) = EQ ==>)
   	\find (isInvocationREv(EQ))
   	\replacewith(false)
   	\heuristics(simplify)
   };

   isInvocationReactionEventEQFalse2 {
   	\schemaVar \term ABSAnyInterface callee;
   	\schemaVar \term Future fut;
   	\schemaVar \term MethodLabel meth;
   	\schemaVar \term Seq args;
   	\schemaVar \term HistoryLabel EQ;
   	
   	\assumes (compEv(callee, fut, meth, args) = EQ ==>)
   	\find (isInvocationREv(EQ))
   	\replacewith(false)
   	\heuristics(simplify)
   };


}
