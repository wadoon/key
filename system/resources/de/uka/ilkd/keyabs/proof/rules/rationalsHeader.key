\sorts{
  ABS.StdLib.Rat;
}



\functions {

  //----------------------------------------------------------------------------
  //The functions declared below preserve their semantics independently 
  //from the current integer semantics.
  //----------------------------------------------------------------------------
  
  ABS.StdLib.Rat rat(int, int);
}



\predicates {

  //----------------------------------------------------------------------------
  //The predicates declared below preserve their semantics independently 
  //from the current integer semantics.
  //----------------------------------------------------------------------------
  
  leqRational(ABS.StdLib.Rat, ABS.StdLib.Rat);
  ltRational(ABS.StdLib.Rat, ABS.StdLib.Rat);
  geqRational(ABS.StdLib.Rat, ABS.StdLib.Rat);
  gtRational(ABS.StdLib.Rat, ABS.StdLib.Rat);
  
}

\rules{

ltRationalAntiSymmetric {
    
    \schemaVar \term ABS.StdLib.Rat left, right; 
	
	\assumes (ltRational(left, right) ==>)
	\find (ltRational(right, left))
	\sameUpdateLevel
	\replacewith (false)
	\heuristics(concrete)
};

gtRationalToleqRational {
   \schemaVar \term ABS.StdLib.Rat left, right; 
	
	\find (gtRational(left, right) ==>)
	\replacewith ( ==> leqRational(left, right))
	\heuristics(simplify)
};

gtRationalToleqRationalSucc {
   \schemaVar \term ABS.StdLib.Rat left, right; 
	
	\find (==> gtRational(left, right))
	\replacewith ( leqRational(left, right) ==> )
	\heuristics(simplify)
};

leqRationalToleqRational {
   \schemaVar \term ABS.StdLib.Rat left, right; 
	
	\find (leqRational(left, right))
	\replacewith (ltRational(left, right) | left = right)
	\heuristics(simplify_enlarging)
};



ltRationalTransitivity {
    
    \schemaVar \term ABS.StdLib.Rat common, right; 
    \schemaVar \term ABS.StdLib.Rat right2; 
	
	\assumes (ltRational(common, right) ==>)
	\find (==> ltRational(common, right2))
	\add (==>leqRational(right, right2))
	\heuristics(concrete)
};

rationalEquality {
    \schemaVar \term int left, right; 
    \schemaVar \term int left2, right2; 

	\find ( rat(left, right) = rat(left2,right2) )
	\replacewith( \if (right != 0 & right2 != 0) \then (left * right2 = right * left2) \else ( rat(left, right) = rat(left2,right2) ) )
	\heuristics (userTaclets3)
};

rationalLt {
    \schemaVar \term int left, right; 
    \schemaVar \term int left2, right2; 

	\find ( ltRational(rat(left, right), rat(left2,right2)) )
	\replacewith( \if (right != 0 & right2 != 0) \then (\if (right*right2 > 0) \then (left * right2 < right * left2) \else ((-1*left * right2 < -1*right * left2) )) \else ( rat(left, right) = rat(left2,right2) ) )
	\heuristics (userTaclets3)
};

}