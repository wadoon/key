\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jun 03 15:22:05 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:showSatisfiability , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\sorts {
  S;
}

\predicates {
  member(S, S);
  subzet(S, S);
}
\problem {
     \forall S x1;
       \forall S x2;
         (    subzet(x1, x2)
          <-> \forall S x3;
                (member(x3, x1) -> member(x3, x2)))
   & \forall S x4; subzet(x4, x4)
-> \forall S x5;
     \forall S x6;
       \forall S x7;
         (   subzet(x5, x6) & subzet(x6, x7)
          -> subzet(x5, x7))

}

\proof {
(keyLog "0" (keyUser "arne" ) (keyVersion "66e163adc6"))

(autoModeTime "66")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "allRight" (formula "3") (inst "sk=x5_0"))
(rule "allRight" (formula "3") (inst "sk=x6_0"))
(rule "allRight" (formula "3") (inst "sk=x7_0"))
(rule "impRight" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "nnf_imp2or" (formula "3") (term "0,1,0,0"))
(rule "cnf_eqv" (formula "3") (term "0,0"))
(rule "nnf_notAll" (formula "3") (term "1,0,0,0"))
(rule "nnf_notOr" (formula "3") (term "0,1,0,0,0"))
(rule "double_not" (formula "3") (term "0,0,1,0,0,0"))
(rule "distr_forallAnd" (formula "3") (term "0"))
(rule "distr_forallAnd" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "ex_pull_out3" (formula "3") (term "0,0"))
(rule "cnf_rightDist" (formula "3") (term "0,0,0"))
(rule "commute_or" (formula "3") (term "1,0,0,0"))
(rule "all_pull_out3" (formula "4") (term "0,0"))
(rule "shift_paren_or" (formula "4") (term "0,0,0"))
(rule "allLeft" (formula "3") (inst "t=x5_0"))
(rule "allLeft" (formula "3") (inst "t=x7_0"))
(rule "exLeft" (formula "3") (inst "sk=x3_0"))
(rule "andLeft" (formula "3"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "9"))
(rule "concrete_or_2" (formula "3"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
(rule "concrete_or_2" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "allLeft" (formula "7") (inst "t=x5_0") (notes "useless"))
(rule "allLeft" (formula "6") (inst "t=x5_0"))
(rule "allLeft" (formula "7") (inst "t=x6_0"))
(rule "allLeft" (formula "6") (inst "t=x6_0"))
(rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
(rule "concrete_not_1" (formula "6") (term "0,0,0"))
(rule "concrete_or_2" (formula "6") (term "0,0"))
(rule "allLeft" (formula "11") (inst "t=x6_0") (notes "useless"))
(rule "allLeft" (formula "8") (inst "t=x7_0"))
(rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
(rule "concrete_not_1" (formula "8") (term "0,0,0"))
(rule "concrete_or_2" (formula "8") (term "0,0"))
(rule "allLeft" (formula "6") (inst "t=x3_0"))
(rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
(rule "concrete_not_1" (formula "6") (term "0"))
(rule "concrete_or_2" (formula "6"))
(rule "allLeft" (formula "9") (inst "t=x3_0"))
(rule "replace_known_right" (formula "9") (term "1") (ifseqformula "16"))
(rule "concrete_or_4" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "close" (formula "15") (ifseqformula "6"))
)
}
