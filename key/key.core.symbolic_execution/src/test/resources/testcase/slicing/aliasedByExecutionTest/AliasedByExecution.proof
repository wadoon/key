\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Mon Dec 12 19:32:13 CET 2022
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:noRestriction , modelFields-modelFields\\:showSatisfiability , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=Symbolic Execution Strategy
[Strategy]MaximumNumberOfAutomaticApplications=1000
[Strategy]Timeout=-1
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Mon Dec 12 19:32:13 CET 2022
addSymbolicExecutionLabel=true
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
contract=AliasedByExecution[AliasedByExecution\\:\\:magic(AliasedByExecution,AliasedByExecution)].JML normal_behavior operation contract.0
name=AliasedByExecution[AliasedByExecution\\:\\:magic(AliasedByExecution,AliasedByExecution)].JML normal_behavior operation contract.0
";

\proof {
(keyLog "0" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "2" (keyUser "bubel" ) (keyVersion "8085bc83c7"))

(autoModeTime "890")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_magic,savedHeapBefore_magic"))
 (builtin "One Step Simplification" (formula "7"))
(rule "assignment_write_attribute" (formula "7") (term "1"))
(branch "Normal Execution (_a != null)"
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
   (rule "false_right" (formula "7"))
   (rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "eqSymm" (formula "7") (term "0,0,1,0"))
   (rule "ifSplit" (formula "7"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "8"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "assignment_write_attribute" (formula "8") (term "1"))
      (branch "Normal Execution (_b != null)"
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
         (rule "false_right" (formula "8"))
         (rule "blockEmpty" (formula "8") (term "1"))
         (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "6") (term "1,0,1,0") (ifseqformula "1"))
         (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_1"))
         (rule "assignment_read_attribute" (formula "6") (term "1"))
         (branch "Normal Execution (_a != null)"
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
            (rule "false_right" (formula "6"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "pullOutSelect" (formula "6") (term "0,1,0") (inst "selectSK=AliasedByExecution_value_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "methodCallReturn" (formula "6") (term "1"))
            (rule "assignment" (formula "6") (term "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "methodCallEmpty" (formula "6") (term "1"))
            (rule "tryEmpty" (formula "6") (term "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "emptyModality" (formula "6") (term "1"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "closeTrue" (formula "6"))
         )
         (branch "Null Reference (_a = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_b = null)"
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "8"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
      (rule "assignment_read_attribute" (formula "8") (term "1"))
      (branch "Normal Execution (_a != null)"
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "6")))
         (rule "false_right" (formula "8"))
         (rule "pullOutSelect" (formula "8") (term "0,1,0") (inst "selectSK=AliasedByExecution_value_0"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "9") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "methodCallReturn" (formula "8") (term "1"))
         (rule "assignment" (formula "8") (term "1"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "tryEmpty" (formula "8") (term "1"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "emptyModality" (formula "8") (term "1"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "closeTrue" (formula "8"))
      )
      (branch "Null Reference (_a = null)"
          (builtin "One Step Simplification" (formula "9"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (_a = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
   (rule "closeFalse" (formula "1"))
)
)
}
