\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Sun Jun 05 12:49:15 CEST 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=Symbolic Execution Strategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:on , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:noRestriction , modelFields-modelFields\\:showSatisfiability , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:allow , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Sun Jun 05 12:49:15 CEST 2022
addSymbolicExecutionLabel=true
contract=BlockContractAssignableEverything[BlockContractAssignableEverything\\:\\:main()].JML normal_behavior operation contract.0
name=BlockContractAssignableEverything[BlockContractAssignableEverything\\:\\:main()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "2" (keyUser "arne" ) (keyVersion "918167e5141904ed2eb706a9d176ad9ff56d9421"))

(autoModeTime "657")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "elementOfSetMinus" (formula "3") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_main,savedHeapBefore_main"))
 (builtin "One Step Simplification" (formula "3"))
(rule "activeUseStaticFieldWriteAccess" (formula "3") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "assignment" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "assignment_write_static_attribute" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "activeUseStaticFieldWriteAccess" (formula "3") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x_1"))
(rule "assignment" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "assignment_write_static_attribute" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
 (builtin "Block Contract (Internal)" (formula "3") (newnames "anon_heap,result_0,exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "4"))
    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
   (rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "exc_0_1"))
   (rule "assignment" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "activeUseStaticFieldWriteAccess" (formula "4") (term "1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_4"))
   (rule "assignment" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "assignment_write_static_attribute" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "activeUseStaticFieldWriteAccess" (formula "4") (term "1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_5"))
   (rule "assignment" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "assignment_write_static_attribute" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "elementOfSetMinus" (formula "4") (term "0,0,0,0,1,0,1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "tryEmpty" (formula "4") (term "1"))
   (rule "blockEmptyLabel" (formula "4") (term "1"))
   (rule "blockEmpty" (formula "4") (term "1"))
   (rule "methodCallEmpty" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "emptyModality" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "closeTrue" (formula "4"))
)
(branch "Precondition"
    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
   (rule "wellFormedStorePrimitive" (formula "3"))
   (rule "wellFormedStorePrimitive" (formula "3"))
   (rule "close" (formula "3") (ifseqformula "1"))
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "4"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "ifUnfold" (formula "5") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
   (rule "inequality_comparison_simple" (formula "5") (term "1"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "replace_known_left" (formula "5") (term "0,0,1,0") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "ifSplit" (formula "5"))
   (branch "if x_2 true"
       (builtin "One Step Simplification" (formula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_2 false"
       (builtin "One Step Simplification" (formula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "5") (term "1"))
      (rule "returnUnfold" (formula "5") (term "1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_3"))
      (rule "activeUseStaticFieldReadAccess" (formula "5") (term "1"))
      (rule "assignment_read_static_attribute" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "pullOutSelect" (formula "5") (term "0,1,0") (inst "selectSK=BlockContractAssignableEverything_x_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "methodCallReturn" (formula "5") (term "1"))
      (rule "assignment" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "methodCallEmpty" (formula "5") (term "1"))
      (rule "tryEmpty" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "emptyModality" (formula "5") (term "1"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "closeTrue" (formula "5"))
   )
)
)
}
