\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Feb 12 08:44:28 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Fri Feb 12 08:44:28 CET 2016
name=oexpEqualsZero
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
rule equiv_right;
rule commute_and;
cut 'f_j=o_0';
rule applyEq 
     formula='oexp(f_i, f_j) = o_0' occ=2;
rule hide_left
  formula='f_j = o_0';
auto steps=2;
rule eqSymm formula='o_1 = o_0';
tryclose branch;
rule andRight;
rule notRight;
tryclose branch;
rule olt_total_Axiom;
instantiate hide var=nv  with=f_i ;
instantiate hide var=nv1 with=o_0 ;
rule orLeft;
tryclose branch;
rule hide_right
 formula='f_i = o_0';
rule hide_right
 formula='f_j = o_0';
cut '\forall Ord k;(oexp(f_i,k)!=o_0)';
tryclose branch;
rule oInd;
rule hide_right
 formula='\forall Ord k; !oexp(f_i, k) = o_0';
rule notRight;
rule hide_left formula='olt(o_0, f_i)';
rule hide_left formula='oexp(f_i, f_j) = o_0';
rule eqSymm;
# Base case closed
tryclose branch;
rule hide_right
 formula='\forall Ord k; !oexp(f_i, k) = o_0';
rule allRight;
rule impRight;
rule notLeft;
rule notRight;
rule oexp_DefSucc;
rule otimesZero;
tryclose branch;
# Successor Case closed
rule hide_right
 formula='\forall Ord k; !oexp(f_i, k) = o_0';
rule allRight;
rule impRight;
rule andLeft;
rule notRight;
rule oexp_DefLim
  formula='oexp(f_i, nv1_2) = o_0';
rule osupDef;
rule hide_left
 formula='\forall Ord nv2;
   (   \forall Ord nv1;
         (olt(nv1, nv1_2) -> oleq(oexp(f_i, nv1), nv2))
    -> oleq(osup{Ord nv;}(nv1_2, oexp(f_i, nv)), nv2))';
rule hide_left
 formula='\forall Ord k; (olt(k, nv1_2) -> !oexp(f_i, k) = o_0)';
instantiate hide var=nv1 with=o_0;
rule impLeft;
# Limit case closed
# top case 1 also closed
tryclose branch;
tryclose branch;
rule andLeft;
cut '!olt(o_0,f_j)';
rule hide_right
  formula='oexp(f_i, f_j) = o_0';
rule hide_left formula='f_i = o_0';
rule olt_total_Axiom;
tryclose branch;
rule notRight;
cut 'oexp(o_0, f_j) = o_0';
rule hide_left formula='!f_j = o_0';
rule hide_left formula='olt(o_0, f_j)';
tryclose branch;
tryclose;
"
