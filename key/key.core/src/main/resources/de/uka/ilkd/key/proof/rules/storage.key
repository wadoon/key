\sorts {
	Field;
	Heap; // Replace with 'Memory'?
	Path;
	Storage;
	Struct;
	
	\generic alphaObj \extends Object;
}

\functions {
	// Storage; structs
	Struct emptyStruct();
	Struct writeStruct(Struct, Field, any);
	alpha alpha::readStruct(Struct, Field);
	
	// Storage; contracts
	Storage emptyStg();
	Storage writeField(Storage, Field, any);
	alpha alpha::readField(Storage, Field);
	
	// Storage to memory
	Heap struct2Mem(Heap, Object, Struct);
	
	// Storage variables
	\unique Path loneStoragePath(Field);
	\unique Path consStoragePath(Struct, Path);
	Storage writePath(Storage, Path, Any);
	alpha alpha::readPath(Storage, Path);
	
	// default value for a field
    alpha alpha::defaultValue;
}

\predicates {
	dataLocIsCalldata(Object);
	dataLocIsMemory(Object);
	dataLocIsStorage(Object);
}