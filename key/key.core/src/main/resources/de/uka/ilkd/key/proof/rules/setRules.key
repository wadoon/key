// NOTE (DS, 2019-02-08): I deactivated automatic rule application
// for those rules (by removing the rule set associations) because
// they lead to an infinite loop when used with abstract execution.
// To prevent this, the strategies will have to be tuned. In any case,
// for AE I don't need them currently. The strategies use a lot of
// commute and assoc rule apps while maybe trying to make two terms
// (which still have Java blocks) equal and don't do any other rule
// applications, not even SE rules. That problem doesn't occur for
// LocSets in assignable proof obligations since those are until the
// end in the scope of a modality (where they are deactivated) and
// then there is no *relational* property to be shown...

\rules {
    commuteSetUnion {
    	\schemaVar \term Set commLeft, commRight;
    	\find(setUnion(commLeft, commRight))
    	\replacewith(setUnion(commRight, commLeft))
        //\heuristics(cnf_setComm)
    };

    commuteSetUnion2 {
    	\schemaVar \term Set commLeft, commRight, s;
    	\find(setUnion(setUnion(s, commLeft), commRight))
    	\replacewith(setUnion(setUnion(s, commRight), commLeft))
        //\heuristics(cnf_setComm)
    };
    
    associativeLawSetUnion {
    	\schemaVar \term Set s1, s2, s3;
    	\find(setUnion(s1, setUnion(s2, s3)))
    	\replacewith(setUnion(setUnion(s1, s2), s3))
        //\heuristics(conjNormalForm)
    };
    
    setUnionWithItself {
        \schemaVar \term Set s;
        \find(setUnion(s, s))
        \replacewith(s)
        \heuristics(concrete)
    };
    
    setUnionWithItself2 {
        \schemaVar \term Set s1, s2;
        \find(setUnion(setUnion(s1, s2), s2))
        \replacewith(setUnion(s1, s2))
        \heuristics(concrete)
    };
    
}