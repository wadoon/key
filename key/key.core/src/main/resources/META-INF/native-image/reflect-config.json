[
{
  "name":"de.uka.ilkd.key.java.Recoder2KeYConverter",
  "methods":[
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.CatchAllStatement"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.Ghost"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.ImplicitIdentifier"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.MethodBodyStatement"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.PassiveExpression"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.TransactionStatement"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.AllFields"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.AllObjects"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.Intersect"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SeqConcat"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SeqGet"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SeqIndexOf"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SeqLength"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SeqReverse"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SeqSingleton"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SeqSub"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SetMinus"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.SetUnion"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.adt.Singleton"] }, 
    {"name":"convert","parameterTypes":["recoder.java.CompilationUnit"] }, 
    {"name":"convert","parameterTypes":["recoder.java.Identifier"] }, 
    {"name":"convert","parameterTypes":["recoder.java.JavaProgramElement"] }, 
    {"name":"convert","parameterTypes":["recoder.java.PackageSpecification"] }, 
    {"name":"convert","parameterTypes":["recoder.java.StatementBlock"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.ClassDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.ConstructorDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.Extends"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.FieldDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.FieldSpecification"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.Implements"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.InterfaceDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.LocalVariableDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.MethodDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.ParameterDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.Throws"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.VariableSpecification"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.modifier.Abstract"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.modifier.Final"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.modifier.Private"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.modifier.Protected"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.modifier.Public"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.modifier.Static"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.ParenthesizedExpression"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.literal.BooleanLiteral"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.literal.IntLiteral"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.literal.NullLiteral"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.literal.StringLiteral"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.BinaryAnd"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.BinaryAndAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.BinaryNot"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.BinaryOr"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.BinaryOrAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.BinaryXOr"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.BinaryXOrAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Conditional"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.CopyAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Divide"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.DivideAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Equals"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.GreaterOrEquals"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.GreaterThan"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Instanceof"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.LessOrEquals"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.LessThan"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.LogicalAnd"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.LogicalNot"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.LogicalOr"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Minus"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.MinusAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Modulo"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.ModuloAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Negative"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.New"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.NotEquals"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Plus"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.PlusAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Positive"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.PostDecrement"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.PostIncrement"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.PreDecrement"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.PreIncrement"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.ShiftLeft"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.ShiftLeftAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.ShiftRight"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.ShiftRightAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.Times"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.TimesAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.TypeCast"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.UnsignedShiftRight"] }, 
    {"name":"convert","parameterTypes":["recoder.java.expression.operator.UnsignedShiftRightAssignment"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.ArrayLengthReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.ArrayReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.FieldReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.MethodReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.PackageReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.SuperConstructorReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.SuperReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.ThisConstructorReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.ThisReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.TypeReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.VariableReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Assert"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Break"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Catch"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Do"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Else"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.EmptyStatement"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.EnhancedFor"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Finally"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.If"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.LabeledStatement"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Return"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.SynchronizedBlock"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Then"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Throw"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.Try"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.While"] }
  ]
},
{
  "name":"de.uka.ilkd.key.java.SchemaRecoder2KeYConverter",
  "methods":[
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.CatchSVWrapper"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.ContextStatementBlock"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.ExecCtxtSVWrapper"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.ExecutionContext"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.ExpressionSVWrapper"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.LabelSVWrapper"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.LoopScopeBlock"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.MergePointStatement"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.MethodSignatureSVWrapper"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.ProgramVariableSVWrapper"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.RKeYMetaConstruct"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.RKeYMetaConstructExpression"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.RKeYMetaConstructType"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.RMethodBodyStatement"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.RMethodCallStatement"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.StatementSVWrapper"] }, 
    {"name":"convert","parameterTypes":["de.uka.ilkd.key.java.recoderext.TypeSVWrapper"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.LocalVariableDeclaration"] }, 
    {"name":"convert","parameterTypes":["recoder.java.declaration.VariableSpecification"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.FieldReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.MethodReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.SuperReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.ThisReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.reference.TypeReference"] }, 
    {"name":"convert","parameterTypes":["recoder.java.statement.For"] }
  ]
},
{
  "name":"de.uka.ilkd.key.java.declaration.modifier.Native",
  "methods":[{"name":"<init>","parameterTypes":["org.key_project.util.ExtList"] }]
},
{
  "name":"de.uka.ilkd.key.java.statement.Continue",
  "methods":[{"name":"<init>","parameterTypes":["org.key_project.util.ExtList"] }]
}
]
