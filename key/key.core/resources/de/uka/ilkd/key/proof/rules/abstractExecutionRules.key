\sorts {
    \abstract java.lang.Throwable \extends java.lang.Object;
}

\schemaVariables {
    \modalOperator { diamond, box, diamond_transaction, box_transaction } #allmodal;
    
    \formula post;
    \update upd;
    
    \skolemFormula C_sk;
    \skolemUpdate U_sk;
    
    \program AbstractProgram #absProg;
    \program Statement #s;
    \program Expression #e;
    \program Variable #v0, v1, v2;
}

\rules(programRules:Java) {
    abstractExecution {
        \find (==> {upd}\modality{#allmodal}{.. #absProg ...}\endmodality(post))
        \varcond(\new(#v0, java.lang.Throwable))
        "Normal Execution":
            \replacewith (==> {upd}{U_sk}\modality{#allmodal}{.. ...}\endmodality(post))
            \add ({upd}{U_sk} C_sk ==>)
    };

}

\rules(programRules:Java, lazySymbExec:on) {
     lazyLoop {
         \find (\modality{#allmodal}{.. while(#e) #s ...}\endmodality(post))
         \replacewith ({U_sk} \modality{#allmodal}{.. ...}\endmodality(post))
         \add ( C_sk ==> )
         \heuristics(simplify_prog)
     };
}
