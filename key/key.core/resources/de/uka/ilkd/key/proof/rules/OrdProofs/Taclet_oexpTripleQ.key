\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Mar 03 16:36:28 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NONE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Thu Mar 03 16:36:28 CET 2016
name=oexpTripleQ
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript"
rule allRight;
rule allRight;
rule oInd;
# Base case closes automatically
tryclose branch;
# Successor case starts here
rule hide_right
  formula='\forall Ord v_k;
     oexp(oexp(v_i_0, v_j_0), v_k)
   = oexp(v_i_0, otimes(v_j_0, v_k))';
rule allRight;
rule impRight;
rule oexp_DefSucc;
rule applyEq
  formula='  otimes(oexp(oexp(v_i_0, v_j_0), v_k_3),
          oexp(v_i_0, v_j_0))
 = oexp(v_i_0, otimes(v_j_0, oadd(v_k_3, o_1)))' occ=1;
rule hide_left
  formula='  oexp(oexp(v_i_0, v_j_0), v_k_3)
 = oexp(v_i_0, otimes(v_j_0, v_k_3))';
rule otimes_DefSucc
  formula='otimes(oexp(v_i_0, otimes(v_j_0, v_k_3)),
          oexp(v_i_0, v_j_0))
 = oexp(v_i_0, otimes(v_j_0, oadd(v_k_3, o_1)))';
rule oexpDistr;
instantiate hide var=i with=v_i_0 ;
instantiate hide var=j with='otimes(v_j_0, v_k_3)' ;
instantiate hide var=k with=v_j_0 ;
tryclose branch;
# Limit case starts here
rule hide_right
  formula='\forall Ord v_k;
     oexp(oexp(v_i_0, v_j_0), v_k)
   = oexp(v_i_0, otimes(v_j_0, v_k))';
rule allRight;
rule impRight;
rule andLeft;
cut 'v_j_0 = o_0';
tryclose branch;
cut '!olt(o_0,v_j_0)';
rule notLeft;
rule hide_left
  formula='\forall Ord v_k;
   (   olt(v_k, nv1_2)
    ->   oexp(oexp(v_i_0, v_j_0), v_k)
       = oexp(v_i_0, otimes(v_j_0, v_k)))';
rule hide_right
  formula='oexp(oexp(v_i_0, v_j_0), nv1_2)
 = oexp(v_i_0, otimes(v_j_0, nv1_2))';
rule olt_total_Axiom;
instantiate hide var=nv  with=o_0 ;
instantiate hide var=nv1 with=v_j_0 ;
tryclose branch;
rule notRight;
cut '!lim(otimes(v_j_0, nv1_2))';
rule notLeft;
rule olimtimes1;
tryclose branch;
rule notRight;
cut 'v_i_0=o_0';
rule hide_left
  formula='\forall Ord v_k;
   (   olt(v_k, nv1_2)
    ->   oexp(oexp(v_i_0, v_j_0), v_k)
       = oexp(v_i_0, otimes(v_j_0, v_k)))';
cut '!oexp(v_i_0, v_j_0)=o_0';
rule notLeft;
tryclose branch;
rule notRight;
rule olimDef
  formula='lim(nv1_2)';
rule andLeft;
rule hide_left
  formula='!\exists Ord nv; nv1_2 = oadd(nv, o_1)';
rule notLeft;
cut '!olt(o_0,nv1_2)';
rule notLeft;
rule olt_total_Axiom;
instantiate hide var=nv  with=o_0 ;
instantiate hide var=nv1 with=nv1_2 ;
tryclose branch;
cut 'v_i_0=o_1';
tryclose branch;
cut '!olt(o_1,v_i_0)';
rule notLeft;
rule hide_left
  formula='\forall Ord v_k;
   (   olt(v_k, nv1_2)
    ->   oexp(oexp(v_i_0, v_j_0), v_k)
       = oexp(v_i_0, otimes(v_j_0, v_k)))';
rule hide_right
  formula='  oexp(oexp(v_i_0, v_j_0), nv1_2)
 = oexp(v_i_0, otimes(v_j_0, nv1_2))';
rule hide_left
  formula='lim(otimes(v_j_0, nv1_2))';
rule hide_left
  formula='lim(nv1_2)';
rule olt_total_Axiom;
instantiate hide var=nv  with=v_i_0 ;
instantiate hide var=nv1 with=o_1 ;
tryclose branch;
rule notRight;
cut 'v_j_0=o_1';
tryclose branch;
cut '!olt(o_1,v_j_0)';
rule notLeft;
rule hide_left
  formula='\forall Ord v_k;
   (   olt(v_k, nv1_2)
    ->   oexp(oexp(v_i_0, v_j_0), v_k)
       = oexp(v_i_0, otimes(v_j_0, v_k)))';
rule hide_right
  formula='  oexp(oexp(v_i_0, v_j_0), nv1_2)
 = oexp(v_i_0, otimes(v_j_0, nv1_2))';
rule hide_left
  formula='lim(otimes(v_j_0, nv1_2))';
rule hide_left
  formula='lim(nv1_2)';
rule olt_total_Axiom;
instantiate hide var=nv  with=v_j_0 ;
instantiate hide var=nv1 with=o_1 ;
tryclose branch;
rule notRight;
rule oexpRightNondecreasing;
instantiate hide var=x with=v_i_0 ;
instantiate hide var=y with=v_j_0 ;
rule impLeft;
tryclose branch;
rule hide_left
  formula='olt(o_0, v_j_0)';
rule oleqolt_trans
 formula='oleq(v_j_0, oexp(v_i_0, v_j_0))';
rule hide_left
  formula='oleq(v_j_0, oexp(v_i_0, v_j_0))';
rule hide_right
  formula='v_j_0 = o_1'  ;
rule hide_right
  formula='v_i_0 = o_1'  ;
rule hide_right
  formula='v_i_0 = o_0'  ;
rule hide_right
  formula='v_j_0 = o_0'  ;
cut '!olt(o_0, oexp(v_i_0, v_j_0))';
rule notLeft;
tryclose branch;
rule notRight;
cut '!olt(o_0,v_i_0)';
rule notLeft;
tryclose branch;
rule notRight;
rule oexp_DefLim 
  formula='oexp(oexp(v_i_0, v_j_0), nv1_2)
 = oexp(v_i_0, otimes(v_j_0, nv1_2))'  occ=0;
rule oexp_DefLim 
  formula='  osup{Ord nv;}(nv1_2, oexp(oexp(v_i_0, v_j_0), nv))
 = oexp(v_i_0, otimes(v_j_0, nv1_2))' occ=1;
rule osupMutualCofinal;
rule andRight;
rule allRight;
rule impRight;
instantiate hide var=j 
                 with='otimes(v_j_0,i_0)';
rule andRight;
rule otimesMonotoneQ;
instantiate hide var=k  with=v_j_0 ;
instantiate hide var=i  with=i_0 ;
instantiate hide var=j  with= nv1_2;
rule impLeft;
tryclose branch;
instantiate var=v_k with=i_0;
rule impLeft;
tryclose branch;
rule allRight;
rule impRight;
rule oleastMultiple;
instantiate hide var=i with= j_2;
instantiate hide var=j with=v_j_0 ;
rule impLeft;
rule hide_right
  formula='\exists Ord i;
   (  olt(i, nv1_2)
    & oleq(oexp(v_i_0, j_2), oexp(oexp(v_i_0, v_j_0), i)))';
rule hide_left
 formula='\forall Ord v_k;
   (   olt(v_k, nv1_2)
    ->   oexp(oexp(v_i_0, v_j_0), v_k)
       = oexp(v_i_0, otimes(v_j_0, v_k)))';
tryclose branch;
rule exLeft;
rule andLeft;
rule oltleq_trans
  formula='olt(j_2, otimes(v_j_0, nv1_2))';
cut '!olt(k_1,nv1_2)';
rule notLeft;
rule otimesMonotoneRev
 formula='olt(otimes(v_j_0, k_1), otimes(v_j_0, nv1_2))';
tryclose branch;
rule notRight;
rule olimDefEquiv
  formula='lim(nv1_2)';
rule andLeft;
instantiate hide var=ov with=k_1 ;
rule impLeft;
tryclose branch;
instantiate hide var=v_k with='oadd(k_1, o_1)' ;
rule impLeft;
tryclose branch;
instantiate hide var=i with='oadd(k_1, o_1)' ;
rule andRight;
tryclose branch;
rule oexpRightMonotoneQ;
instantiate hide var=x  with=v_i_0 ;
instantiate hide var=y1 with=j_2 ;
instantiate hide var=y2 with='otimes(v_j_0, oadd(k_1, o_1))' ;
rule impLeft;
tryclose;

"
