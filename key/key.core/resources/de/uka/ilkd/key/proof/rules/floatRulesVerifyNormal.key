// This file is part of KeY - Integrated Deductive Software Design
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2014 Karlsruhe Institute of Technology, Germany
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General
// Public License. See LICENSE.TXT for details.
// 


\schemaVariables {
  \term float f1, f2;
}


\rules(programRules:Java, floatRules:verifyResultsAreNormal){

  translateJavaAddFloat {
     \find(javaAddFloat(f1, f2))
     \replacewith(\if (floatIsNormal(addFloatIEEE(RNE, f1, f2)))
                  \then (addFloatIEEE(RNE, f1, f2))
                  \else (javaAddFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaAddFP"
  };

  translateJavaSubFloat {
     \find(javaSubFloat(f1, f2))
     \replacewith(\if (floatIsNormal(subFloatIEEE(RNE, f1, f2)))
                  \then (subFloatIEEE(RNE, f1, f2))
                  \else (javaSubFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaSubFP"
  };

  translateJavaMulFloat {
     \find(javaMulFloat(f1, f2))
     \replacewith(\if (floatIsNormal(mulFloatIEEE(RNE, f1, f2)))
                  \then (mulFloatIEEE(RNE, f1, f2))
                  \else (javaMulFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaMulFP"
  };

  translateJavaDivFloat {
     \find(javaDivFloat(f1, f2))
     \replacewith(\if (floatIsNormal(divFloatIEEE(RNE, f1, f2)))
                  \then (divFloatIEEE(RNE, f1, f2))
                  \else (javaDivFloatForbiddenResult(f1, f2)))
     \heuristics(javaFloatSemantics)
     \displayname "translateJavaDivFP"
  };

}
