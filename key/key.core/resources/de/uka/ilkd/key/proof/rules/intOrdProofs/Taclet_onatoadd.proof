\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Dec 16 11:40:39 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=4000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Wed Dec 16 11:40:39 CET 2015
name=onatoadd
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "4b754385aaa12139d9ae3476fcbf24bf4a928cfe"))

(autoModeTime "422559603")

(branch "dummy ID"
(rule "allRight" (formula "1") (newnames "v_n,v_m") (inst "sk=v_n_0"))
(rule "auto_int_induction_geqZero" (formula "1") (inst "sk=v_m_0") (userinteraction))
(branch "Base Case"
   (builtin "One Step Simplification" (formula "1"))
   (rule "leq_literals" (formula "1") (term "1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeTrue" (formula "1"))
)
(branch "Step Case (positive)"
   (rule "impRight" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "impRight" (formula "3") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0") (userinteraction))
   (rule "onatSuccDef" (inst "n=n") (userinteraction))
   (rule "instAll" (formula "6") (term "0,0,0") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "7") (term "0,0,1,1") (ifseqformula "2") (userinteraction))
   (rule "hide_left" (formula "3") (userinteraction))
   (rule "geq_to_leq" (formula "5") (userinteraction))
   (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "5") (userinteraction))
   (rule "cut_direct" (formula "2") (term "0") (userinteraction))
   (branch "CUT: 0 <= v_n_0 + v_m_0 TRUE"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "3") (userinteraction))
      (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "4") (userinteraction))
      (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "6") (userinteraction))
      (builtin "One Step Simplification" (formula "7"))
      (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "1") (userinteraction))
      (rule "oadd_DefSucc" (formula "8") (term "1") (userinteraction))
      (rule "olt_total_Axiom" (inst "nv=nv") (inst "nv1=nv1") (userinteraction))
      (rule "instAll" (formula "9") (term "0,0") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "instAll" (formula "9") (term "0,1") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "orLeft" (formula "1") (userinteraction))
      (branch " olt(onat(v_n_0 + v_m_0), oadd(onat(v_n_0), onat(v_m_0))) | onat(v_n_0 + v_m_0) = oadd(onat(v_n_0), onat(v_m_0))"
         (rule "orLeft" (formula "1") (userinteraction))
         (branch "olt(onat(v_n_0 + v_m_0), oadd(onat(v_n_0), onat(v_m_0)))"
            (rule "oSucc" (inst "nv=nv") (userinteraction))
            (rule "instAll" (formula "2") (term "1") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "3") (term "0") (ifseqformula "1") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "oLeastSucc" (inst "nv=nv") (inst "nv1=nv1") (userinteraction))
            (rule "instAll" (formula "3") (term "0,1") (ifseqformula "1") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "instAll" (formula "4") (term "1") (ifseqformula "2") (userinteraction))
            (rule "hide_left" (formula "2") (userinteraction))
            (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4") (userinteraction))
            (builtin "One Step Simplification" (formula "3"))
            (rule "oleqolt_trans" (formula "3") (ifseqformula "2") (userinteraction))
            (rule "oltleq_trans" (formula "1") (ifseqformula "3") (userinteraction))
            (rule "eqSymm" (formula "8"))
            (rule "eqSymm" (formula "12"))
            (rule "eqSymm" (formula "6"))
            (rule "eqSymm" (formula "13"))
            (rule "polySimp_addComm0" (formula "7") (term "1"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "1"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1"))
            (rule "polySimp_addComm0" (formula "6") (term "0,1"))
            (rule "polySimp_addComm0" (formula "13") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1"))
            (rule "oleq_replace" (formula "4"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "inEqSimp_homoInEq0" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1,0"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "inEqSimp_homoInEq0" (formula "10"))
            (rule "mul_literals" (formula "10") (term "1,0"))
            (rule "add_zero_right" (formula "10") (term "0"))
            (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "12"))
            (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "12"))
            (rule "close" (formula "13") (ifseqformula "8"))
         )
         (branch "onat(v_n_0 + v_m_0) = oadd(onat(v_n_0), onat(v_m_0))"
            (rule "onatSuccDef" (inst "n=n") (userinteraction))
            (rule "instAll" (formula "4") (term "0,0,0") (ifseqformula "1") (userinteraction))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "impLeft" (formula "3") (userinteraction))
            (branch "Case 1"
               (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "7") (userinteraction))
               (rule "close" (formula "8") (ifseqformula "2"))
            )
            (branch "Case 2"
               (rule "eqSymm" (formula "1"))
               (rule "eqSymm" (formula "8"))
               (rule "eqSymm" (formula "7"))
               (rule "eqSymm" (formula "3"))
               (rule "polySimp_addComm0" (formula "5") (term "1"))
               (rule "polySimp_addComm0" (formula "2") (term "1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,1"))
               (rule "polySimp_addComm0" (formula "8") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "4"))
               (rule "inEqSimp_commuteLeq" (formula "6"))
               (rule "inEqSimp_homoInEq0" (formula "5"))
               (rule "times_zero_2" (formula "5") (term "1,0"))
               (rule "add_zero_right" (formula "5") (term "0"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "applyEq" (formula "8") (term "1") (ifseqformula "3"))
               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
               (rule "close" (formula "8") (ifseqformula "3"))
            )
         )
      )
      (branch "olt(oadd(onat(v_n_0), onat(v_m_0)), onat(v_n_0 + v_m_0))"
         (rule "eqSymm" (formula "4"))
         (rule "eqSymm" (formula "2"))
         (rule "eqSymm" (formula "9"))
         (rule "eqSymm" (formula "8"))
         (rule "polySimp_addComm0" (formula "6") (term "1"))
         (rule "polySimp_addComm0" (formula "1") (term "0,1"))
         (rule "polySimp_addComm0" (formula "3") (term "1"))
         (rule "polySimp_addComm1" (formula "4") (term "0,1"))
         (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,1"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "0,1"))
         (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "4") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_homoInEq0" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1,0"))
         (rule "add_zero_right" (formula "6") (term "0"))
         (rule "inEqSimp_homoInEq0" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1,0"))
         (rule "add_zero_right" (formula "3") (term "0"))
         (rule "applyEq" (formula "9") (term "1") (ifseqformula "4"))
         (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
         (rule "close" (formula "9") (ifseqformula "4"))
      )
   )
   (branch "CUT: 0 <= v_n_0 + v_m_0 FALSE"
      (builtin "One Step Simplification" (formula "2"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "2"))
      (rule "eqSymm" (formula "5") (term "1"))
      (rule "eqSymm" (formula "7"))
      (rule "eqSymm" (formula "1"))
      (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
      (rule "polySimp_addComm0" (formula "3") (term "1"))
      (rule "polySimp_addComm0" (formula "6") (term "1"))
      (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,1"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1"))
      (rule "polySimp_addComm0" (formula "5") (term "0,1"))
      (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "7") (term "0,1"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "5"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_homoInEq0" (formula "4"))
      (rule "mul_literals" (formula "4") (term "1,0"))
      (rule "add_zero_right" (formula "4") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
      (rule "mul_literals" (formula "4") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
      (rule "leq_literals" (formula "4") (term "0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
      (rule "mul_literals" (formula "3") (term "0,0"))
      (rule "add_zero_left" (formula "3") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "polySimp_elimOne" (formula "3") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
)
(branch "Step Case (negative)"
   (rule "impRight" (formula "1"))
   (rule "impRight" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "5"))
   (rule "eqSymm" (formula "4") (term "1"))
   (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "polySimp_elimSub" (formula "2") (term "1"))
   (rule "mul_literals" (formula "2") (term "1,1"))
   (rule "polySimp_elimSub" (formula "5") (term "0,1,0"))
   (rule "mul_literals" (formula "5") (term "1,0,1,0"))
   (rule "polySimp_elimSub" (formula "5") (term "1,0,1"))
   (rule "mul_literals" (formula "5") (term "1,1,0,1"))
   (rule "polySimp_addComm0" (formula "4") (term "0,1,1"))
   (rule "polySimp_addComm0" (formula "2") (term "1"))
   (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "5") (term "0,1"))
   (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "4") (term "0"))
   (rule "inEqSimp_homoInEq0" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1,0"))
   (rule "add_zero_right" (formula "2") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
   (rule "qeq_literals" (formula "3") (term "0"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "closeFalse" (formula "3"))
)
)

}
