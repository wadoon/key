// This file contains the DECLARATIONS for location sets.
// Find the rules in file locSetRules.key

\sorts {
    LocSet;
    ProgVar;
}

\functions {
    // unique function symbols 
    \unique LocSet empty;
    \unique LocSet allLocs;

    // other constructors 
    LocSet singleton(Object, Field);
    LocSet union(LocSet, LocSet);
    LocSet intersect(LocSet, LocSet);
    LocSet setMinus(LocSet, LocSet);
    LocSet infiniteUnion{true}(LocSet);
    LocSet allFields(Object);
    LocSet allObjects(Field);
    LocSet arrayRange(Object, int, int);
    LocSet freshLocs(Heap);
    // work-a-round
    LocSet allElementsOfArray(Heap, Object, LocSet);
    LocSet allElementsOfArrayLocsets(Heap, Object, LocSet);
    
    // Abstract Execution-related constructors
    LocSet singletonPV(any); // A singleton with a program variable
    LocSet final(LocSet);    // Used in declares directives for final Skolem constants
    /* NOTE (DS, 2019-02-13): Actually, the argument to hasTo should be a LocSet,
     * but we want to spare users to put additional stuff around program variables
     * in a hasTo. We will wrap the content into singletonPV when creating abstract updates.
     * UPDATE (DS, 2019-02-27): hasTo is also used as element of the Set LDT, and there
     * we do not supply LocSets as arguments, but program variables and functions directly
     */
    LocSet hasTo(any);       // Used in assignable directives for assignables that have to be assigned
}

\predicates {
    elementOf(Object, Field, LocSet);
    subset(LocSet, LocSet);
    disjoint(LocSet, LocSet);
    createdInHeap(LocSet, Heap);
}
