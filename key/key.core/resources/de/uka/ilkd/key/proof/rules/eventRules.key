\schemaVariables{
	\term Seq histTerm;

 	\term EventType type;
 	\term Object caller;
 	\term Object callee;
	\term MethodIdentifier service;
	\term Seq content;
	\term Heap heap;
}

\rules(sequences:on) {
	//destructor implementations
	evTypeDef {
		\find (evType(event(type, caller, callee, service, content, heap)))
		\replacewith (type)
		\heuristics (simplify)
	};
	evCallerDef {
		\find (evCaller(event(type, caller, callee, service, content, heap)))
		\replacewith (caller)
		\heuristics (simplify)
	};
	evCalleeDef {
		\find (evCallee(event(type, caller, callee, service, content, heap)))
		\replacewith (callee)
		\heuristics (simplify)
	};
	evServiceDef {
		\find (evService(event(type, caller, callee, service, content, heap)))
		\replacewith (service)
		\heuristics (simplify)
	};
	evContentDef {
		\find (evContent(event(type, caller, callee, service, content, heap)))
		\replacewith (content)
		\heuristics (simplify)
	};
	evHeapDef {
		\find (evHeap(event(type, caller, callee, service, content, heap)))
		\replacewith (heap)
		\heuristics (simplify)
	};

	// serviceCall != serviceTermination
	evTypeInequiv1 {
		\find (serviceCall = serviceTermination)
		\replacewith (false)
		\heuristics (simplify)
	};
	evTypeInequiv2 {
		\find (serviceTermination = serviceCall)
		\replacewith (false)
		\heuristics (simplify)
	};

	//wellFormedHistRules
	wfHistImpl {
		\find (wfHist(histTerm))
		\replacewith (true)
		\heuristics (simplify)
	};
}