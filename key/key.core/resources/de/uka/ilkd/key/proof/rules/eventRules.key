\schemaVariables{
	\term Seq histTerm;

 	\term EventType et;
 	\term Object cer;
 	\term Object cee;
	\term Method me;
	\term Seq a;
	\term Heap h;
}

\rules(sequences:on) {
	//destructor implementations
	implTypeFromEvent {
		\find (getTypeFromEvent(event(et, cer, cee, me, a, h)))
		\replacewith (et)
		\heuristics (simplify)
	};
	implCallerFromEvent {
		\find (getCallerFromEvent(event(et, cer, cee, me, a, h)))
		\replacewith (cer)
		\heuristics (simplify)
	};
	implCalleeFromEvent {
		\find (getCalleeFromEvent(event(et, cer, cee, me, a, h)))
		\replacewith (cee)
		\heuristics (simplify)
	};
	implMethodFromEvent {
		\find (getMethodFromEvent(event(et, cer, cee, me, a, h)))
		\replacewith (me)
		\heuristics (simplify)
	};
	implArgumentsFromEvent {
		\find (getArgumentsFromEvent(event(et, cer, cee, me, a, h)))
		\replacewith (a)
		\heuristics (simplify)
	};
	implHeapFromEvent {
		\find (getHeapFromEvent(event(et, cer, cee, me, a, h)))
		\replacewith (h)
		\heuristics (simplify)
	};

	// methodCall != methodTermination
	ev_typeUnequal1 {
		\find (methodCall = methodTermination)
		\replacewith (false)
		\heuristics (simplify)
	};
	ev_typeUnequal2 {
		\find (methodTermination = methodCall)
		\replacewith (false)
		\heuristics (simplify)
	};

	//wellFormedHistRules
	wfHistImpl {
		\find (wfHist(histTerm))
		\replacewith (true)
		\heuristics (simplify)
	}; // TODO KD z do I need anything here?
}