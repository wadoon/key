\sorts {
	Event;
	EventType;
	MethodIdentifier;
}

\functions {
	//constructors
	//type, caller, callee, service, content, heap
	Event event(EventType, Object, Object, MethodIdentifier, Seq, Heap);
	\unique EventType serviceCall;
	\unique EventType serviceTermination;

	//destructors
	EventType evType(Event);
	Object evCaller(Event);
	Object evCallee(Event);
	MethodIdentifier evService(Event);
	Seq evContent(Event);
	Heap evHeap(Event);

	Seq filterInput(Seq);
	Seq filterVisible(Seq);
}

\predicates {
    wfHist(Seq); // =? wellformedList

		wellformedList(Seq);
		wellformedListCoop(Seq);
		coopListEquiv(Seq, Seq);
		equivHistory(Seq,Seq);
		equivHistoryFiltered(Seq,Seq);
		equivEvent(Event, Event);
		invEvent(Event);

    //similarities
    similarHist(Object, Seq, Seq);
    similarEvent(Event, Event);
    similar(any, any, Heap, Heap);

		//Helper predicates for recursive definitions
		wellformedListInternal(Seq);
		wellformedListCoopInternal(Seq);
		correspondingEvents(Event, Event);
		correspondingEventsCoop(Event, Event);
}

\programVariables {
    Seq hist;
		Seq currentParams;
		Object environmentCaller;
}
