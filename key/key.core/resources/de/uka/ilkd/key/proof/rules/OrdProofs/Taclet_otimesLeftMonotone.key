\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Nov 23 23:21:15 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=200
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Mon Nov 23 23:21:15 CET 2015
name=otimesLeftMonotone
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
macro split-prop;
rule oInd;
tryclose branch;
# Zero case closes automatically
# Successor case 
rule hide_right
 formula='\forall Ord v_k; oleq(otimes(f_i, v_k), otimes(f_j, v_k))';
rule allRight;
rule impRight;
rule otimes_DefSucc occ=0;
rule otimes_DefSucc;
rule oleqAddLessRight
  formula='oleq(otimes(f_i, v_k_3), otimes(f_j, v_k_3))';
instantiate hide var=k with=f_i ;
rule oleq_replace
  formula='oleq(f_i, f_j)';
rule orLeft;
rule oltAddLessLeft
  formula='olt(f_i, f_j)';
instantiate hide var=k with='otimes(f_j, v_k_3)';
rule oltleq_trans
  formula='olt(oadd(otimes(f_j, v_k_3), f_i), oadd(otimes(f_j, v_k_3), f_j))';
tryclose branch;
# Limit case
rule hide_right
 formula='\forall Ord v_k; oleq(otimes(f_i, v_k), otimes(f_j, v_k))';
rule allRight;
rule impRight;
rule andLeft;
rule otimes_DefLim occ=0;
rule otimes_DefLim;
rule ifthenelse_split occ=0;
tryclose branch;
rule ifthenelse_split;
instantiate hide var=v_k with=o_1;
rule impLeft;
rule olimDefEquiv;
rule andLeft;
instantiate hide var=ov with=o_0 ;
rule impLeft;
rule oleq_zeroAxiom;
instantiate hide var=nv with=nv1_2;
rule oleq_replace  
  formula='oleq(o_0, nv1_2)';
tryclose branch;
auto  otimesOneRight steps=2;
rule oleq_replace
  formula='oleq(f_i, f_j)';
rule orLeft;
cut 'olt(f_i, o_0)';
tryclose branch;
rule hide_right
 formula='oleq(osup{Ord nv;}(nv1_2, otimes(f_i, nv)), o_0)';
rule hide_right
 formula='f_i = o_0';
rule hide_left
 formula='lim(nv1_2)';
auto;
# here manual interaction is required
tryclose branch;
"
select succedent 
  formula='oleq(osup{Ord nv;}(nv1_2, otimes(f_i, nv)),
           osup{Ord nv;}(nv1_2, otimes(f_j, nv)))';
rule osupLocalLess;
tryclose;
"
