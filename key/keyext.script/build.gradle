plugins {
    id "antlr"
}


dependencies {
    implementation project(":key.core")

    compileOnly "org.projectlombok:lombok:1.18.14"
    annotationProcessor "org.projectlombok:lombok:1.18.14"

    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.3"

    implementation "com.google.guava:guava:27.0.1-jre"
    implementation "org.antlr:antlr4-runtime:4.8-1"
    implementation "org.projectlombok:lombok:1.18.14"
    implementation "junit:junit:4.12"
    //implementation "org.apache.logging.log4j:log4j-api:2.11.0"
    //implementation "org.apache.logging.log4j:log4j-core:2.11.0"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    implementation "commons-cli:commons-cli:1.4"
    implementation "com.github.spullara.mustache.java:compiler:0.9.6"

    implementation "org.antlr:antlr4:4.7.2"
    antlr "org.antlr:antlr4:4.7.2"
}

//https://github.com/gradle/gradle/issues/2565
generateGrammarSource {
    outputs.cacheIf { true }
    final PARSER_PACKAGE_NAME = 'edu.kit.iti.formal.psdbg.parser'
    outputDirectory = file("build/generated-src/antlr/main/")
    sourceSets.main.java.srcDirs += outputDirectory
    arguments += ["-visitor", "-no-listener", "-package", PARSER_PACKAGE_NAME]

    doLast {
        def parserFilePattern = 'Script*'
        def outputPath = generateGrammarSource.outputDirectory.canonicalPath
        def parserPackagePath = "${outputPath}/${PARSER_PACKAGE_NAME.replace('.', '/')}"
        file(parserPackagePath).mkdirs()
        copy {
            from outputPath
            into parserPackagePath
            include parserFilePattern
        }
        delete fileTree(outputPath) {
            include parserFilePattern
        }
    }
}


