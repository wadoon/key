\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jan 23 19:39:50 CET 2020
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=100
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_LOW
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Thu Jan 23 19:39:50 CET 2020
name=intersection_disjoint
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "niklas" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "90")

(branch "dummy ID"
(rule "empty" (newnames "f_set,f_set1") (inst "set=set") (inst "el=el") (userinteraction))
(rule "instAll" (formula "2") (term "0,0,0") (ifseqformula "1") (userinteraction))
(rule "hide_left" (formula "2") (userinteraction))
(rule "is_disjoint" (inst "set=set") (inst "set1=set1") (inst "el=el") (userinteraction))
(rule "instAll" (formula "3") (term "0,0,1") (ifseqformula "1") (userinteraction))
(rule "instAll" (formula "4") (term "1,0,1") (ifseqformula "1") (userinteraction))
(rule "impRight" (formula "5"))
(rule "notRight" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "disjoint_commutative" (formula "3") (term "0,0"))
(rule "intersect_commutative" (formula "5") (term "0,0"))
(rule "intersect_commutative" (formula "5") (term "1,0,0,1"))
(rule "disjoint_commutative" (formula "4") (term "0,0,0"))
(rule "disjoint_commutative" (formula "2") (term "0"))
(rule "disjoint_commutative" (formula "1"))
(rule "intersect_commutative" (formula "6") (term "0"))
(rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
(rule "concrete_eq_1" (formula "2"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "6"))
(rule "concrete_eq_2" (formula "4"))
(rule "double_not" (formula "4"))
(rule "exLeft" (formula "4") (inst "sk=el_0"))
(rule "intersect" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "nnf_ex2all" (formula "6"))
(rule "nnf_notEx" (formula "3") (term "1,0"))
(rule "nnf_notEx" (formula "4") (term "1,0,0"))
(rule "nnf_notAnd" (formula "1") (term "0"))
(rule "nnf_notAnd" (formula "3") (term "0,1,0"))
(rule "nnf_notAnd" (formula "4") (term "0,1,0,0"))
(rule "cnf_eqv" (formula "3") (term "0"))
(rule "nnf_notAll" (formula "3") (term "1,0,0"))
(rule "nnf_notOr" (formula "3") (term "0,1,0,0"))
(rule "double_not" (formula "3") (term "1,0,1,0,0"))
(rule "double_not" (formula "3") (term "0,0,1,0,0"))
(rule "distr_forallAnd" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "cnf_eqv" (formula "5") (term "0,0"))
(rule "nnf_notAll" (formula "5") (term "1,0,0,0"))
(rule "nnf_notOr" (formula "5") (term "0,1,0,0,0"))
(rule "double_not" (formula "5") (term "1,0,1,0,0,0"))
(rule "double_not" (formula "5") (term "0,0,1,0,0,0"))
(rule "distr_forallAnd" (formula "5") (term "0"))
(rule "distr_forallAnd" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "ex_pull_out3" (formula "3") (term "0"))
(rule "cnf_rightDist" (formula "3") (term "0,0"))
(rule "commute_or" (formula "3") (term "1,0,0"))
(rule "ex_pull_out3" (formula "5") (term "0,0"))
(rule "cnf_rightDist" (formula "5") (term "0,0,0"))
(rule "commute_or" (formula "5") (term "1,0,0,0"))
(rule "all_pull_out3" (formula "4") (term "0"))
(rule "shift_paren_or" (formula "4") (term "0,0"))
(rule "all_pull_out3" (formula "6") (term "0,0"))
(rule "shift_paren_or" (formula "6") (term "0,0,0"))
(rule "allLeft" (formula "1") (inst "t=el_0"))
(rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
(rule "concrete_not_1" (formula "1") (term "0"))
(rule "concrete_or_2" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "close" (formula "9") (ifseqformula "7"))
)
}
