\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Feb 13 11:47:23 CET 2020
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Thu Feb 13 11:47:23 CET 2020
name=cardinGeq0
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "niklas" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "446")

(branch "dummy ID"
(rule "SetInduction" (inst "ih=geq(cardinality(f_set), Z(0(#)))") (inst "s=f_set") (inst "e=e") (userinteraction))
(branch "baseCase: Empty"
   (rule "cardin_empty" (formula "1") (term "0"))
   (rule "eqClose" (formula "2") (term "0,0"))
   (rule "concrete_impl_1" (formula "2") (term "0"))
   (rule "double_not" (formula "2"))
   (rule "qeq_literals" (formula "1"))
   (rule "closeTrue" (formula "1"))
)
(branch "Ind. Step"
   (rule "hide_right" (formula "2") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=f_set_0") (userinteraction))
   (rule "impRight" (formula "1") (userinteraction))
   (rule "allRight" (formula "2") (inst "sk=e_0") (userinteraction))
   (rule "cardin_union" (formula "2") (term "0") (userinteraction))
   (rule "cardin_single" (formula "2") (term "1,0,0") (userinteraction))
   (rule "cut" (inst "cutFormula=element(e_0, f_set_0)") (userinteraction))
   (branch "CUT: element(e_0, f_set_0) TRUE"
      (rule "intersect_simplifySingle2" (formula "3") (term "0,1,0") (ifseqformula "1") (userinteraction))
      (rule "cardin_single" (formula "3") (term "1,0") (userinteraction))
      (rule "polySimp_elimSub" (formula "3") (term "0"))
      (rule "mul_literals" (formula "3") (term "1,0"))
      (rule "polySimp_addLiterals" (formula "3") (term "0"))
      (rule "add_zero_right" (formula "3") (term "0"))
      (rule "close" (formula "3") (ifseqformula "2"))
   )
   (branch "CUT: element(e_0, f_set_0) FALSE"
      (rule "intersect_disjointSingle2" (formula "3") (term "0,1,0") (ifseqformula "2") (userinteraction))
      (rule "cardin_empty" (formula "3") (term "1,0") (userinteraction))
      (rule "polySimp_elimSub" (formula "3") (term "0"))
      (rule "times_zero_2" (formula "3") (term "1,0"))
      (rule "add_zero_right" (formula "3") (term "0"))
      (rule "polySimp_addComm0" (formula "3") (term "0"))
      (rule "inEqSimp_geqRight" (formula "3"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use proven theorem"
   (rule "eqClose" (formula "2") (term "0,0"))
   (rule "concrete_impl_1" (formula "2") (term "0"))
   (rule "double_not" (formula "2"))
   (rule "inEqSimp_geqRight" (formula "2"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "allLeft" (formula "2") (inst "t=f_set"))
   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
   (rule "qeq_literals" (formula "2") (term "0"))
   (rule "concrete_and_2" (formula "2"))
   (rule "closeFalse" (formula "2"))
)
)
}
