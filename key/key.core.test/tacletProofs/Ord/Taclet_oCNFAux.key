\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Mar 16 11:51:28 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NONE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Wed Mar 16 11:51:28 CET 2016
name=oCNFAux
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript"
rule allRight;
rule allRight;
rule allRight;
rule impRight;
rule andLeft;
rule andLeft;
rule andLeft;
rule oInd;
# Base case closes automatically
tryclose branch;
# Successor case starts here
rule hide_right
  formula='\forall Ord v_z;
   (   olt(o_0, v_z)
    ->   \exists Ord v_z1;
           (  v_z = oadd(v_z1, o_1)
            &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
              = otimes(oexp(v_x_0, otimes(v_y_0, v_z)),
                       v_m_0))
       | lim(v_z)
       &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
         = oexp(v_x_0, otimes(v_y_0, v_z)))';
rule allRight;
rule impRight;
rule impRight;
rule orRight;
rule hide_right
  formula='  lim(oadd(v_z_3, o_1))
 &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(v_z_3, o_1))
   = oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1)))';
cut 'v_z_3=o_0';
instantiate hide var= v_z1 with=o_0 ;
rule andRight
  formula='  oadd(v_z_3, o_1) = oadd(o_0, o_1)
 &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(v_z_3, o_1))
   = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))),
            v_m_0)';
tryclose branch;
rule impLeft;
tryclose branch;
rule orLeft;
rule exLeft;
rule andLeft;
instantiate hide var=v_z1 with=v_z_3;
rule andRight
  formula='  oadd(v_z_3, o_1) = oadd(v_z_3, o_1)
 &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(v_z_3, o_1))
   = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))),
            v_m_0) ';
tryclose branch;
rule oexp_DefSucc
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(v_z_3, o_1))
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)';
rule applyEq
  formula='  otimes(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z_3),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)' occ=1;
rule hide_left
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z_3)
 = otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)), v_m_0)';
cut '!(otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),v_m_0),
       otimes(oexp(v_x_0,v_y_0),v_m_0))
              =
       otimes(otimes(oexp(v_x_0,otimes(v_y_0,v_z_3)),
                     otimes(v_m_0,oexp(v_x_0,v_y_0))),
              v_m_0))';
rule notLeft;
rule hide_right
  formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)), v_m_0),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)';
rule otimesAssocQ;
instantiate var=i with='otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),v_m_0)' ;
instantiate hide var=j with= 'oexp(v_x_0,v_y_0)';
instantiate hide var=k with='v_m_0' ;
rule applyEq
 formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)), v_m_0),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
                 otimes(v_m_0, oexp(v_x_0, v_y_0))),
          v_m_0)' occ=0;
rule hide_left
  formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)), v_m_0),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
                        v_m_0),
                 oexp(v_x_0, v_y_0)),
          v_m_0)';
instantiate hide var=i with='oexp(v_x_0, otimes(v_y_0, v_z_3))' ;
instantiate hide var=j with= v_m_0;
instantiate hide var=k with= 'oexp(v_x_0, v_y_0)';
tryclose branch;
rule notRight;
rule applyEq
  formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)), v_m_0),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)' occ=0;
rule hide_left
  formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)), v_m_0),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
                 otimes(v_m_0, oexp(v_x_0, v_y_0))),
          v_m_0)';
cut '!lim(oexp(v_x_0, v_y_0))';
rule notLeft; rule hide_right
  formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
                 otimes(v_m_0, oexp(v_x_0, v_y_0))),
          v_m_0)
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)';
rule olimexp1limQ;
instantiate hide var=i with=v_x_0  ;
instantiate hide var=j with=v_y_0  ;
rule impLeft;
tryclose branch;
rule notRight;
cut '!otimes(v_m_0, oexp(v_x_0, v_y_0))= oexp(v_x_0, v_y_0)';
rule notLeft;
tryclose branch;
rule notRight;
cut 'otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
                 oexp(v_x_0, v_y_0)), v_m_0)
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)';
tryclose branch;
rule hide_right
 formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
                 otimes(v_m_0, oexp(v_x_0, v_y_0))),
          v_m_0)
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)';
rule oexpDistr;
instantiate hide var=i with=v_x_0 ;
instantiate hide var=j with='otimes(v_y_0, v_z_3)' ;
instantiate hide var=k with=v_y_0;
rule eqSymm formula='  oexp(v_x_0, oadd(otimes(v_y_0, v_z_3), v_y_0))
 = otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
          oexp(v_x_0, v_y_0))';
rule applyEq
  formula='  otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
                 oexp(v_x_0, v_y_0)),
          v_m_0)
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)' occ=1;
rule hide_left
  formula='  otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
          oexp(v_x_0, v_y_0))
 = oexp(v_x_0, oadd(otimes(v_y_0, v_z_3), v_y_0))';
rule hide_left
  formula='otimes(v_m_0, oexp(v_x_0, v_y_0)) = oexp(v_x_0, v_y_0)';
cut 'oexp(v_x_0, oadd(otimes(v_y_0, v_z_3), v_y_0))
     =
   oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1)))';
tryclose branch;
rule hide_right
  formula='  otimes(oexp(v_x_0, oadd(otimes(v_y_0, v_z_3), v_y_0)),
          v_m_0)
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)';
cut 'oadd(otimes(v_y_0, v_z_3), v_y_0)=otimes(v_y_0, oadd(v_z_3, o_1))';
tryclose branch;
rule hide_right
 formula='  oexp(v_x_0, oadd(otimes(v_y_0, v_z_3), v_y_0))
 = oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1)))';
rule otimes_DefSucc formula='  oadd(otimes(v_y_0, v_z_3), v_y_0)
 = otimes(v_y_0, oadd(v_z_3, o_1))';
tryclose branch;
rule andLeft;
instantiate hide var=v_z1 with=v_z_3;
rule andRight;
tryclose branch;
rule oexp_DefSucc
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(v_z_3, o_1))
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)';
rule applyEq
  formula='  otimes(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z_3),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(oexp(v_x_0, otimes(v_y_0, oadd(v_z_3, o_1))), v_m_0)' occ=1;
rule hide_left
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z_3)
 = oexp(v_x_0, otimes(v_y_0, v_z_3))';
rule otimes_DefSucc;
rule oexpDistr;
instantiate hide var=i with=v_x_0 ;
instantiate hide var=j with='otimes(v_y_0, v_z_3)' ;
instantiate hide var=k with=v_y_0 ;
cut '  otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
          oexp(v_x_0, v_y_0)),
          v_m_0)';
tryclose branch;
rule hide_right
  formula='  otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
          otimes(oexp(v_x_0, v_y_0), v_m_0))
 = otimes(oexp(v_x_0, oadd(otimes(v_y_0, v_z_3), v_y_0)),
          v_m_0)';
rule hide_left
 formula='  oexp(v_x_0, oadd(otimes(v_y_0, v_z_3), v_y_0))
 = otimes(oexp(v_x_0, otimes(v_y_0, v_z_3)),
          oexp(v_x_0, v_y_0))';
rule otimesAssocQ;
instantiate hide var=i with='oexp(v_x_0, otimes(v_y_0, v_z_3))' ;
instantiate hide var=j with='oexp(v_x_0, v_y_0)' ;
instantiate hide var=k with=v_m_0 ;
tryclose branch;
#limit case starts here
rule hide_right
  formula='\forall Ord v_z;
   (   olt(o_0, v_z)
    ->   \exists Ord v_z1;
           (  v_z = oadd(v_z1, o_1)
            &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
              = otimes(oexp(v_x_0, otimes(v_y_0, v_z)),
                       v_m_0))
       | lim(v_z)
       &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
         = oexp(v_x_0, otimes(v_y_0, v_z)))';
rule allRight;
rule impRight;
rule andLeft;
rule impRight;
#rule hide_left
#  formula='\forall Ord v_z;
#   (   olt(v_z, nv1_14)
#    -> olt(o_0, v_z)
#    ->   \exists Ord v_z1;
#           (  v_z = oadd(v_z1, o_1)
#            &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
#              = otimes(oexp(v_x_0, otimes(v_y_0, v_z)), v_m_0))
#       | lim(v_z)
#       &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
#         = oexp(v_x_0, otimes(v_y_0, v_z)))';
rule orRight;
rule hide_right
  formula='\exists Ord v_z1;
     (  nv1_14 = oadd(v_z1, o_1)
      &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
        = otimes(oexp(v_x_0, otimes(v_y_0, nv1_14)), v_m_0))';
rule andRight;
tryclose branch;
cut '!olt(o_0,v_x_0)';
rule notLeft;
tryclose branch;
rule notRight;
#
cut '!olt(o_0,otimes(oexp(v_x_0, v_y_0), v_m_0))';
rule notLeft;
rule hide_right
  formula='oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
cut '!olt(o_0,oexp(v_x_0, v_y_0))';
rule notLeft;
rule hide_right
  formula='olt(o_0, otimes(oexp(v_x_0, v_y_0), v_m_0))';
rule oexpRightWeakMonotoneQ;
instantiate hide var=x  with=v_x_0 ;
instantiate hide var=y1 with=o_0 ;
instantiate hide var=y2 with=v_y_0 ;
rule impLeft;
tryclose branch;
rule notRight;
rule hide_left
  formula='olt(o_0, nv1_14)';
rule hide_left
  formula='olt(o_0, v_y_0)';
rule hide_left
  formula='olt(v_m_0, omega)';
rule hide_left
  formula='olt(o_0, v_x_0)';
rule otimesMonotoneQ;
instantiate hide var=k with='oexp(v_x_0, v_y_0)' ;
instantiate hide var=i with=o_0 ;
instantiate hide var=j with=v_m_0 ;
rule impLeft;
tryclose branch;
rule notRight;
rule oexpTripleQ;
instantiate hide var=i with=v_x_0 ;
instantiate hide var=j with= v_y_0;
instantiate hide var=k with= nv1_14;
cut '!olt(o_0,oexp(v_x_0,v_y_0))';
rule notLeft;
rule hide_right
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
cut 'v_x_0=o_1';
tryclose branch;
rule oexpGreaterEqualOne;
instantiate hide var=x with=v_x_0 ;
instantiate hide var=y with=v_y_0 ;
rule impLeft;
tryclose branch;
rule notRight;
rule otimesWeakMonotoneQ;
instantiate hide var=k with='oexp(v_x_0, v_y_0)';
instantiate hide var=i with= o_1 ;
instantiate hide var=j with= v_m_0;
rule impLeft;
tryclose branch;
rule oexpLeftMonotoneQ;
instantiate hide var=x1 with='oexp(v_x_0, v_y_0)' ;
instantiate hide var=x2 with='otimes(oexp(v_x_0, v_y_0), v_m_0)';
instantiate hide var=y  with=nv1_14 ;
rule impLeft;
tryclose branch;
rule oexp_DefLim
  formula='oleq(oexp(oexp(v_x_0, v_y_0), nv1_14),
      oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14))' occ=2;
rule osupDef;
rule hide_left
  formula='\forall Ord nv1;
   (   olt(nv1, nv1_14)
    -> oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1),
            osup{Ord nv;}(nv1_14,
                          oexp(otimes(oexp(v_x_0, v_y_0),
                                      v_m_0),
                               nv))))';
cut '!oleq(osup{Ord nv;}(nv1_14,
                    oexp(otimes(oexp(v_x_0, v_y_0), v_m_0),
                         nv))
     ,
     osup{Ord nv;}(nv1_14,otimes(oexp(v_x_0,otimes(v_y_0,nv)),v_m_0)))';
rule notLeft;
rule hide_right
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
instantiate hide var=nv2 with='osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0))';
rule impLeft;
rule hide_right
  formula='oleq(osup{Ord nv;}(nv1_14,
                    oexp(otimes(oexp(v_x_0, v_y_0), v_m_0),
                         nv)),
      osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0)))';
rule allRight;
rule impRight;
instantiate hide var=v_z with='oadd(nv1_15,o_1)';
rule impLeft;
rule olimDefEquiv
  formula='lim(nv1_14)';
rule andLeft;
instantiate hide var=ov with=nv1_15;
rule impLeft;
tryclose branch;
rule impLeft;
rule hide_right
 formula='oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_15),
      osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0)))';
rule oSucc;
instantiate hide var=nv with=nv1_15;
rule oleq_zeroAxiom;
instantiate hide var=nv with=nv1_15;
rule oltleq_trans
  formula='olt(nv1_15, oadd(nv1_15, o_1))';
tryclose branch;
rule commute_or;
rule orLeft;
rule andLeft;
rule olimDef
  formula='lim(oadd(nv1_15, o_1))';
rule andLeft;
rule notLeft
  formula='!\exists Ord nv; oadd(nv1_15, o_1) = oadd(nv, o_1)';
instantiate hide var=nv with=nv1_15;
tryclose branch;
rule exLeft;
rule andLeft;
cut '!nv1_15 = v_z1_2';
rule notLeft;
tryclose branch;
rule notRight;
#
rule osupDef
 formula='oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_15),
      osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0)))';
rule hide_left
 formula='\forall Ord nv2;
   (   \forall Ord nv1;
         (   olt(nv1, nv1_14)
          -> oleq(otimes(oexp(v_x_0, otimes(v_y_0, nv1)),
                         v_m_0),
                  nv2))
    -> oleq(osup{Ord nv;}(nv1_14,
                          otimes(oexp(v_x_0,
                                      otimes(v_y_0, nv)),
                                 v_m_0)),
            nv2)) ';
instantiate hide var=nv1 with='oadd(nv1_15, o_1)';
rule impLeft;
rule hide_right
  formula='oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_15),
      osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0))) ';
rule olimDefEquiv
  formula='lim(nv1_14)';
rule andLeft;
instantiate hide var=ov with=nv1_15;
rule impLeft;
tryclose branch;
cut '!oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(nv1_15, o_1)),
          osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0)))';
rule notLeft;
rule hide_right
  formula='oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_15),
      osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0))) ';

tryclose branch;
rule notRight;
cut '!oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_15),
          oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(nv1_15, o_1)))';
rule notLeft;
rule hide_right
  formula='oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_15),
      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
rule oexpRightWeakMonotoneQ;
instantiate hide var=x  with= 'otimes(oexp(v_x_0, v_y_0), v_m_0)';
instantiate hide var=y1 with=nv1_15 ;
instantiate hide var=y2 with='oadd(nv1_15, o_1)';
rule impLeft;
tryclose branch;
tryclose branch;
rule notRight;
rule hide_left
  formula='oleq(otimes(oexp(v_x_0, otimes(v_y_0, oadd(nv1_15, o_1))), v_m_0),
      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
rule oleq_trans
formula='oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), oadd(nv1_15, o_1)),
      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
tryclose branch;
rule notRight;
rule hide_left
  formula='\forall Ord nv2;
   (   \forall Ord nv1;
         (   olt(nv1, nv1_14)
          -> oleq(oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1), nv2))
    -> oleq(osup{Ord nv;}(nv1_14,
                          oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
            nv2))';
rule hide_left
  formula='\forall Ord v_z;
   (   olt(v_z, nv1_14)
    -> olt(o_0, v_z)
    ->   \exists Ord v_z1;
           (  v_z = oadd(v_z1, o_1)
            &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
              = otimes(oexp(v_x_0, otimes(v_y_0, v_z)), v_m_0))
       | lim(v_z)
       &   oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), v_z)
         = oexp(v_x_0, otimes(v_y_0, v_z)))';
cut '!oleq(oexp(v_x_0, otimes(v_y_0, nv1_14)),
          osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
rule notLeft;
rule oleq_trans
  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
tryclose branch;
rule notRight;
#rule hide_left
#  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
#      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
#rule hide_left
#  formula='oleq(oexp(oexp(v_x_0, v_y_0), nv1_14),
#      osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)))';
cut '!olt(v_m_0,v_x_0)';
rule notLeft;
rule hide_right
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
rule omegaLeastLim1
  formula='lim(v_x_0)';
tryclose branch;
rule notRight;
rule oexpRightWeakMonotoneQ;
instantiate hide var=x with=v_x_0;
instantiate hide var=y1 with=o_0;
instantiate hide var=y2 with=v_y_0;
rule impLeft;
tryclose branch;
cut '!olt(v_m_0,oexp(v_x_0, v_y_0))';
rule notLeft;
rule hide_right
 formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
rule oexpLeftWeakIncreasing;
instantiate hide var=x with=v_x_0 ;
instantiate hide var=y with=v_y_0 ;
#
rule hide_left
  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
rule hide_left
  formula='oleq(oexp(oexp(v_x_0, v_y_0), nv1_14),
      osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)))';
tryclose branch;
rule notRight;
cut '!\forall Ord my;(olt(my,nv1_14) -> 
       oleq(otimes(oexp(v_x_0, otimes(v_y_0, my)),v_m_0),  
            oexp(v_x_0, otimes(v_y_0,oadd(my,o_1)))
            ))';
rule notLeft;
rule hide_right
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
rule allRight;
rule impRight;
rule hide_left
  formula='oleq(oexp(v_x_0, otimes(v_y_0, nv1_14)),
      osup{Ord nv;}(nv1_14,
                    otimes(oexp(v_x_0, otimes(v_y_0, nv)),
                           v_m_0)))';
rule otimesWeakMonotoneQ;
instantiate hide var=k with='oexp(v_x_0, otimes(v_y_0, my_0))' ;
instantiate hide var=i with=v_m_0 ;
instantiate hide var=j with='oexp(v_x_0, v_y_0)' ;
rule impLeft;
tryclose branch;
rule otimes_DefSucc
 formula='oleq(otimes(oexp(v_x_0, otimes(v_y_0, my_0)), v_m_0),
      oexp(v_x_0, otimes(v_y_0, oadd(my_0, o_1))))';
tryclose branch;
rule oexpDistr;
instantiate hide var=i with=v_x_0 ;
instantiate hide var=j with='otimes(v_y_0, my_0)' ;
instantiate hide var=k with=v_y_0 ;
rule hide_left
  formula='  oexp(oexp(v_x_0, v_y_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
tryclose branch;
rule notRight;
rule osupLocalLess
  formula='\forall Ord my;
   (   olt(my, nv1_14)
    -> oleq(otimes(oexp(v_x_0, otimes(v_y_0, my)), v_m_0),
            oexp(v_x_0, otimes(v_y_0, oadd(my, o_1)))))';
rule hide_left
  formula='\forall Ord my;
   (   olt(my, nv1_14)
    -> oleq(otimes(oexp(v_x_0, otimes(v_y_0, my)), v_m_0),
            oexp(v_x_0, otimes(v_y_0, oadd(my, o_1)))))';
rule oexp_DefLim
  formula='  oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv1_14)
 = oexp(v_x_0, otimes(v_y_0, nv1_14))' occ=0;
cut 'oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
          oexp(oexp(v_x_0, v_y_0), nv1_14))';
tryclose branch;
rule hide_right
  formula='  osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv))
 = oexp(v_x_0, otimes(v_y_0, nv1_14))';
rule hide_left
  formula='oleq(oexp(oexp(v_x_0, v_y_0), nv1_14),
      osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)))';
rule hide_left
  formula='oleq(oexp(v_x_0, otimes(v_y_0, nv1_14)),
      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
rule oleq_trans
  formula='oleq(osup{Ord my;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, my)), v_m_0)),
      osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, oadd(my, o_1)))))';
rule hide_left
  formula='oleq(osup{Ord my;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, my)), v_m_0)),
      osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, oadd(my, o_1)))))';
rule hide_left
  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      osup{Ord nv;}(nv1_14, otimes(oexp(v_x_0, otimes(v_y_0, nv)), v_m_0)))';
cut 'osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, oadd(my, o_1))))
     =
    osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0,my)))';
cut '!oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
          osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, my))))';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left
  formula='osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, oadd(my, o_1))))
 = osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, my)))';
rule hide_left
  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, oadd(my, o_1)))))';
rule oexp_DefLim
  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      oexp(oexp(v_x_0, v_y_0), nv1_14))' occ=1;
cut '!\forall Ord n;(olt(n,nv1_14) -> oexp(oexp(v_x_0, v_y_0), n) = oexp(v_x_0, otimes(v_y_0, n)))';
rule notLeft;
rule allRight;
rule impRight;
rule hide_right
  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      osup{Ord nv;}(nv1_14, oexp(oexp(v_x_0, v_y_0), nv)))';
rule oexpTripleQ;
instantiate hide var=i  with=v_x_0 ;
instantiate hide var=j  with=v_y_0 ;
instantiate hide var=k  with=n_0 ;
tryclose branch;
rule notRight;
rule osupEqualTerms
  formula='\forall Ord n;
   (   olt(n, nv1_14)
    -> oexp(oexp(v_x_0, v_y_0), n) = oexp(v_x_0, otimes(v_y_0, n))) ';
tryclose branch;
rule hide_right
  formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      oexp(oexp(v_x_0, v_y_0), nv1_14))';
rule hide_left
 formula='oleq(osup{Ord nv;}(nv1_14, oexp(otimes(oexp(v_x_0, v_y_0), v_m_0), nv)),
      osup{Ord my;}(nv1_14, oexp(v_x_0, otimes(v_y_0, oadd(my, o_1)))))';
rule hide_left
 formula='oleq(otimes(oexp(v_x_0, v_y_0), o_1), otimes(oexp(v_x_0, v_y_0), v_m_0))';
rule hide_left
 formula='oexp(oexp(v_x_0, v_y_0), nv1_14) = oexp(v_x_0, otimes(v_y_0, nv1_14))';
rule osupMutualCofinal;
rule andRight;
rule allRight;
rule impRight;
instantiate hide var=j with='oadd(i_0, o_1)';
rule andRight;
rule olimDefEquiv
  formula='lim(nv1_14)';
rule andLeft;
instantiate hide var=ov with=i_0 ;
rule impLeft;
tryclose branch;
rule allRight;
rule impRight;
instantiate hide var=i with=j_1;
rule andRight;
#tryclose branch;
rule olimDefEquiv
  formula='lim(nv1_14)';
rule andLeft;
instantiate hide var=ov with=j_1 ;
tryclose branch;
cut '!olt(j_1,oadd(j_1, o_1))';
rule notLeft;
tryclose branch;
rule notRight;
cut '!oleq(otimes(v_y_0, j_1),otimes(v_y_0, oadd(j_1, o_1)))';
rule notLeft;
rule hide_right
 formula='oleq(oexp(v_x_0, otimes(v_y_0, j_1)),
      oexp(v_x_0, otimes(v_y_0, oadd(j_1, o_1))))';
rule otimesWeakMonotoneQ;
instantiate hide var=k with=v_y_0 ;
instantiate hide var=i with=j_1 ;
instantiate hide var=j with='oadd(j_1, o_1)' ;
rule impLeft;
tryclose branch;
rule notRight;
rule oexpRightWeakMonotoneQ;
instantiate hide var=x  with=v_x_0 ;
instantiate hide var=y1 with='otimes(v_y_0, j_1)' ;
instantiate hide var=y2 with='otimes(v_y_0, oadd(j_1, o_1))' ;
rule impLeft;
tryclose;
"




