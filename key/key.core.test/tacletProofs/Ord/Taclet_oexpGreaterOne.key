\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Feb 10 09:09:49 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Wed Feb 10 09:09:49 CET 2016
name=oexpGreaterOne
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
# to avoid the infinite loop that arises on
# tryclose or tryclose branch
# we have to do every step manually
# except in those branches that are not
# subject to the infinite loop.
rule allRight;
rule oInd
  formula='\forall Ord v_y;
   (olt(o_1, v_x_0) & olt(o_0, v_y) -> olt(o_1, oexp(v_x_0, v_y)))';
rule hide_right
  formula='\forall Ord v_y;
   (   olt(o_1, v_x_0) & olt(o_0, v_y)
    -> olt(o_1, oexp(v_x_0, v_y)))';
rule impRight;
rule andLeft;
rule olt_irref;
rule closeFalse;
# Base case closed
rule hide_right
  formula='\forall Ord v_y;
   (   olt(o_1, v_x_0) & olt(o_0, v_y)
    -> olt(o_1, oexp(v_x_0, v_y)))';
rule allRight;
rule impRight;
rule impRight;
rule andLeft;
cut 'v_y_0=o_0';
rule hide_left
 formula='olt(o_0, oadd(v_y_0, o_1))';
rule hide_left
 formula='   olt(o_1, v_x_0) & olt(o_0, v_y_0)
 -> olt(o_1, oexp(v_x_0, v_y_0))';
auto steps=5;
rule impLeft;
rule andRight;
rule close formula='olt(o_1, v_x_0)';
rule olessPlusOne;
rule orLeft;
rule close formula='olt(o_0, v_y_0)';
rule eqSymm formula='o_0 = v_y_0';
rule close formula='v_y_0 = o_0';
rule oexp_DefSucc;
rule olessPlusOne;
rule commute_or;
rule orLeft;
rule eqSymm formula='o_0 = v_y_0';
rule close formula='v_y_0 = o_0';
rule otimesMonotoneQ;
instantiate hide var=k with='oexp(v_x_0, v_y_0)' ;
instantiate hide var=i with=o_1 ;
instantiate hide var=j with=v_x_0 ;
rule impLeft;
rule andRight;
auto steps=5;
rule close formula='olt(o_1, v_x_0)';
auto steps=3;
# Succesor Case closed
rule hide_right
  formula='\forall Ord v_y;
   (   olt(o_1, v_x_0) & olt(o_0, v_y)
    -> olt(o_1, oexp(v_x_0, v_y)))';
rule allRight;
rule impRight;
rule andLeft;
rule impRight;
rule andLeft;
cut '!olt(o_0,v_x_0)';
rule notLeft;
cut '!olt(o_0,o_1)';
rule notLeft;
auto steps=2;
rule notRight;
rule olt_trans
  formula='olt(o_1, v_x_0)';
rule close formula='olt(o_0, v_x_0)';
rule notRight;
rule oexp_DefLim
  formula='olt(o_1, oexp(v_x_0, nv1_0))';
instantiate hide var=v_y with=o_1;
rule impLeft;
tryclose branch;
rule impLeft;
rule andRight;
tryclose branch;
rule olimDefAdd;
rule andLeft;
rule hide_left
  formula='!\exists Ord nv; nv1_0 = oadd(nv, o_1)';
rule notLeft;
cut '!olt(o_1,nv1_0)';
tryclose branch;
rule notRight;
rule osupDef;
rule hide_left
  formula='\forall Ord nv2;
   (   \forall Ord nv1;
         (olt(nv1, nv1_0) -> oleq(oexp(v_x_0, nv1), nv2))
    -> oleq(osup{Ord nv;}(nv1_0, oexp(v_x_0, nv)), nv2))';
instantiate hide var=nv1 with=o_1;
tryclose;
"
