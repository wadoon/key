\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jan 27 22:44:40 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Wed Jan 27 22:44:40 CET 2016
name=oltlexicographic
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
macro split-prop;
rule equiv_right;
rule orRight;
rule olt_total_Axiom;
instantiate hide var=nv  with='otimes(omega, f_i1)' ;
instantiate hide var=nv1 with='otimes(omega, f_i2)' ;
rule orLeft;
tryclose branch;
tryclose branch;
rule hide_right
  formula='otimes(omega, f_i1) = otimes(omega, f_i2)
 & olt(f_j1, f_j2)';
rule hide_right
  formula='olt(otimes(omega, f_i1), otimes(omega, f_i2))';
rule otimesMonotoneRev;
rule andLeft;
rule oLeastSucc;
instantiate hide var=nv  with=f_i2 ;
instantiate hide var=nv1 with=f_i1 ;
rule impLeft;
tryclose branch;
rule otimesWeakMonotoneQ;
instantiate hide var=k with=omega ;
instantiate hide var=i with='oadd(f_i2, o_1)';
instantiate hide var=j with=f_i1 ;
rule impLeft;
tryclose branch;
rule otimes_DefSucc
  formula='oleq(otimes(omega, oadd(f_i2, o_1)),
      otimes(omega, f_i1))';
cut '!(olt(oadd(otimes(omega, f_i2),f_j2),
         oadd(otimes(omega, f_i2), omega)))';
rule notLeft;
rule oltAddLessLeft
  formula='olt(f_j2, omega)';
tryclose branch;
rule notRight;
rule oaddMonotone;
instantiate hide var=x with='otimes(omega, f_i1)' ;
instantiate hide var=y with= f_j1;
rule oleqolt_trans
  formula='oleq(oadd(otimes(omega, f_i2), omega),
      otimes(omega, f_i1))';
rule hide_left
  formula='olt(oadd(otimes(omega, f_i2), f_j2),
     oadd(otimes(omega, f_i2), omega))';
rule hide_left
 formula='oleq(oadd(otimes(omega, f_i2), omega),
      otimes(omega, f_i1))';
rule hide_left
 formula='olt(otimes(omega, f_i2), otimes(omega, f_i1))';
rule oleqolt_trans
   formula='oleq(otimes(omega, f_i1),
      oadd(otimes(omega, f_i1), f_j1))';
tryclose branch;
rule orLeft;
rule otimesMonotoneRev;
rule andLeft;
rule oLeastSucc;
instantiate hide var=nv  with=f_i1 ;
instantiate hide var=nv1 with=f_i2 ;
rule impLeft;
tryclose branch;
rule otimesWeakMonotoneQ;
instantiate hide var=k with=omega ;
instantiate hide var=i with='oadd(f_i1, o_1)';
instantiate hide var=j with=f_i2 ;
rule impLeft;
tryclose branch;
rule otimes_DefSucc
  formula='oleq(otimes(omega, oadd(f_i1, o_1)),
      otimes(omega, f_i2))';
cut '!(olt(oadd(otimes(omega, f_i1),f_j1),
         oadd(otimes(omega, f_i1), omega)))';
rule notLeft;
rule oltAddLessLeft
  formula='olt(f_j1, omega)';
tryclose branch;
rule notRight;
rule oleqolt_trans
  formula='oleq(oadd(otimes(omega, f_i1), omega),
      otimes(omega, f_i2))';
rule hide_left
  formula='oleq(oadd(otimes(omega, f_i1), omega),
      otimes(omega, f_i2))';
rule hide_left
  formula='olt(oadd(otimes(omega, f_i1), f_j1),
     oadd(otimes(omega, f_i1), omega))';
rule hide_left
  formula='olt(otimes(omega, f_i1), otimes(omega, f_i2))';
rule oaddMonotone;
instantiate hide var=x with='otimes(omega, f_i2)' ;
instantiate hide var=y with= f_j2;
rule oleqolt_trans
  formula='oleq(otimes(omega, f_i2),
      oadd(otimes(omega, f_i2), f_j2))';
tryclose branch;
rule andLeft;
rule oltAddLessLeft
  formula='olt(f_j1, f_j2)';
tryclose;
"
