\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Feb 01 15:57:53 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Mon Feb 01 15:57:53 CET 2016
name=oleqAddTimes
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
rule allRight;
rule oInd;
#base case closes automatically
tryclose branch;
#successor case
rule hide_right
 formula='\forall Ord v_j;
   (   olt(o_1, v_i_0) & olt(o_1, v_j)
    -> oleq(oadd(v_i_0, v_j), otimes(v_i_0, v_j)))';
rule allRight;
rule impRight;
rule impRight;
rule andLeft;
rule impLeft;
rule andRight;
tryclose branch;
rule otimes_DefSucc;
cut 'v_j_3=o_1';
cut 'oleq(oadd(v_i_0, oadd(o_1, o_1)),
      oadd(otimes(v_i_0, o_1), v_i_0))';
tryclose branch;
rule hide_right
  formula='oleq(oadd(v_i_0, oadd(v_j_3, o_1)),
      oadd(otimes(v_i_0, v_j_3), v_i_0))';
rule hide_right
  formula='olt(o_1, v_j_3)';
cut 'oleq(oadd(v_i_0, oadd(o_1, o_1)),
      oadd(v_i_0, v_i_0))';
tryclose branch;
rule hide_right
  formula='oleq(oadd(v_i_0, oadd(o_1, o_1)),
      oadd(otimes(v_i_0, o_1), v_i_0))';
cut '!(oleq(oadd(o_1, o_1),v_i_0))';
rule notLeft;
rule hide_right
  formula='oleq(oadd(v_i_0, oadd(o_1, o_1)), oadd(v_i_0, v_i_0))';
rule oLeastSucc;
instantiate hide var=nv  with=o_1 ;
instantiate hide var=nv1 with=v_i_0 ;
rule impLeft;
tryclose branch;
rule notRight;
rule oleqAddLessLeft
  formula='oleq(oadd(o_1, o_1), v_i_0)';
instantiate hide var=k with=v_i_0 ;
tryclose branch;
rule otimes_DefSucc;
rule oadd_DefSucc;
cut '!(oleq(o_1,v_i_0))';
tryclose branch;
rule notRight;
rule hide_left
  formula='olt(o_1, oadd(v_j_3, o_1))';
rule hide_left
  formula='olt(o_1, v_i_0)';
cut '!(oleq(oadd(oadd(v_i_0, v_j_3), o_1), oadd(oadd(v_i_0, v_j_3),v_i_0)))';
rule notLeft;
rule hide_right
  formula='oleq(oadd(oadd(v_i_0, v_j_3), o_1),
      oadd(otimes(v_i_0, v_j_3), v_i_0))';
rule oleqAddLessLeft
  formula='oleq(o_1, v_i_0)';
instantiate hide var=k with='oadd(v_i_0, v_j_3)' ;
tryclose branch;
rule notRight;
rule oleqAddLessRight
  formula='oleq(oadd(v_i_0, v_j_3), otimes(v_i_0, v_j_3))';
tryclose branch;
#limit case
rule hide_right
  formula='\forall Ord v_j;
   (   olt(o_1, v_i_0) & olt(o_1, v_j)
    -> oleq(oadd(v_i_0, v_j), otimes(v_i_0, v_j)))';
rule allRight;
rule impRight;
rule andLeft;
rule impRight;
rule andLeft;
rule otimes_DefLim;
rule oadd_DefLim;
rule osupDef occ=0;
rule hide_left
  formula='\forall Ord nv1;
   (   olt(nv1, nv1_9)
    -> oleq(oadd(v_i_0, nv1),
            osup{Ord nv;}(nv1_9, oadd(v_i_0, nv))))';
instantiate hide var=nv2 with='osup{Ord nv;}(nv1_9, otimes(v_i_0, nv))';
rule impLeft;
rule hide_right
  formula='oleq(osup{Ord nv;}(nv1_9, oadd(v_i_0, nv)),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
rule allRight;
rule impRight;
instantiate hide var=v_j with='oadd(oadd(nv1_10,o_1),o_1)';
rule impLeft;
rule hide_right
  formula='oleq(oadd(v_i_0, nv1_10),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
rule olimDefEquiv;
rule andLeft;
instantiate var=ov with=nv1_10 ;
rule impLeft;
tryclose branch;
rule impLeft;
rule andRight;
tryclose branch;
rule hide_right
  formula='oleq(oadd(v_i_0, nv1_10),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
rule oSucc;
instantiate var=nv with='oadd(nv1_10, o_1)' ;
instantiate hide var=nv with=o_1 ;
cut '!(olt(o_0,oadd(nv1_10,o_1)))';
rule notLeft;
rule oleq_zeroAxiom;
instantiate hide var=nv with=nv1_10;
rule oSucc;
instantiate hide var=nv with=nv1_10;
rule oltleq_trans
  formula='olt(nv1_10, oadd(nv1_10, o_1))';
tryclose branch;
cut '!(olt(oadd(oadd(nv1_10, o_1), o_1), nv1_9))';
rule notLeft;
rule hide_right
  formula='oleq(oadd(v_i_0, nv1_10),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
rule olimDefEquiv;
rule andLeft;
instantiate var=ov with=nv1_10;
rule impLeft;
tryclose branch;
rule notRight;
rule osupDef;
rule hide_left
  formula='\forall Ord nv2;
   (   \forall Ord nv1;
         (   olt(nv1, nv1_9)
          -> oleq(otimes(v_i_0, nv1), nv2))
    -> oleq(osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)),
            nv2))';
instantiate hide var=nv1 with='oadd(oadd(nv1_10, o_1), o_1)';
rule impLeft;
tryclose branch;
rule oleq_trans
  formula='oleq(otimes(v_i_0, oadd(oadd(nv1_10, o_1), o_1)),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
rule hide_left
  formula='oleq(oadd(v_i_0, oadd(oadd(nv1_10, o_1), o_1)),
      otimes(v_i_0, oadd(oadd(nv1_10, o_1), o_1)))';
rule hide_left
  formula='oleq(otimes(v_i_0, oadd(oadd(nv1_10, o_1), o_1)),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
cut '!(oleq(oadd(v_i_0, nv1_10),oadd(v_i_0, oadd(oadd(nv1_10, o_1), o_1))))';
rule notLeft;
cut '!(oleq(nv1_10,oadd(oadd(nv1_10, o_1), o_1)))';
tryclose branch;
rule notRight;
rule hide_right
  formula='oleq(oadd(v_i_0, nv1_10),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
rule hide_left
  formula='oleq(oadd(v_i_0, oadd(oadd(nv1_10, o_1), o_1)),
      osup{Ord nv;}(nv1_9, otimes(v_i_0, nv)))';
rule oleqAddLessLeft
  formula='oleq(nv1_10, oadd(oadd(nv1_10, o_1), o_1))';
instantiate hide var=k with=v_i_0;
tryclose;
"

