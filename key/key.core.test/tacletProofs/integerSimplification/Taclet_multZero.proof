\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Feb 17 18:50:44 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=200
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Fri Feb 17 18:50:44 CET 2017
name=multZero
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "0af6ba363559213334a0f565b9b5c41610636183"))

(autoModeTime "188641217")

(branch "dummy ID"
(rule "equiv_right" (formula "1") (newnames "f_a,f_b"))
(branch "Case 1"
   (rule "orRight" (formula "2"))
   (rule "divide_equation" (formula "1") (inst "elimGcd=f_b") (userinteraction))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,2"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "1,0,1,0"))
   (rule "add_zero_right" (formula "1") (term "0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "1,1,0"))
   (rule "polyDiv_zero" (formula "1") (term "1,1"))
   (rule "div_literals" (formula "1") (term "1,1,1"))
   (rule "replace_known_right" (formula "1") (term "0,1,1") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polyMod_pullOut" (formula "1") (term "0,1,0,0") (inst "polyDivCoeff=f_a"))
   (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "1") (term "0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=f_a"))
   (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0,1"))
   (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,1"))
   (rule "add_literals" (formula "1") (term "1,0,0,0,1"))
   (rule "times_zero_1" (formula "1") (term "0,0,0,1"))
   (rule "polySimp_addComm0" (formula "1") (term "0,1"))
   (rule "polySimp_sepPosMonomial" (formula "1") (term "1"))
   (rule "polyDiv_zero" (formula "1") (term "0,1"))
   (rule "div_literals" (formula "1") (term "1,0,1"))
   (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1") (term "1"))
   (rule "polySimp_invertEq" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
   (rule "mul_literals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1"))
   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "2"))
   (rule "ifthenelse_split_for" (formula "1"))
   (branch "f_b >= 1 TRUE"
      (rule "closeFalse" (formula "2"))
   )
   (branch "f_b >= 1 FALSE"
      (rule "inEqSimp_geqRight" (formula "2"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "4"))
      (rule "add_literals" (formula "1") (term "1"))
      (rule "inEqSimp_contradEq3" (formula "4") (ifseqformula "1"))
      (rule "mul_literals" (formula "4") (term "1,0,0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "qeq_literals" (formula "4") (term "0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "false_right" (formula "4"))
      (rule "divide_eq6" (formula "2") (inst "divY=f_a") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "leq_literals" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "qeq_literals" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "div_literals" (formula "2") (term "1"))
      (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "4"))
      (rule "add_literals" (formula "2") (term "1"))
      (rule "inEqSimp_contradEq7" (formula "4") (ifseqformula "2"))
      (rule "mul_literals" (formula "4") (term "1,0,0"))
      (rule "add_literals" (formula "4") (term "0,0"))
      (rule "leq_literals" (formula "4") (term "0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "false_right" (formula "4"))
      (rule "divide_eq4" (formula "3") (inst "divY=f_a") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "leq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "leq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "div_literals" (formula "3") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
)
(branch "Case 2"
   (rule "polySimp_mulComm0" (formula "2") (term "0"))
   (rule "cut_direct" (formula "1") (term "0"))
   (branch "CUT: f_a = 0 TRUE"
      (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "1"))
      (rule "times_zero_1" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "closeTrue" (formula "2"))
   )
   (branch "CUT: f_a = 0 FALSE"
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "1"))
      (rule "times_zero_2" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "closeTrue" (formula "3"))
   )
)
)

}
