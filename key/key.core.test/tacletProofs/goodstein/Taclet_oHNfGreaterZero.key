\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Sep 03 12:47:23 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=200
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Tue Sep 03 12:47:23 CEST 2019
name=oHNfGreaterZero
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
rule allRight;
cut '\forall int v_m; ( 0 <= v_m -> (2 <= v_base_0 -> oHNf(v_base_0, v_m) >= 0))';
tryclose branch;
rule intValueInduction;
rule hide_right formula='\forall int v_m; (2 <= v_base_0 & 0 <= v_m -> oHNf(v_base_0, v_m) >= 0)';
rule allRight;
rule impRight;
rule andLeft;
rule impRight;
cut 'v_m_0 < v_base_0';
rule oHNfDef1;
instantiate hide var=base with='v_base_0';
instantiate hide var=m with='v_m_0';
rule impLeft;
tryclose branch;
tryclose branch;
cut '!v_base_0 <= v_m_0';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_right formula='v_m_0 < v_base_0';
rule powExpansion;
instantiate hide var=m with='v_m_0';
instantiate hide var=n with='v_base_0';
rule impLeft;
tryclose branch;
rule exLeft;
rule exLeft;
rule exLeft;
rule andLeft;
rule andLeft;
rule andLeft;
rule andLeft;
rule andLeft;
rule oHNfDef2;
instantiate hide var=base with='v_base_0';
instantiate hide var=m with='v_m_0';
instantiate hide var=k with='r_0';
instantiate hide var=a with='a_0';
instantiate hide var=c with='c_0';
rule impLeft;
tryclose branch;
cut 'pow(v_base_0 + 1, oHNf(v_base_0, r_0)) * a_0 + oHNf(v_base_0, c_0) >= 0';
tryclose branch;
rule hide_right formula='oHNf(v_base_0, v_m_0) >= 0';
rule hide_left formula='  oHNf(v_base_0, v_m_0)
 = pow(v_base_0 + 1, oHNf(v_base_0, r_0)) * a_0 + oHNf(v_base_0, c_0)';
cut '!pow(v_base_0, r_0) * a_0 <= pow(v_base_0, r_0) * a_0 + c_0';
rule notLeft;
#rule add_two_inequations_2;
tryclose branch;
rule notRight;
cut '!pow(v_base_0, r_0) * a_0 <= v_m_0';
rule notLeft;
tryclose branch;
rule notRight;
cut '!pow(v_base_0,r_0) > 1';
rule notLeft;
tryclose branch;
rule notRight;
cut '!1 <= a_0';
rule notLeft;
tryclose branch;
rule notRight;
cut '!pow(v_base_0,r_0) <= pow(v_base_0,r_0) * a_0';
rule notLeft;
rule  multWeakLessAux;
instantiate hide var=right   with='a_0';
instantiate hide var=left    with='1';
instantiate hide var=factor  with='pow(v_base_0, r_0)';
rule impLeft;
tryclose branch;
rule andLeft;
rule hide_left formula='1 <= a_0 <-> 1 * pow(v_base_0, r_0) <= a_0 * pow(v_base_0, r_0)';
tryclose branch;
rule notRight;
cut '!c_0 <= v_m_0';
rule notLeft;
tryclose branch;
rule notRight;
cut '!pow(v_base_0, r_0) * a_0  <= v_m_0';
rule notLeft;
tryclose branch;
rule notRight;
instantiate var=k with='c_0';
rule impLeft;
tryclose branch;
rule impLeft;
tryclose branch;
cut '!pow(v_base_0 + 1, oHNf(v_base_0, r_0)) >= 0';
rule notLeft;
cut ' oHNf(v_base_0, r_0) = 0';
tryclose branch;
rule hide_right formula='pow(v_base_0 + 1, oHNf(v_base_0, r_0)) * a_0 + oHNf(v_base_0, c_0) >= 0';
cut '!v_base_0+1 > 0';
tryclose branch;
rule notRight;
rule powGreaterZeroQ;
instantiate hide var=base with='v_base_0 +1';
instantiate hide var=exp  with='oHNf(v_base_0, r_0)';
rule impLeft;
rule andRight;
tryclose branch;
rule powRightIncreasing;
instantiate hide var=exp with='r_0';
instantiate hide var=base with='v_base_0';
rule impLeft;
tryclose branch;
instantiate hide var=k with='r_0';
rule impLeft;
rule andRight;
tryclose branch;
cut '!r_0 < pow(v_base_0, r_0) * a_0';
rule notLeft;
rule lt_le_trans occ=0;
tryclose branch;
rule notRight;
tryclose branch;
rule impLeft;
tryclose branch;
tryclose branch;
tryclose branch;
rule notRight;
cut '!pow(v_base_0 + 1, oHNf(v_base_0, r_0)) * a_0 >= 0';
rule notLeft;
tryclose branch;
rule notRight;
tryclose;
"
