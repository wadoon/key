\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jan 10 17:31:35 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Tue Jan 10 17:31:35 CET 2017
name=oGSGreaterZeroQ
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "ee3dad1e14c224fe1c3cb4299f2c1d1ac2bca173"))

(autoModeTime "5895004659")

(branch "dummy ID"
(rule "cut" (newnames "v_n,v_e") (inst "cutFormula=\\forall int v_e;
  (   leq(Z(0(#)), v_e)
   -> \\forall int v_n;
        (   lt(Z(1(#)), v_n) & lt(Z(0(#)), v_e)
         -> olt(o_0, oGS(v_n, v_e))))"))
(branch "CUT: forall int v_e; ( 0 <= v_e -> forall int v_n; (1 < v_n & 0 < v_e -> olt(o_0, oGS(v_n, v_e)))) TRUE"
   (rule "allRight" (formula "2") (inst "sk=v_n_2"))
   (rule "allRight" (formula "2") (inst "sk=v_e_2"))
   (rule "impRight" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,1,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
   (rule "add_zero_right" (formula "3") (term "0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "2"))
   (rule "add_zero_right" (formula "2") (term "0"))
   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "olt_discret" (formula "3") (term "1,0,1,0"))
   (rule "oleq_replace" (formula "3") (term "1,0,1,0"))
   (rule "eqSymm" (formula "3") (term "1,1,0,1,0"))
   (rule "olt_discret" (formula "4"))
   (rule "oleq_replace" (formula "4"))
   (rule "orRight" (formula "4"))
   (rule "eqSymm" (formula "5"))
   (rule "nnf_imp2or" (formula "3") (term "0"))
   (rule "inEqSimp_notGeq" (formula "3") (term "0,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0"))
   (rule "nnf_imp2or" (formula "3") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "3") (term "0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "3") (term "0,1,0,0,1,0"))
   (rule "shift_paren_or" (formula "3") (term "0,1,0"))
   (rule "commute_or_2" (formula "3") (term "0,0,1,0"))
   (rule "commute_or" (formula "3") (term "0,0,0,1,0"))
   (rule "commute_or_2" (formula "3") (term "0,0,1,0"))
   (rule "all_pull_out3" (formula "3") (term "0"))
   (rule "shift_paren_or" (formula "3") (term "0,0"))
   (rule "shift_paren_or" (formula "3") (term "0,0,0"))
   (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
   (rule "commute_or" (formula "3") (term "0,0,0,0,0"))
   (rule "inEqSimp_or_subsumption1" (formula "3") (term "0,0,0,0"))
   (rule "qeq_literals" (formula "3") (term "0,1,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "allLeft" (formula "3") (inst "t=v_e_2"))
   (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "3") (term "0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "allLeft" (formula "3") (inst "t=v_n_2"))
   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "6")))
   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
   (rule "qeq_literals" (formula "3") (term "0"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "closeFalse" (formula "3"))
)
(branch "CUT: forall int v_e; ( 0 <= v_e -> forall int v_n; (1 < v_n & 0 < v_e -> olt(o_0, oGS(v_n, v_e)))) FALSE"
   (rule "hide_right" (formula "2"))
   (rule "intValueInduction" (formula "1") (inst "k=k"))
   (rule "allRight" (formula "1") (inst "sk=v_e_3"))
   (rule "impRight" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "allRight" (formula "3") (inst "sk=v_n_3"))
   (rule "impRight" (formula "3"))
   (rule "andLeft" (formula "1"))
   (rule "cut" (inst "cutFormula=lt(v_e_3, v_n_3)"))
   (branch "CUT: v_e_3 < v_n_3 TRUE"
      (rule "oGSDef1" (inst "n=n") (inst "m=m"))
      (rule "allLeftHide" (formula "1") (inst "t=v_n_3"))
      (rule "allLeftHide" (formula "1") (inst "t=v_e_3"))
      (rule "impLeft" (formula "1"))
      (branch "Case 1"
         (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
         (rule "inEqSimp_leqRight" (formula "6"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,1,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "4"))
         (rule "add_zero_right" (formula "4") (term "0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "6") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
         (rule "polySimp_elimOne" (formula "4") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,1,0"))
         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
         (rule "leq_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
      (branch "Case 2"
         (rule "cut" (inst "cutFormula=olt(onat(Z(0(#))), onat(v_e_3))"))
         (branch "CUT: olt(onat(0), onat(v_e_3)) TRUE"
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "7") (term "0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "add_zero_right" (formula "5") (term "0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "2"))
            (rule "close" (formula "8") (ifseqformula "1"))
         )
         (branch "CUT: olt(onat(0), onat(v_e_3)) FALSE"
            (rule "hide_right" (formula "8"))
            (rule "onatoltAut" (formula "7"))
            (branch "Case 1"
               (rule "close" (formula "7") (ifseqformula "4"))
            )
            (branch "Case 2"
               (rule "leq_literals" (formula "7"))
               (rule "closeTrue" (formula "7"))
            )
            (branch "Case 3"
               (rule "close" (formula "7") (ifseqformula "5"))
            )
         )
      )
   )
   (branch "CUT: v_e_3 < v_n_3 FALSE"
      (rule "cut" (inst "cutFormula=!leq(v_n_3, v_e_3)"))
      (branch "CUT: !v_n_3 <= v_e_3 TRUE"
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_ltRight" (formula "6"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "6"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "4"))
         (rule "add_zero_right" (formula "4") (term "0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,1,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "6") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
         (rule "polySimp_elimOne" (formula "4") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,1,0"))
         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
         (rule "leq_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
         (rule "andLeft" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0"))
         (rule "add_literals" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "CUT: !v_n_3 <= v_e_3 FALSE"
         (rule "hide_right" (formula "6"))
         (rule "notRight" (formula "5"))
         (rule "powInfiniteRange" (inst "goal=goal") (inst "base=base") (inst "exp=exp"))
         (rule "allLeftHide" (formula "1") (inst "t=v_e_3"))
         (rule "allLeftHide" (formula "1") (inst "t=v_n_3"))
         (rule "impLeft" (formula "1"))
         (branch "Case 1"
            (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "6"))
         )
         (branch "Case 2"
            (rule "intLeastNumberPrinciple" (formula "1") (inst "k=k"))
            (rule "exLeft" (formula "1") (inst "sk=exp_1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "cut" (inst "cutFormula=exp_1 = Z(1(#))"))
            (branch "CUT: exp_1 = 1 TRUE"
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "9") (term "0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "8"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEqRigid" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
               (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
               (rule "andLeft" (formula "4"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "times_zero_1" (formula "4") (term "1,0"))
               (rule "add_literals" (formula "4") (term "0"))
               (rule "leq_literals" (formula "4"))
               (rule "closeFalse" (formula "4"))
            )
            (branch "CUT: exp_1 = 1 FALSE"
               (rule "cut" (inst "cutFormula=!lt(Z(0(#)), sub(exp_1, Z(1(#))))"))
               (branch "CUT: !0 < exp_1 - 1 TRUE"
                  (rule "notLeft" (formula "1"))
                  (rule "polySimp_elimSub" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "9") (term "1"))
                  (rule "inEqSimp_ltRight" (formula "9"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "9") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "add_zero_right" (formula "7") (term "0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "10"))
                  (rule "add_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "10") (ifseqformula "1"))
                  (rule "add_zero_left" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "qeq_literals" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "false_right" (formula "10"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "7"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "olt_discret" (formula "8") (term "1,0,1,0"))
                  (rule "oleq_replace" (formula "8") (term "1,0,1,0"))
                  (rule "eqSymm" (formula "8") (term "1,1,0,1,0"))
                  (rule "olt_discret" (formula "9"))
                  (rule "oleq_replace" (formula "9"))
                  (rule "orRight" (formula "9"))
                  (rule "eqSymm" (formula "10"))
                  (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                  (rule "applyEq" (formula "5") (term "1,1,1,0,0") (ifseqformula "2"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "add_zero_left" (formula "4") (term "0"))
                  (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "CUT: !0 < exp_1 - 1 FALSE"
                  (rule "notRight" (formula "9"))
                  (rule "intdivmodEx" (inst "n=n") (inst "d=d") (inst "m=m") (inst "r=r"))
                  (rule "allLeftHide" (formula "1") (inst "t=v_e_3"))
                  (rule "allLeftHide" (formula "1") (inst "t=pow(v_n_3, sub(exp_1, Z(1(#))))"))
                  (rule "impLeft" (formula "1"))
                  (branch "Case 1"
                     (rule "andRight" (formula "10"))
                     (branch "Case 1"
                        (rule "hide_right" (formula "12"))
                        (rule "lt_to_gt" (formula "1"))
                        (rule "lt_to_gt" (formula "6"))
                        (rule "powGreaterOne" (formula "10") (term "1") (ifseqformula "1") (ifseqformula "6"))
                        (rule "polySimp_elimSub" (formula "11") (term "1,1"))
                        (rule "mul_literals" (formula "11") (term "1,1,1"))
                        (rule "polySimp_elimSub" (formula "2") (term "0"))
                        (rule "mul_literals" (formula "2") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_ltRight" (formula "11"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9"))
                        (rule "add_zero_right" (formula "9") (term "0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "12") (ifseqformula "3"))
                        (rule "mul_literals" (formula "12") (term "1,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0"))
                        (rule "leq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "false_right" (formula "12"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                        (rule "leq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "close" (formula "10") (ifseqformula "8"))
                     )
                  )
                  (branch "Case 2"
                     (rule "exLeft" (formula "1") (inst "sk=m_1"))
                     (rule "exLeft" (formula "1") (inst "sk=r_1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "allLeftHide" (formula "8") (inst "t=sub(exp_1, Z(1(#)))"))
                     (rule "impLeft" (formula "8"))
                     (branch "Case 1"
                        (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "1,1,1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                        (rule "mul_literals" (formula "13") (term "1,0,1"))
                        (rule "polySimp_elimSub" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "5") (term "1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10"))
                        (rule "add_zero_right" (formula "10") (term "0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0,1"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor2" (formula "13") (term "0,1"))
                        (rule "add_literals" (formula "13") (term "1,0,1"))
                        (rule "times_zero_1" (formula "13") (term "0,1"))
                        (rule "leq_literals" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "inEqSimp_commuteLeq" (formula "6"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "inEqSimp_leqRight" (formula "13"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_invertInEq1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "1"))
                        (rule "add_zero_left" (formula "14") (term "0,0"))
                        (rule "mul_literals" (formula "14") (term "0,0"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "false_right" (formula "14"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                        (rule "leq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
                        (rule "leq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "notLeft" (formula "8"))
                        (rule "cut" (inst "cutFormula=geq(m_1, v_n_3)"))
                        (branch "CUT: m_1 >= v_n_3 TRUE"
                           (rule "cut" (inst "cutFormula=!leq(mul(pow(v_n_3, sub(exp_1, Z(1(#)))), m_1), v_e_3)"))
                           (branch "CUT: !pow(v_n_3, exp_1 - 1) * m_1 <= v_e_3 TRUE"
                              (rule "notLeft" (formula "1"))
                              (rule "polySimp_homoEq" (formula "2"))
                              (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                              (rule "mul_literals" (formula "15") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "2") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "6") (term "1"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "11"))
                              (rule "add_zero_right" (formula "11") (term "0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltRight" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "8"))
                              (rule "add_zero_right" (formula "8") (term "0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "inEqSimp_commuteGeq" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "7"))
                              (rule "inEqSimp_commuteLeq" (formula "6"))
                              (rule "polySimp_sepPosMonomial" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                              (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "8"))
                              (rule "mul_literals" (formula "16") (term "1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "leq_literals" (formula "16") (term "0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "13"))
                              (rule "leq_literals" (formula "14") (term "0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: !pow(v_n_3, exp_1 - 1) * m_1 <= v_e_3 FALSE"
                              (rule "notRight" (formula "14"))
                              (rule "cut" (inst "cutFormula=!lt(pow(v_n_3, exp_1),
    mul(pow(v_n_3, sub(exp_1, Z(1(#)))), m_1))"))
                              (branch "CUT: !pow(v_n_3, exp_1) < pow(v_n_3, exp_1 - 1) * m_1 TRUE"
                                 (rule "notLeft" (formula "1"))
                                 (rule "cut" (inst "cutFormula=!  pow(v_n_3, exp_1)
 = pow(v_n_3, add(sub(exp_1, Z(1(#))), Z(1(#))))"))
                                 (branch "CUT: !pow(v_n_3, exp_1) = pow(v_n_3, exp_1 - 1 + 1) TRUE"
                                    (rule "notLeft" (formula "1"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "polySimp_elimSub" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1,0,1"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "15") (term "0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_addLiterals" (formula "15") (term "1,0"))
                                    (rule "add_zero_right" (formula "15") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "closeTrue" (formula "15"))
                                 )
                                 (branch "CUT: !pow(v_n_3, exp_1) = pow(v_n_3, exp_1 - 1 + 1) FALSE"
                                    (rule "notRight" (formula "15"))
                                    (rule "cut" (inst "cutFormula=!geq(sub(exp_1, Z(1(#))), Z(0(#)))"))
                                    (branch "CUT: !exp_1 - 1 >= 0 TRUE"
                                       (rule "notLeft" (formula "1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,1"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                       (rule "mul_literals" (formula "18") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "4") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "4") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "16") (term "0"))
                                       (rule "mul_literals" (formula "16") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_addLiterals" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "polySimp_homoEq" (formula "3"))
                                       (rule "polySimp_addComm0" (formula "7") (term "1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "4") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "add_zero_right" (formula "12") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "17"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10"))
                                       (rule "add_zero_right" (formula "10") (term "0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "8"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "5"))
                                       (rule "inEqSimp_commuteLeq" (formula "9"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "polySimp_sepPosMonomial" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                       (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "1"))
                                       (rule "add_zero_left" (formula "17") (term "0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "false_right" (formula "17"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: !exp_1 - 1 >= 0 FALSE"
                                       (rule "notRight" (formula "16"))
                                       (rule "powExpSucc" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "cut" (inst "cutFormula=lt(mul(pow(v_n_3, sub(exp_1, Z(1(#)))), v_n_3),
   mul(pow(v_n_3, sub(exp_1, Z(1(#)))), m_1))"))
                                       (branch "CUT: pow(v_n_3, exp_1 - 1) * v_n_3 < pow(v_n_3, exp_1 - 1) * m_1 TRUE"
                                          (rule "eqSymm" (formula "3"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,1"))
                                          (rule "polySimp_elimSub" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "6"))
                                          (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                          (rule "mul_literals" (formula "19") (term "1,1,1"))
                                          (rule "polySimp_elimSub" (formula "10") (term "1"))
                                          (rule "mul_literals" (formula "10") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "1") (term "1,0,1"))
                                          (rule "mul_literals" (formula "1") (term "1,1,0,1"))
                                          (rule "polySimp_elimSub" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                                          (rule "mul_literals" (formula "7") (term "1,1,1"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "6") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "1"))
                                          (rule "polySimp_addComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "1,0,1"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                          (rule "add_zero_right" (formula "15") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltRight" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "add_zero_right" (formula "12") (term "0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "inEqSimp_commuteGeq" (formula "7"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                          (rule "mul_literals" (formula "3") (term "0,0,1"))
                                          (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "11"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: pow(v_n_3, exp_1 - 1) * v_n_3 < pow(v_n_3, exp_1 - 1) * m_1 FALSE"
                                          (rule "multLessAux" (inst "right=right") (inst "left=left") (inst "factor=factor"))
                                          (rule "allLeftHide" (formula "1") (inst "t=m_1"))
                                          (rule "allLeftHide" (formula "1") (inst "t=v_n_3"))
                                          (rule "allLeftHide" (formula "1") (inst "t=pow(v_n_3, sub(exp_1, Z(1(#))))"))
                                          (rule "impLeft" (formula "1"))
                                          (branch "Case 1"
                                             (rule "eqSymm" (formula "2"))
                                             (rule "polySimp_elimSub" (formula "1") (term "0"))
                                             (rule "mul_literals" (formula "1") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "5") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "5") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1"))
                                             (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "9") (term "1"))
                                             (rule "mul_literals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,0,1"))
                                             (rule "mul_literals" (formula "18") (term "1,1,0,1"))
                                             (rule "polySimp_elimSub" (formula "20") (term "1,1"))
                                             (rule "mul_literals" (formula "20") (term "1,1,1"))
                                             (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "1,1,1"))
                                             (rule "polySimp_elimSub" (formula "19") (term "1,0,1"))
                                             (rule "mul_literals" (formula "19") (term "1,1,0,1"))
                                             (rule "polySimp_elimSub" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_homoEq" (formula "5"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,1"))
                                             (rule "polySimp_addComm0" (formula "20") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "6") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "19") (term "1,0,1"))
                                             (rule "polySimp_addComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "17"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13"))
                                             (rule "add_zero_right" (formula "13") (term "0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "11"))
                                             (rule "inEqSimp_commuteGeq" (formula "8"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "6"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0"))
                                             (rule "polySimp_sepPosMonomial" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "8"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_invertInEq1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "11"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "olt_discret" (formula "15") (term "1,0,1,0"))
                                             (rule "oleq_replace" (formula "15") (term "1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "olt_discret" (formula "16"))
                                             (rule "oleq_replace" (formula "16"))
                                             (rule "orRight" (formula "16"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                          (branch "Case 2"
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "polySimp_elimSub" (formula "9") (term "1"))
                                             (rule "mul_literals" (formula "9") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "5") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "5") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimSub" (formula "1") (term "0"))
                                             (rule "mul_literals" (formula "1") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                             (rule "mul_literals" (formula "21") (term "1,1,1"))
                                             (rule "polySimp_elimSub" (formula "20") (term "1,0,1"))
                                             (rule "mul_literals" (formula "20") (term "1,1,0,1"))
                                             (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "1,1,1"))
                                             (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "19") (term "1,0,1"))
                                             (rule "mul_literals" (formula "19") (term "1,1,0,1"))
                                             (rule "polySimp_elimSub" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,1"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,1"))
                                             (rule "polySimp_homoEq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "20") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "19") (term "1,0,1"))
                                             (rule "polySimp_addComm0" (formula "6") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,1"))
                                             (rule "polySimp_addComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "1,0,1,0"))
                                             (rule "inEqSimp_ltRight" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "add_zero_right" (formula "15") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13"))
                                             (rule "add_zero_right" (formula "13") (term "0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11"))
                                             (rule "inEqSimp_commuteGeq" (formula "8"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "inEqSimp_commuteLeq" (formula "14"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "6"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "polySimp_sepPosMonomial" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "11"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "olt_discret" (formula "16"))
                                             (rule "oleq_replace" (formula "16"))
                                             (rule "orRight" (formula "16"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "olt_discret" (formula "15") (term "1,0,1,0"))
                                             (rule "oleq_replace" (formula "15") (term "1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "5"))
                                             (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,0"))
                                             (rule "times_zero_1" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,0"))
                                             (rule "times_zero_1" (formula "5") (term "0"))
                                             (rule "qeq_literals" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "16") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: !pow(v_n_3, exp_1) < pow(v_n_3, exp_1 - 1) * m_1 FALSE"
                                 (rule "notRight" (formula "15"))
                                 (rule "polySimp_homoEq" (formula "4"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1"))
                                 (rule "polySimp_elimSub" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                 (rule "mul_literals" (formula "5") (term "1,1,1"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "1") (term "1,0,1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "8") (term "1"))
                                 (rule "polySimp_addComm0" (formula "5") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "add_zero_right" (formula "13") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltRight" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "add_zero_right" (formula "9") (term "0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                 (rule "add_literals" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8"))
                                 (rule "inEqSimp_commuteLeq" (formula "15"))
                                 (rule "inEqSimp_commuteGeq" (formula "4"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "inEqSimp_commuteLeq" (formula "10"))
                                 (rule "polySimp_sepPosMonomial" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1"))
                                 (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "8"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "false_right" (formula "16"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "olt_discret" (formula "14"))
                                 (rule "oleq_replace" (formula "14"))
                                 (rule "orRight" (formula "14"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "olt_discret" (formula "13") (term "1,0,1,0"))
                                 (rule "oleq_replace" (formula "13") (term "1,0,1,0"))
                                 (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "10"))
                                 (rule "qeq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "closeFalse" (formula "8"))
                              )
                           )
                        )
                        (branch "CUT: m_1 >= v_n_3 FALSE"
                           (rule "oGSDef2" (inst "n=n") (inst "m=m") (inst "k=k") (inst "a=a") (inst "c=c"))
                           (rule "allLeftHide" (formula "1") (inst "t=v_n_3"))
                           (rule "allLeftHide" (formula "1") (inst "t=v_e_3"))
                           (rule "allLeftHide" (formula "1") (inst "t=sub(exp_1, Z(1(#)))"))
                           (rule "allLeftHide" (formula "1") (inst "t=m_1"))
                           (rule "allLeftHide" (formula "1") (inst "t=r_1"))
                           (rule "impLeft" (formula "1"))
                           (branch "Case 1"
                              (rule "andRight" (formula "13"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "13"))
                                 (branch "Case 1"
                                    (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "polySimp_homoEq" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11"))
                                    (rule "add_zero_right" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1"))
                                    (rule "add_zero_right" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                    (rule "inEqSimp_ltRight" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                    (rule "add_zero_right" (formula "7") (term "0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                    (rule "inEqSimp_commuteLeq" (formula "6"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8"))
                                    (rule "inEqSimp_commuteLeq" (formula "5"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0"))
                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_leqRight" (formula "15"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_invertInEq1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "8"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "false_right" (formula "16"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "olt_discret" (formula "13") (term "1,0,1,0"))
                                    (rule "oleq_replace" (formula "13") (term "1,0,1,0"))
                                    (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                    (rule "olt_discret" (formula "14"))
                                    (rule "oleq_replace" (formula "14"))
                                    (rule "orRight" (formula "14"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "6"))
                                    (rule "times_zero_1" (formula "4") (term "0"))
                                    (rule "polySimp_homoEq" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "5"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "polySimp_sepPosMonomial" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1"))
                                    (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "Case 2"
                                    (rule "polySimp_homoEq" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_ltRight" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "add_zero_right" (formula "13") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8"))
                                    (rule "add_zero_right" (formula "8") (term "0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9"))
                                    (rule "inEqSimp_commuteLeq" (formula "7"))
                                    (rule "inEqSimp_commuteLeq" (formula "6"))
                                    (rule "inEqSimp_commuteLeq" (formula "14"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "8"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "false_right" (formula "16"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_literals" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "close" (formula "13") (ifseqformula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allLeft" (formula "13") (inst "t=sub(exp_1, Z(1(#)))"))
                              (rule "impLeft" (formula "13"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "14"))
                                 (branch "Case 1"
                                    (rule "eqSymm" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "2"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1"))
                                    (rule "mul_literals" (formula "14") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1"))
                                    (rule "polySimp_addComm0" (formula "6") (term "1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "add_zero_right" (formula "12") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "15"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "inEqSimp_ltRight" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15"))
                                    (rule "inEqSimp_commuteLeq" (formula "7"))
                                    (rule "inEqSimp_commuteLeq" (formula "10"))
                                    (rule "polySimp_sepPosMonomial" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_invertInEq1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "false_right" (formula "17"))
                                    (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                                 (branch "Case 2"
                                    (rule "powRightIncreasing" (inst "exp=exp") (inst "base=base"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1"))
                                    (rule "polySimp_elimSub" (formula "15") (term "0"))
                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "3"))
                                    (rule "polySimp_addComm0" (formula "4") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "add_zero_right" (formula "13") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "add_zero_right" (formula "10") (term "0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "11"))
                                    (rule "inEqSimp_commuteLeq" (formula "9"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "false_right" (formula "18"))
                                    (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "olt_discret" (formula "16"))
                                    (rule "oleq_replace" (formula "16"))
                                    (rule "orRight" (formula "16"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "olt_discret" (formula "15") (term "1,0,1,0"))
                                    (rule "oleq_replace" (formula "15") (term "1,0,1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                    (rule "omegaDef1" (formula "5") (term "0,0,0,0"))
                                    (rule "omegaDef1" (formula "5") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "18") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "10"))
                                    (rule "mul_literals" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "nnf_imp2or" (formula "6") (term "0,0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "6") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,1,0,0,1,0"))
                                    (rule "commute_or" (formula "6") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,1,0"))
                                    (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "20") (term "0,0,0,1,0"))
                                    (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                                    (rule "all_pull_out3" (formula "20") (term "0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0"))
                                    (rule "commute_or" (formula "20") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_or_subsumption1" (formula "20") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "6") (inst "t=exp_1"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "allLeft" (formula "7") (inst "t=add(Z(neglit(1(#))), exp_1)"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "1,1,0"))
                                    (rule "add_literals" (formula "7") (term "0,1,1,0"))
                                    (rule "add_zero_left" (formula "7") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "allLeft" (formula "6") (inst "t=v_n_3"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "22"))
                                    (rule "qeq_literals" (formula "6") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "allLeft" (formula "8") (inst "t=v_n_3"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0"))
                                    (rule "add_literals" (formula "8") (term "0"))
                                    (rule "leq_literals" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allLeftHide" (formula "13") (inst "t=v_n_3"))
                                 (rule "impLeft" (formula "13"))
                                 (branch "Case 1"
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "10")))
                                    (rule "closeTrue" (formula "14"))
                                 )
                                 (branch "Case 2"
                                    (rule "cut" (inst "cutFormula=olt(o_0,
    oadd(otimes(oexp(omega,
                     oGS(v_n_3, sub(exp_1, Z(1(#))))),
                onat(m_1)),
         oGS(v_n_3, r_1)))"))
                                    (branch "CUT: olt(o_0, oadd(otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1)), oGS(v_n_3, r_1))) TRUE"
                                       (rule "eqSymm" (formula "2"))
                                       (rule "polySimp_homoEq" (formula "3"))
                                       (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                       (rule "mul_literals" (formula "17") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "7") (term "1"))
                                       (rule "mul_literals" (formula "7") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                                       (rule "mul_literals" (formula "14") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "7") (term "1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "add_zero_right" (formula "13") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltRight" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9"))
                                       (rule "add_zero_right" (formula "9") (term "0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8"))
                                       (rule "inEqSimp_commuteLeq" (formula "10"))
                                       (rule "inEqSimp_commuteLeq" (formula "7"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "close" (formula "19") (ifseqformula "3"))
                                    )
                                    (branch "CUT: olt(o_0, oadd(otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1)), oGS(v_n_3, r_1))) FALSE"
                                       (rule "hide_left" (formula "1"))
                                       (rule "cut" (inst "cutFormula=m_1 = Z(0(#))"))
                                       (branch "CUT: m_1 = 0 TRUE"
                                          (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "15") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                          (rule "mul_literals" (formula "17") (term "1,1,1"))
                                          (rule "polySimp_elimSub" (formula "2") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "2") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimSub" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                          (rule "mul_literals" (formula "3") (term "1,1,1"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                                          (rule "mul_literals" (formula "13") (term "1,1,1"))
                                          (rule "polySimp_homoEq" (formula "2"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "6") (term "1"))
                                          (rule "polySimp_addComm0" (formula "3") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "2") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "add_zero_right" (formula "12") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltRight" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7"))
                                          (rule "inEqSimp_commuteLeq" (formula "14"))
                                          (rule "inEqSimp_commuteLeq" (formula "9"))
                                          (rule "inEqSimp_commuteLeq" (formula "6"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "applyEqRigid" (formula "17") (term "0,1,0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "3"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "10") (term "1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "false_right" (formula "16"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "CUT: m_1 = 0 FALSE"
                                          (rule "cut" (inst "cutFormula=!olt(onat(Z(0(#))), onat(m_1))"))
                                          (branch "CUT: !olt(onat(0), onat(m_1)) TRUE"
                                             (rule "notLeft" (formula "1"))
                                             (rule "onatoltAut" (formula "14"))
                                             (branch "Case 1"
                                                (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "16") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                                (rule "mul_literals" (formula "18") (term "1,1,1"))
                                                (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                                                (rule "mul_literals" (formula "12") (term "1,1,1"))
                                                (rule "polySimp_elimSub" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "1,1,1"))
                                                (rule "polySimp_homoEq" (formula "1"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "18") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "14"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12"))
                                                (rule "add_zero_right" (formula "12") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "inEqSimp_ltRight" (formula "18"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8"))
                                                (rule "add_zero_right" (formula "8") (term "0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "6"))
                                                (rule "inEqSimp_commuteLeq" (formula "9"))
                                                (rule "inEqSimp_commuteLeq" (formula "7"))
                                                (rule "polySimp_sepPosMonomial" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_invertInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "8"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "false_right" (formula "19"))
                                                (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "17"))
                                                (rule "add_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "qeq_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "false_right" (formula "17"))
                                                (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                             (branch "Case 2"
                                                (rule "leq_literals" (formula "14"))
                                                (rule "closeTrue" (formula "14"))
                                             )
                                             (branch "Case 3"
                                                (rule "close" (formula "14") (ifseqformula "3"))
                                             )
                                          )
                                          (branch "CUT: !olt(onat(0), onat(m_1)) FALSE"
                                             (rule "notRight" (formula "14"))
                                             (rule "otimesMonotoneQ" (inst "k=k") (inst "i=i") (inst "j=j"))
                                             (rule "allLeftHide" (formula "1") (inst "t=oexp(omega, oGS(v_n_3, sub(exp_1, Z(1(#)))))"))
                                             (rule "allLeftHide" (formula "1") (inst "t=o_0"))
                                             (rule "allLeftHide" (formula "1") (inst "t=onat(m_1)"))
                                             (rule "impLeft" (formula "1"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "15"))
                                                (branch "Case 1"
                                                   (rule "oexpGreaterOne" (inst "x=x") (inst "y=y"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "1,1"))
                                                   (rule "mul_literals" (formula "20") (term "1,1,1"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,1"))
                                                   (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "1,1,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "7") (term "1"))
                                                   (rule "mul_literals" (formula "7") (term "1,1"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,1,1"))
                                                   (rule "polySimp_elimSub" (formula "3") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "3") (term "1,1,0,0,1"))
                                                   (rule "polySimp_homoEq" (formula "3"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "1,1,1"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "1,0,1,0"))
                                                   (rule "inEqSimp_geqRight" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13"))
                                                   (rule "add_zero_right" (formula "13") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "20"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "7"))
                                                   (rule "inEqSimp_commuteLeq" (formula "8"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15"))
                                                   (rule "inEqSimp_commuteLeq" (formula "10"))
                                                   (rule "polySimp_sepPosMonomial" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                   (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "9"))
                                                   (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "19"))
                                                   (rule "add_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "7"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "false_right" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "13"))
                                                   (rule "leq_literals" (formula "14") (term "0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "olt_discret" (formula "18"))
                                                   (rule "oleq_replace" (formula "18"))
                                                   (rule "orRight" (formula "18"))
                                                   (rule "eqSymm" (formula "19"))
                                                   (rule "omegaDef1" (formula "17") (term "0,0,0,1"))
                                                   (rule "olt_discret" (formula "16") (term "1,0,1,0"))
                                                   (rule "oleq_replace" (formula "16") (term "1,0,1,0"))
                                                   (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                   (rule "omegaDef1" (formula "17") (term "0,1"))
                                                   (rule "olt_discret" (formula "4") (term "1,0,0,0"))
                                                   (rule "oleq_replace" (formula "4") (term "1,0,0,0"))
                                                   (rule "eqSymm" (formula "4") (term "1,1,0,0,0"))
                                                   (rule "olt_discret" (formula "5"))
                                                   (rule "oleq_replace" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "1"))
                                                   (rule "olt_discret" (formula "15"))
                                                   (rule "oleq_replace" (formula "15"))
                                                   (rule "eqSymm" (formula "15") (term "1"))
                                                   (rule "olt_discret" (formula "18"))
                                                   (rule "oleq_replace" (formula "18"))
                                                   (rule "orRight" (formula "18"))
                                                   (rule "eqSymm" (formula "19"))
                                                   (rule "olt_discret" (formula "17"))
                                                   (rule "oleq_replace" (formula "17"))
                                                   (rule "orRight" (formula "17"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "orRight" (formula "18"))
                                                   (rule "omegaDef1" (formula "1") (term "0"))
                                                   (rule "omegaDef1" (formula "20") (term "0,0,0,1"))
                                                   (rule "omegaDef1" (formula "21") (term "0,0,0,0"))
                                                   (rule "omegaDef1" (formula "17") (term "0,1"))
                                                   (rule "omegaDef1" (formula "19") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                                                   (rule "mul_literals" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                   (rule "mul_literals" (formula "14") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                   (rule "nnf_imp2or" (formula "18") (term "0"))
                                                   (rule "nnf_imp2or" (formula "5") (term "0,0"))
                                                   (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "5") (term "0,0,0"))
                                                   (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,1,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "5") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,1,0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "5") (term "0,0"))
                                                   (rule "distr_forallAnd" (formula "5") (term "0"))
                                                   (rule "distr_forallAnd" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "commute_or" (formula "6") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "oexpOne" (formula "6") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "commute_or_2" (formula "5") (term "0,0"))
                                                   (rule "commute_or" (formula "18") (term "0,0,0,1,0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,1,0"))
                                                   (rule "all_pull_out3" (formula "18") (term "0"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                   (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "commute_or" (formula "18") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "cut_direct" (formula "6") (term "1"))
                                                   (branch "CUT: onat(m_1) = o_1 TRUE"
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEqRigid" (formula "22") (term "1,0,1") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "applyEqRigid" (formula "23") (term "1,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "omegaDef1" (formula "22") (term "0,0,1"))
                                                      (rule "omegaDef1" (formula "23") (term "0,0,0"))
                                                      (rule "cut_direct" (formula "17") (term "1"))
                                                      (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 TRUE"
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "17"))
                                                         (rule "applyEqRigid" (formula "22") (term "1,0,1") (ifseqformula "17"))
                                                         (rule "oexpOne" (formula "22") (term "0,1"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "17"))
                                                         (rule "oexpOne" (formula "23") (term "0,0"))
                                                         (rule "applyEqRigid" (formula "19") (term "1,1") (ifseqformula "17"))
                                                         (rule "oexpOne" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "closeTrue" (formula "19"))
                                                      )
                                                      (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 FALSE"
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "5") (inst "t=omega"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "omegaDef1" (formula "5") (term "0,1,1,0"))
                                                         (rule "allLeft" (formula "5") (inst "t=oGS(v_n_3, add(Z(neglit(1(#))), exp_1))"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "19"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                   (branch "CUT: onat(m_1) = o_1 FALSE"
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "cut_direct" (formula "17") (term "1"))
                                                      (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 TRUE"
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "17"))
                                                         (rule "oexpOne" (formula "24") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "23") (term "1,0,0,1") (ifseqformula "17"))
                                                         (rule "oexpOne" (formula "23") (term "0,0,1"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "17"))
                                                         (rule "oexpOne" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "closeTrue" (formula "20"))
                                                      )
                                                      (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 FALSE"
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "5") (inst "t=omega"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "omegaDef1" (formula "5") (term "0,1,1,0"))
                                                         (rule "allLeft" (formula "5") (inst "t=oGS(v_n_3, add(Z(neglit(1(#))), exp_1))"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "19"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "cut" (inst "cutFormula=!olt(o_0,
     otimes(oexp(omega,
                 oGS(v_n_3, sub(exp_1, Z(1(#))))),
            onat(m_1)))"))
                                                (branch "CUT: !olt(o_0, otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1))) TRUE"
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "close" (formula "16") (ifseqformula "1"))
                                                )
                                                (branch "CUT: !olt(o_0, otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1))) FALSE"
                                                   (rule "notRight" (formula "16"))
                                                   (rule "cut" (inst "cutFormula=r_1 = Z(0(#))"))
                                                   (branch "CUT: r_1 = 0 TRUE"
                                                      (rule "oGSDef1" (inst "n=n") (inst "m=m"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                                      (rule "mul_literals" (formula "6") (term "1,1,1"))
                                                      (rule "polySimp_elimSub" (formula "9") (term "1"))
                                                      (rule "mul_literals" (formula "9") (term "1,1"))
                                                      (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1"))
                                                      (rule "mul_literals" (formula "3") (term "1,1,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                                                      (rule "mul_literals" (formula "16") (term "1,1,1"))
                                                      (rule "polySimp_elimSub" (formula "5") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "5") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                                      (rule "mul_literals" (formula "21") (term "1,1,1"))
                                                      (rule "polySimp_homoEq" (formula "5"))
                                                      (rule "polySimp_addComm0" (formula "6") (term "1,1"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "1,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "1,1"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "1,1"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15"))
                                                      (rule "add_zero_right" (formula "15") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                      (rule "inEqSimp_ltRight" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11"))
                                                      (rule "add_zero_right" (formula "11") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEq" (formula "20") (term "1,1,1") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "add_zero_left" (formula "7") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "19"))
                                                      (rule "add_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "9"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "false_right" (formula "19"))
                                                      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "16") (term "0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "olt_discret" (formula "18"))
                                                      (rule "oleq_replace" (formula "18"))
                                                      (rule "orRight" (formula "18"))
                                                      (rule "eqSymm" (formula "19"))
                                                      (rule "omegaDef1" (formula "5") (term "0,0,1"))
                                                      (rule "olt_discret" (formula "17") (term "1,0,1,0"))
                                                      (rule "oleq_replace" (formula "17") (term "1,0,1,0"))
                                                      (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                                      (rule "omegaDef1" (formula "18") (term "0,0,0,1"))
                                                      (rule "olt_discret" (formula "7"))
                                                      (rule "oleq_replace" (formula "7"))
                                                      (rule "eqSymm" (formula "7") (term "1"))
                                                      (rule "olt_discret" (formula "6"))
                                                      (rule "oleq_replace" (formula "6"))
                                                      (rule "eqSymm" (formula "6") (term "1"))
                                                      (rule "otimesOne" (formula "6") (term "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "olt_discret" (formula "16"))
                                                      (rule "oleq_replace" (formula "16"))
                                                      (rule "eqSymm" (formula "16") (term "1"))
                                                      (rule "olt_discret" (formula "18"))
                                                      (rule "oleq_replace" (formula "18"))
                                                      (rule "orRight" (formula "18"))
                                                      (rule "eqSymm" (formula "19"))
                                                      (rule "omegaDef1" (formula "5") (term "0"))
                                                      (rule "omegaDef1" (formula "6") (term "0,0,1,0"))
                                                      (rule "omegaDef1" (formula "6") (term "0,1,0,1"))
                                                      (rule "omegaDef1" (formula "18") (term "0,0,0,1"))
                                                      (rule "omegaDef1" (formula "19") (term "0,0,0,0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "nnf_imp2or" (formula "4") (term "0,0"))
                                                      (rule "nnf_imp2or" (formula "18") (term "0"))
                                                      (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                                      (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                                      (rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "7") (term "0,1"))
                                                      (rule "omegaDef1" (formula "7") (term "0,0,0,1"))
                                                      (rule "cnf_rightDist" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "omegaDef1" (formula "7") (term "0,0,1"))
                                                      (rule "omegaDef1" (formula "7") (term "0,0,1,0"))
                                                      (rule "omegaDef1" (formula "8") (term "0,0,1,1"))
                                                      (rule "commute_or" (formula "8"))
                                                      (rule "omegaDef1" (formula "8") (term "0,0,1,0"))
                                                      (rule "shift_paren_or" (formula "7"))
                                                      (rule "omegaDef1" (formula "7") (term "0,1,0"))
                                                      (rule "omegaDef1" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "commute_or" (formula "4") (term "0,0,0,0"))
                                                      (rule "commute_or" (formula "19") (term "0,0,1,0"))
                                                      (rule "shift_paren_or" (formula "19") (term "0,1,0"))
                                                      (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "19") (term "0,0,0,1,0"))
                                                      (rule "cut_direct" (formula "9") (term "1"))
                                                      (branch "CUT: onat(m_1) = o_1 TRUE"
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "applyEqRigid" (formula "20") (term "1,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "applyEqRigid" (formula "7") (term "1,1,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqRigid" (formula "19") (term "1,0,1") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "omegaDef1" (formula "20") (term "0,0,0"))
                                                         (rule "omegaDef1" (formula "7") (term "0,1,0,0"))
                                                         (rule "omegaDef1" (formula "7") (term "0,1,0"))
                                                         (rule "omegaDef1" (formula "19") (term "0,0,1"))
                                                         (rule "all_pull_out3" (formula "18") (term "0"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "commute_or" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cut_direct" (formula "17") (term "1"))
                                                         (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 TRUE"
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "17"))
                                                            (rule "oexpOne" (formula "7") (term "1,0,0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "applyEqRigid" (formula "19") (term "1,0,0") (ifseqformula "16"))
                                                            (rule "oexpOne" (formula "19") (term "0,0"))
                                                            (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "16"))
                                                            (rule "oexpOne" (formula "18") (term "0,1"))
                                                            (rule "omegaDef1" (formula "19") (term "0,0"))
                                                            (rule "omegaDef1" (formula "18") (term "0,1"))
                                                            (rule "allLeft" (formula "4") (inst "t=v_n_3"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0,0") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "4") (term "0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "allLeft" (formula "4") (inst "t=m_1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                            (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "4") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "allLeft" (formula "5") (inst "t=Z(0(#))"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "leq_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_commuteGeq" (formula "5") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqRigid" (formula "21") (term "1,1") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "closeTrue" (formula "21"))
                                                         )
                                                         (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 FALSE"
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "allLeft" (formula "4") (inst "t=v_n_3"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "4") (term "0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "allLeft" (formula "4") (inst "t=Z(0(#))"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "leq_literals" (formula "4") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "4") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "orRight" (formula "23"))
                                                            (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "23"))
                                                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "24")))
                                                            (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "9")))
                                                            (rule "closeTrue" (formula "22"))
                                                         )
                                                      )
                                                      (branch "CUT: onat(m_1) = o_1 FALSE"
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "20"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "omegaDef1" (formula "7") (term "0,0,1"))
                                                         (rule "all_pull_out3" (formula "18") (term "0"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "commute_or" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_or_subsumption1" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "cut_direct" (formula "17") (term "1"))
                                                         (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 TRUE"
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "applyEqRigid" (formula "21") (term "1,0,0,0") (ifseqformula "17"))
                                                            (rule "oexpOne" (formula "21") (term "0,0,0"))
                                                            (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "17"))
                                                            (rule "oexpOne" (formula "7") (term "0,1"))
                                                            (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "17"))
                                                            (rule "oexpOne" (formula "20") (term "0,0,1"))
                                                            (rule "omegaDef1" (formula "21") (term "0,0,0"))
                                                            (rule "omegaDef1" (formula "7") (term "0,1"))
                                                            (rule "omegaDef1" (formula "20") (term "0,0,1"))
                                                            (rule "allLeft" (formula "4") (inst "t=v_n_3"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "4") (term "0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "allLeft" (formula "4") (inst "t=m_1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "allLeft" (formula "5") (inst "t=Z(0(#))"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "leq_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_commuteGeq" (formula "5") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "19"))
                                                            (rule "qeq_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqRigid" (formula "23") (term "1,1") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "10")))
                                                            (rule "closeTrue" (formula "23"))
                                                         )
                                                         (branch "CUT: oGS(v_n_3, -1 + exp_1) = o_1 FALSE"
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "allLeft" (formula "4") (inst "t=v_n_3"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0,0") (ifseqformula "17"))
                                                            (rule "qeq_literals" (formula "4") (term "0,1,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "allLeft" (formula "4") (inst "t=m_1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "allLeft" (formula "5") (inst "t=Z(0(#))"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "leq_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_commuteGeq" (formula "5") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "19"))
                                                            (rule "qeq_literals" (formula "5") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "10")))
                                                            (rule "closeTrue" (formula "24"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: r_1 = 0 FALSE"
                                                      (rule "allLeft" (formula "16") (inst "t=r_1"))
                                                      (rule "impLeft" (formula "16"))
                                                      (branch "Case 1"
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                                         (rule "mul_literals" (formula "21") (term "1,1,1"))
                                                         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,0,1"))
                                                         (rule "polySimp_homoEq" (formula "3"))
                                                         (rule "polySimp_elimSub" (formula "7") (term "1"))
                                                         (rule "mul_literals" (formula "7") (term "1,1"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,1"))
                                                         (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                                         (rule "mul_literals" (formula "4") (term "1,1,1"))
                                                         (rule "polySimp_elimSub" (formula "3") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "20"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "17"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14"))
                                                         (rule "add_zero_right" (formula "14") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                         (rule "inEqSimp_ltRight" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10"))
                                                         (rule "add_zero_right" (formula "10") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "add_literals" (formula "10") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "8"))
                                                         (rule "inEqSimp_commuteLeq" (formula "11"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16"))
                                                         (rule "inEqSimp_commuteLeq" (formula "9"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                         (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "10"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "false_right" (formula "22"))
                                                         (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "19"))
                                                         (rule "add_literals" (formula "9") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "9"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "false_right" (formula "19"))
                                                         (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "19"))
                                                         (rule "add_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "8"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "false_right" (formula "19"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "olt_discret" (formula "16") (term "1,0,1,0"))
                                                         (rule "oleq_replace" (formula "16") (term "1,0,1,0"))
                                                         (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                         (rule "olt_discret" (formula "18"))
                                                         (rule "oleq_replace" (formula "18"))
                                                         (rule "orRight" (formula "18"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "omegaDef1" (formula "4") (term "0,0,1"))
                                                         (rule "omegaDef1" (formula "18") (term "0,0,0,1"))
                                                         (rule "olt_discret" (formula "6"))
                                                         (rule "oleq_replace" (formula "6"))
                                                         (rule "eqSymm" (formula "6") (term "1"))
                                                         (rule "olt_discret" (formula "5"))
                                                         (rule "oleq_replace" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "1"))
                                                         (rule "otimesOne" (formula "5") (term "1"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "olt_discret" (formula "16"))
                                                         (rule "oleq_replace" (formula "16"))
                                                         (rule "eqSymm" (formula "16") (term "1"))
                                                         (rule "olt_discret" (formula "18"))
                                                         (rule "oleq_replace" (formula "18"))
                                                         (rule "orRight" (formula "18"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "omegaDef1" (formula "4") (term "0"))
                                                         (rule "omegaDef1" (formula "5") (term "0,1,0,1"))
                                                         (rule "omegaDef1" (formula "5") (term "0,0,1,0"))
                                                         (rule "omegaDef1" (formula "18") (term "0,0,0,1"))
                                                         (rule "omegaDef1" (formula "19") (term "0,0,0,0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "13"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                         (rule "mul_literals" (formula "16") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                         (rule "mul_literals" (formula "9") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0"))
                                                         (rule "add_literals" (formula "9") (term "0"))
                                                         (rule "leq_literals" (formula "9"))
                                                         (rule "closeFalse" (formula "9"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allLeftHide" (formula "16") (inst "t=v_n_3"))
                                                         (rule "impLeft" (formula "16"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "17"))
                                                            (branch "Case 1"
                                                               (rule "close" (formula "17") (ifseqformula "12"))
                                                            )
                                                            (branch "Case 2"
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "polySimp_elimSub" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                                               (rule "mul_literals" (formula "21") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "3") (term "1,1,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                                               (rule "mul_literals" (formula "4") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "19") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "3"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "inEqSimp_ltRight" (formula "16"))
                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "20"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "14"))
                                                               (rule "add_zero_right" (formula "14") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltRight" (formula "21"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10"))
                                                               (rule "add_zero_right" (formula "10") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16"))
                                                               (rule "inEqSimp_commuteLeq" (formula "8"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "inEqSimp_commuteLeq" (formula "11"))
                                                               (rule "polySimp_sepPosMonomial" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                               (rule "inEqSimp_invertInEq1" (formula "3"))
                                                               (rule "times_zero_2" (formula "3") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "22") (term "1,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0"))
                                                               (rule "leq_literals" (formula "22") (term "0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "false_right" (formula "22"))
                                                               (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "19"))
                                                               (rule "add_zero_right" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0"))
                                                               (rule "qeq_literals" (formula "19") (term "0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "false_right" (formula "19"))
                                                               (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "19"))
                                                               (rule "add_literals" (formula "8") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "8"))
                                                               (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "false_right" (formula "19"))
                                                               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "15") (term "0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "closeFalse" (formula "9"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "hide_left" (formula "17"))
                                                            (rule "hide_left" (formula "2"))
                                                            (rule "oaddStrictMonotone" (inst "x=x") (inst "y=y"))
                                                            (rule "allLeft" (formula "1") (inst "t=otimes(oexp(omega, oGS(v_n_3, sub(exp_1, Z(1(#))))),
       onat(m_1))"))
                                                            (rule "allLeft" (formula "1") (inst "t=oGS(v_n_3, r_1)"))
                                                            (rule "impLeft" (formula "1"))
                                                            (branch "Case 1"
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "notRight" (formula "18"))
                                                               (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                                               (rule "mul_literals" (formula "17") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_homoEq" (formula "6"))
                                                               (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                                                               (rule "mul_literals" (formula "7") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "1,1"))
                                                               (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                                                               (rule "mul_literals" (formula "23") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1"))
                                                               (rule "mul_literals" (formula "4") (term "1,1,1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "6") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "1,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "1,0,1,0"))
                                                               (rule "inEqSimp_geqRight" (formula "22"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "add_literals" (formula "15") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16"))
                                                               (rule "add_zero_right" (formula "16") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                               (rule "inEqSimp_ltRight" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12"))
                                                               (rule "add_zero_right" (formula "12") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "11"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18"))
                                                               (rule "inEqSimp_commuteLeq" (formula "13"))
                                                               (rule "applyEq" (formula "20") (term "1") (ifseqformula "3"))
                                                               (rule "irrByolt" (formula "20") (ifseqformula "20"))
                                                            )
                                                            (branch "Case 2"
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                                                               (rule "mul_literals" (formula "23") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "1,1"))
                                                               (rule "polySimp_homoEq" (formula "6"))
                                                               (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                                               (rule "mul_literals" (formula "17") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "7") (term "1,1"))
                                                               (rule "mul_literals" (formula "7") (term "1,1,1"))
                                                               (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1"))
                                                               (rule "mul_literals" (formula "4") (term "1,1,1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "2") (term "1,1,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "6") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "17") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "1,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "22"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16"))
                                                               (rule "add_zero_right" (formula "16") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "add_literals" (formula "15") (term "0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "12"))
                                                               (rule "add_zero_right" (formula "12") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "olt_transAut" (formula "23") (ifseqformula "6") (ifseqformula "3"))
                                                               (rule "closeTrue" (formula "23"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
)

}
