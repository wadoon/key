\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Feb 12 23:50:17 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=2000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Sun Feb 12 23:50:17 CET 2017
name=oHNfIncreasing
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "1" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "2" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "3" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "4" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "5" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "6" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "7" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "8" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "9" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))
(keyLog "10" (keyUser "pschmitt" ) (keyVersion "1ef740b52294dc77b0c89a1dfb70ab933eeb0cb4"))

(autoModeTime "10331915877")

(branch "dummy ID"
(rule "swapQuantifiersAll" (formula "1") (newnames "v_base,v_m") (userinteraction))
(rule "cut" (inst "cutFormula=\\forall int v_m;
  (   leq(Z(0(#)), v_m)
   -> \\forall int v_base;
        (   leq(Z(2(#)), v_base) & leq(v_base, v_m)
         -> lt(v_m, oHNf(v_base, v_m))))") (userinteraction))
(branch "CUT: forall int v_m; ( 0 <= v_m -> forall int v_base; ( 2 <= v_base & v_base <= v_m -> v_m < oHNf(v_base, v_m))) TRUE"
   (rule "allRight" (formula "2") (inst "sk=v_m_1"))
   (rule "allRight" (formula "2") (inst "sk=v_base_1"))
   (rule "impRight" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_ltRight" (formula "4"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0"))
   (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "inEqSimp_commuteLeq" (formula "3"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "0,1,0,1,0"))
   (rule "nnf_imp2or" (formula "4") (term "0"))
   (rule "inEqSimp_notGeq" (formula "4") (term "0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,0,0"))
   (rule "add_literals" (formula "4") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0"))
   (rule "nnf_imp2or" (formula "4") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "4") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "4") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "4") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1,0"))
   (rule "all_pull_out3" (formula "4") (term "0"))
   (rule "shift_paren_or" (formula "4") (term "0,0"))
   (rule "shift_paren_or" (formula "4") (term "0,0,0"))
   (rule "commute_or" (formula "4") (term "0,0,0,0"))
   (rule "allLeft" (formula "4") (inst "t=v_m_1"))
   (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
   (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
   (rule "commute_or_2" (formula "4") (term "0,0"))
   (rule "commute_or_2" (formula "4") (term "0"))
   (rule "cut_direct" (formula "4") (term "1,0"))
   (branch "CUT: v_m_1 <= -1 TRUE"
      (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
      (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
      (rule "polySimp_addComm0" (formula "3") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "polySimp_elimOne" (formula "3") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
      (rule "qeq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
   (branch "CUT: v_m_1 <= -1 FALSE"
      (builtin "One Step Simplification" (formula "4"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "allLeft" (formula "5") (inst "t=v_base_1"))
      (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
      (rule "qeq_literals" (formula "5") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_contradInEq0" (formula "5") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
      (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
      (rule "add_literals" (formula "5") (term "0,0,1"))
      (rule "leq_literals" (formula "5") (term "0,1"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
      (rule "andLeft" (formula "5"))
      (rule "inEqSimp_homoInEq1" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "1,1,0"))
      (rule "times_zero_1" (formula "5") (term "1,0"))
      (rule "add_literals" (formula "5") (term "0"))
      (rule "leq_literals" (formula "5"))
      (rule "closeFalse" (formula "5"))
   )
)
(branch "CUT: forall int v_m; ( 0 <= v_m -> forall int v_base; ( 2 <= v_base & v_base <= v_m -> v_m < oHNf(v_base, v_m))) FALSE"
   (rule "hide_right" (formula "2") (userinteraction))
   (rule "intValueInduction" (formula "1") (inst "k=k") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=v_m_2") (userinteraction))
   (rule "impRight" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "allRight" (formula "3") (inst "sk=v_base_2") (userinteraction))
   (rule "impRight" (formula "3") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "powExpansion" (inst "m=m") (inst "n=n") (inst "r=r") (inst "a=a") (inst "c=c") (userinteraction))
   (rule "instAll" (formula "6") (term "1,1") (ifseqformula "1") (userinteraction))
   (rule "hide_left" (formula "2") (userinteraction))
   (rule "instAll" (formula "6") (term "0,1") (ifseqformula "1") (userinteraction))
   (rule "hide_left" (formula "2") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch "Case 1"
      (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
      (rule "closeTrue" (formula "5"))
   )
   (branch "Case 2"
      (rule "exLeft" (formula "1") (inst "sk=r_1") (userinteraction))
      (rule "exLeft" (formula "1") (inst "sk=a_1") (userinteraction))
      (rule "exLeft" (formula "1") (inst "sk=c_1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "oHNfDef2" (inst "base=base") (inst "m=m") (inst "k=k") (inst "a=a") (inst "c=c") (userinteraction))
      (rule "instAll" (formula "11") (term "0,1") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "instAll" (formula "11") (term "1,1") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "instAll" (formula "2") (term "1,0,0,1,0") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "1") (userinteraction))
      (rule "instAll" (formula "2") (term "1,0,1,0") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "1") (userinteraction))
      (rule "andLeft" (formula "2") (userinteraction))
      (rule "instAll" (formula "2") (term "1,1") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "1") (userinteraction))
      (rule "impLeft" (formula "1") (userinteraction))
      (branch "Case 1"
         (rule "replace_known_left" (formula "11") (term "1,0,0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
         (rule "closeTrue" (formula "11"))
      )
      (branch "Case 2"
         (rule "cut" (inst "cutFormula=!gt(r_1, Z(0(#)))") (userinteraction))
         (branch "CUT: !r_1 > 0 TRUE"
            (rule "notLeft" (formula "1"))
            (rule "polySimp_homoEq" (formula "2"))
            (rule "polySimp_homoEq" (formula "1"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_ltRight" (formula "13"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_gtRight" (formula "13"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "6"))
            (rule "add_zero_right" (formula "6") (term "0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "polySimp_sepPosMonomial" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
            (rule "polySimp_sepPosMonomial" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
            (rule "polySimp_elimOne" (formula "8") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
            (rule "qeq_literals" (formula "5") (term "0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "closeFalse" (formula "5"))
         )
         (branch "CUT: !r_1 > 0 FALSE"
            (rule "notRight" (formula "12") (userinteraction))
            (rule "cut" (inst "cutFormula=!gt(v_base_2, Z(1(#)))") (userinteraction))
            (branch "CUT: !v_base_2 > 1 TRUE"
               (rule "notLeft" (formula "1"))
               (rule "polySimp_homoEq" (formula "3"))
               (rule "polySimp_homoEq" (formula "2"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_ltRight" (formula "14"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "14"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10"))
               (rule "inEqSimp_commuteLeq" (formula "13"))
               (rule "inEqSimp_commuteLeq" (formula "6"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "12"))
               (rule "polySimp_sepPosMonomial" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: !v_base_2 > 1 FALSE"
               (rule "notRight" (formula "13") (userinteraction))
               (rule "powGreaterOne" (formula "8") (term "1") (ifseqformula "2") (ifseqformula "1") (userinteraction))
               (rule "applyEq" (formula "15") (term "1") (ifseqformula "3") (userinteraction))
               (rule "cut" (inst "cutFormula=!leq(c_1, oHNf(v_base_2, c_1))") (userinteraction))
               (branch "CUT: !c_1 <= oHNf(v_base_2, c_1) TRUE"
                  (rule "notLeft" (formula "1") (userinteraction))
                  (rule "leq_to_gt_alt" (formula "15") (userinteraction))
                  (rule "orRight" (formula "15") (userinteraction))
                  (rule "cut" (inst "cutFormula=lt(c_1, v_base_2)") (userinteraction))
                  (branch "CUT: c_1 < v_base_2 TRUE"
                     (rule "oHNfDef1" (inst "base=base") (inst "m=m") (userinteraction))
                     (rule "instAll" (formula "19") (term "0,0,0,0,1") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "instAll" (formula "19") (term "1,1,1") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch "Case 1"
                        (rule "eqSymm" (formula "18"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")) (ifInst ""  (formula "11")))
                        (rule "closeTrue" (formula "16"))
                     )
                     (branch "Case 2"
                        (rule "eqSymm" (formula "1") (userinteraction))
                        (rule "close" (formula "18") (ifseqformula "1") (userinteraction))
                     )
                  )
                  (branch "CUT: c_1 < v_base_2 FALSE"
                     (rule "instAll" (formula "18") (term "1,1,1") (ifseqformula "14") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch "Case 1"
                        (rule "andRight" (formula "15") (userinteraction))
                        (branch "Case 1"
                           (rule "close" (formula "15") (ifseqformula "10") (userinteraction))
                        )
                        (branch "Case 2"
                           (rule "hide_right" (formula "19") (userinteraction))
                           (rule "hide_right" (formula "18") (userinteraction))
                           (rule "hide_right" (formula "17") (userinteraction))
                           (rule "hide_right" (formula "16") (userinteraction))
                           (rule "hide_left" (formula "3") (userinteraction))
                           (rule "hide_left" (formula "13") (userinteraction))
                           (rule "cut" (inst "cutFormula=!geq(mul(pow(v_base_2, r_1), a_1), Z(1(#)))") (userinteraction))
                           (branch "CUT: !pow(v_base_2, r_1) * a_1 >= 1 TRUE"
                              (rule "notLeft" (formula "1") (userinteraction))
                              (rule "hide_right" (formula "14") (userinteraction))
                              (rule "hide_left" (formula "3") (userinteraction))
                              (rule "hide_left" (formula "7") (userinteraction))
                              (rule "hide_left" (formula "9") (userinteraction))
                              (rule "inEqSimp_geqRight" (formula "10"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "inEqSimp_commuteLeq" (formula "8"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "divide_inEq0" (formula "1") (inst "divY=pow(v_base_2, r_1)") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1") (term "0,1,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "div_literals" (formula "1") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: !pow(v_base_2, r_1) * a_1 >= 1 FALSE"
                              (rule "notRight" (formula "13") (userinteraction))
                              (rule "polySimp_homoEq" (formula "4"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "7"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "13"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "inEqSimp_commuteLeq" (formula "12"))
                              (rule "inEqSimp_commuteLeq" (formula "6"))
                              (rule "polySimp_sepPosMonomial" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "instAll" (formula "17") (term "0,1") (ifseqformula "1") (userinteraction))
                        (rule "hide_left" (formula "2") (userinteraction))
                        (rule "impLeft" (formula "1") (userinteraction))
                        (branch "Case 1"
                           (rule "eqSymm" (formula "18"))
                           (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "1"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltRight" (formula "19"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "10"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_commuteLeq" (formula "9"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "17"))
                           (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "3"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_literals" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                        (branch "Case 2"
                           (rule "close" (formula "17") (ifseqformula "1") (userinteraction))
                        )
                     )
                  )
               )
               (branch "CUT: !c_1 <= oHNf(v_base_2, c_1) FALSE"
                  (rule "notRight" (formula "15") (userinteraction))
                  (rule "cut" (inst "cutFormula=!leq(r_1, oHNf(v_base_2, r_1))") (userinteraction))
                  (branch "CUT: !r_1 <= oHNf(v_base_2, r_1) TRUE"
                     (rule "notLeft" (formula "1") (userinteraction))
                     (rule "leq_to_gt_alt" (formula "16") (userinteraction))
                     (rule "orRight" (formula "16") (userinteraction))
                     (rule "cut" (inst "cutFormula=lt(r_1, v_base_2)") (userinteraction))
                     (branch "CUT: r_1 < v_base_2 TRUE"
                        (rule "oHNfDef1" (inst "base=base") (inst "m=m") (userinteraction))
                        (rule "instAll" (formula "20") (term "0,0,0,0,1") (ifseqformula "1") (userinteraction))
                        (rule "hide_left" (formula "2") (userinteraction))
                        (rule "instAll" (formula "12") (term "1,1") (ifseqformula "1") (userinteraction))
                        (rule "hide_left" (formula "1") (userinteraction))
                        (rule "impLeft" (formula "11") (userinteraction))
                        (branch "Case 1"
                           (rule "eqSymm" (formula "19"))
                           (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_homoEq" (formula "6"))
                           (rule "polySimp_addComm0" (formula "20") (term "1"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "18"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_ltRight" (formula "20"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "13"))
                           (rule "mul_literals" (formula "13") (term "1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "inEqSimp_commuteLeq" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "5"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "polySimp_sepPosMonomial" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "18"))
                           (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "3"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "false_right" (formula "18"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                        (branch "Case 2"
                           (rule "eqSymm" (formula "11") (userinteraction))
                           (rule "close" (formula "19") (ifseqformula "11") (userinteraction))
                        )
                     )
                     (branch "CUT: r_1 < v_base_2 FALSE"
                        (rule "instAll" (formula "17") (term "1,1") (ifseqformula "15") (userinteraction))
                        (rule "impLeft" (formula "1") (userinteraction))
                        (branch "Case 1"
                           (rule "cut_direct" (formula "16") (term "0") (userinteraction))
                           (branch "CUT: 0 <= r_1 TRUE"
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "powRightIncreasing" (inst "exp=exp") (inst "base=base") (userinteraction))
                              (rule "instAll" (formula "20") (term "1,1") (ifseqformula "1") (userinteraction))
                              (rule "hide_left" (formula "2") (userinteraction))
                              (rule "instAll" (formula "21") (term "0,1") (ifseqformula "1") (userinteraction))
                              (rule "hide_left" (formula "2") (userinteraction))
                              (rule "impLeft" (formula "1") (userinteraction))
                              (branch "Case 1"
                                 (rule "eqSymm" (formula "21"))
                                 (rule "polySimp_homoEq" (formula "5"))
                                 (rule "polySimp_homoEq" (formula "6"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "1"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "22"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                 (rule "add_literals" (formula "21") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "add_zero_right" (formula "12") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "inEqSimp_commuteLeq" (formula "6"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "inEqSimp_commuteLeq" (formula "5"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17"))
                                 (rule "polySimp_sepPosMonomial" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                 (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                 (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_leqRight" (formula "21"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "20"))
                                 (rule "inEqSimp_contradEq3" (formula "20") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "false_right" (formula "20"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "closeFalse" (formula "15"))
                              )
                              (branch "Case 2"
                                 (rule "hide_right" (formula "20") (userinteraction))
                                 (rule "hide_right" (formula "20") (userinteraction))
                                 (rule "hide_right" (formula "20") (userinteraction))
                                 (rule "hide_left" (formula "6") (userinteraction))
                                 (rule "hide_left" (formula "16") (userinteraction))
                                 (rule "cut" (inst "cutFormula=!leq(pow(v_base_2, r_1), mul(pow(v_base_2, r_1), a_1))") (userinteraction))
                                 (branch "CUT: !pow(v_base_2, r_1) <= pow(v_base_2, r_1) * a_1 TRUE"
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "multLessAux" (inst "right=right") (inst "left=left") (inst "factor=factor") (userinteraction))
                                    (rule "cut" (inst "cutFormula=a_1 = Z(1(#))") (userinteraction))
                                    (branch "CUT: a_1 = 1 TRUE"
                                       (rule "polySimp_homoEq" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1,1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1,1,1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "add_zero_right" (formula "13") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,1,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "inEqSimp_commuteLeq" (formula "7"))
                                       (rule "inEqSimp_commuteLeq" (formula "19"))
                                       (rule "inEqSimp_commuteLeq" (formula "8"))
                                       (rule "inEqSimp_commuteLeq" (formula "20"))
                                       (rule "inEqSimp_commuteLeq" (formula "17"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,1,0") (ifseqformula "4"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: a_1 = 1 FALSE"
                                       (rule "instAll" (formula "18") (term "1,1") (ifseqformula "1") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "allLeftHide" (formula "1") (inst "t=Z(1(#))") (userinteraction))
                                       (rule "instAll" (formula "18") (term "0,1") (ifseqformula "1") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "impLeft" (formula "1") (userinteraction))
                                       (branch "Case 1"
                                          (rule "polySimp_homoEq" (formula "6"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "18"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "add_zero_right" (formula "12") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "inEqSimp_commuteLeq" (formula "6"))
                                          (rule "inEqSimp_commuteLeq" (formula "7"))
                                          (rule "inEqSimp_commuteLeq" (formula "11"))
                                          (rule "polySimp_sepPosMonomial" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                          (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "10"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_invertInEq1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                          (rule "mul_literals" (formula "3") (term "0,0,1"))
                                          (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "18"))
                                          (rule "add_literals" (formula "10") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "10"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "false_right" (formula "18"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "closeFalse" (formula "11"))
                                       )
                                       (branch "Case 2"
                                          (rule "andLeft" (formula "1") (userinteraction))
                                          (rule "hide_left" (formula "1") (userinteraction))
                                          (rule "times_one_1" (formula "1") (term "0,1") (userinteraction))
                                          (rule "cut_direct" (formula "1") (term "0") (userinteraction))
                                          (branch "CUT: 1 < a_1 TRUE"
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_homoEq" (formula "8"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1,0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13"))
                                             (rule "add_zero_right" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "inEqSimp_commuteLeq" (formula "17"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "20"))
                                             (rule "inEqSimp_commuteLeq" (formula "7"))
                                             (rule "polySimp_sepPosMonomial" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                             (rule "mul_literals" (formula "5") (term "0,0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "CUT: 1 < a_1 FALSE"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "polySimp_homoEq" (formula "6"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1,0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13"))
                                             (rule "add_zero_right" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "inEqSimp_commuteLeq" (formula "20"))
                                             (rule "inEqSimp_commuteLeq" (formula "7"))
                                             (rule "inEqSimp_commuteLeq" (formula "17"))
                                             (rule "inEqSimp_commuteLeq" (formula "8"))
                                             (rule "polySimp_sepPosMonomial" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,1"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1"))
                                             (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "19"))
                                             (rule "add_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "5"))
                                             (rule "add_zero_left" (formula "19") (term "0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "closeFalse" (formula "10"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: !pow(v_base_2, r_1) <= pow(v_base_2, r_1) * a_1 FALSE"
                                    (rule "notRight" (formula "16") (userinteraction))
                                    (rule "cut" (inst "cutFormula=!leq(mul(pow(v_base_2, r_1), a_1),
     add(mul(pow(v_base_2, r_1), a_1), c_1))") (userinteraction))
                                    (branch "CUT: ! pow(v_base_2, r_1) * a_1 <= pow(v_base_2, r_1) * a_1 + c_1 TRUE"
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (rule "polySimp_homoEq" (formula "7"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "19"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "add_zero_right" (formula "12") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "inEqSimp_commuteLeq" (formula "6"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "17"))
                                       (rule "inEqSimp_commuteLeq" (formula "19"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "inEqSimp_commuteLeq" (formula "4"))
                                       (rule "polySimp_sepPosMonomial" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "10"))
                                       (rule "inEqSimp_commuteGeq" (formula "4"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "closeFalse" (formula "13"))
                                    )
                                    (branch "CUT: ! pow(v_base_2, r_1) * a_1 <= pow(v_base_2, r_1) * a_1 + c_1 FALSE"
                                       (rule "notRight" (formula "17") (userinteraction))
                                       (rule "polySimp_homoEq" (formula "8"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1"))
                                       (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "add_zero_right" (formula "12") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "inEqSimp_commuteLeq" (formula "19"))
                                       (rule "inEqSimp_commuteLeq" (formula "6"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "7"))
                                       (rule "inEqSimp_commuteLeq" (formula "17"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "inEqSimp_commuteLeq" (formula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "polySimp_sepPosMonomial" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                       (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "9"))
                                       (rule "inEqSimp_commuteGeq" (formula "3"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                       (rule "mul_literals" (formula "4") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_pullOutFactor3b" (formula "12") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "11") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1"))
                                       (rule "mul_literals" (formula "11") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0"))
                                       (rule "mul_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "16"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: 0 <= r_1 FALSE"
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "false_right" (formula "17"))
                              (rule "eqSymm" (formula "19"))
                              (rule "polySimp_homoEq" (formula "4"))
                              (rule "polySimp_homoEq" (formula "5"))
                              (rule "polySimp_addComm0" (formula "20") (term "1"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "16"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "inEqSimp_ltRight" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "20"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11"))
                              (rule "add_zero_right" (formula "11") (term "0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "inEqSimp_commuteLeq" (formula "17"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "18"))
                              (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                        )
                        (branch "Case 2"
                           (rule "instAll" (formula "19") (term "0,1") (ifseqformula "1") (userinteraction))
                           (rule "hide_left" (formula "2") (userinteraction))
                           (rule "impLeft" (formula "1") (userinteraction))
                           (branch "Case 1"
                              (rule "eqSymm" (formula "19"))
                              (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "polySimp_homoEq" (formula "4"))
                              (rule "polySimp_homoEq" (formula "5"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "1"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltRight" (formula "20"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "11"))
                              (rule "add_zero_right" (formula "11") (term "0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "inEqSimp_commuteLeq" (formula "18"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "18"))
                              (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "3"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "false_right" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_literals" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "Case 2"
                              (rule "close" (formula "18") (ifseqformula "1") (userinteraction))
                           )
                        )
                     )
                  )
                  (branch "CUT: !r_1 <= oHNf(v_base_2, r_1) FALSE"
                     (rule "notRight" (formula "16") (userinteraction))
                     (rule "cut" (inst "cutFormula=!leq(pow(v_base_2, r_1),
     pow(v_base_2, oHNf(v_base_2, r_1)))") (userinteraction))
                     (branch "CUT: ! pow(v_base_2, r_1) <= pow(v_base_2, oHNf(v_base_2, r_1)) TRUE"
                        (rule "notLeft" (formula "1") (userinteraction))
                        (rule "powExpMonotone" (inst "base=base") (inst "e1=e1") (inst "e2=e2") (userinteraction))
                        (rule "instAll" (formula "18") (term "0,1") (ifseqformula "1") (userinteraction))
                        (rule "hide_left" (formula "2") (userinteraction))
                        (rule "instAll" (formula "18") (term "1,0") (ifseqformula "1") (userinteraction))
                        (rule "hide_left" (formula "2") (userinteraction))
                        (rule "instAll" (formula "18") (term "1,1") (ifseqformula "1") (userinteraction))
                        (rule "hide_left" (formula "2") (userinteraction))
                        (rule "impLeft" (formula "1") (userinteraction))
                        (branch "Case 1"
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_homoEq" (formula "6"))
                           (rule "polySimp_addComm0" (formula "19") (term "1"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0,1,0"))
                           (rule "inEqSimp_leqRight" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "19"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                           (rule "add_literals" (formula "19") (term "0,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_commuteLeq" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "polySimp_sepPosMonomial" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                           (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "7"))
                           (rule "leq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_geqRight" (formula "17"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEqRigid" (formula "6") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,0"))
                           (rule "times_zero_1" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_literals" (formula "2") (term "0"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "Case 2"
                           (rule "polySimp_homoEq" (formula "6"))
                           (rule "polySimp_homoEq" (formula "7"))
                           (rule "polySimp_addComm0" (formula "19") (term "1"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "19"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "13"))
                           (rule "mul_literals" (formula "13") (term "1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1,0,0"))
                           (rule "add_literals" (formula "7") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "10"))
                           (rule "inEqSimp_commuteLeq" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "5"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "polySimp_sepPosMonomial" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_literals" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                     (branch "CUT: ! pow(v_base_2, r_1) <= pow(v_base_2, oHNf(v_base_2, r_1)) FALSE"
                        (rule "notRight" (formula "17") (userinteraction))
                        (rule "cut" (inst "cutFormula=!leq(mul(pow(v_base_2, r_1), a_1),
     mul(pow(v_base_2, oHNf(v_base_2, r_1)), a_1))") (userinteraction))
                        (branch "CUT: ! pow(v_base_2, r_1) * a_1 <= pow(v_base_2, oHNf(v_base_2, r_1)) * a_1 TRUE"
                           (rule "notLeft" (formula "1") (userinteraction))
                           (rule "multLessAux" (inst "right=right") (inst "left=left") (inst "factor=factor") (userinteraction))
                           (rule "instAll" (formula "19") (term "0,1") (ifseqformula "1") (userinteraction))
                           (rule "hide_left" (formula "2") (userinteraction))
                           (rule "instAll" (formula "19") (term "0,0") (ifseqformula "1") (userinteraction))
                           (rule "hide_left" (formula "2") (userinteraction))
                           (rule "instAll" (formula "19") (term "1,0") (ifseqformula "1") (userinteraction))
                           (rule "hide_left" (formula "2") (userinteraction))
                           (rule "impLeft" (formula "1") (userinteraction))
                           (branch "Case 1"
                              (rule "close" (formula "18") (ifseqformula "9"))
                           )
                           (branch "Case 2"
                              (rule "andLeft" (formula "1") (userinteraction))
                              (rule "hide_left" (formula "2") (userinteraction))
                              (rule "cut" (inst "cutFormula=pow(v_base_2, r_1) = pow(v_base_2, oHNf(v_base_2, r_1))") (userinteraction))
                              (branch "CUT: pow(v_base_2, r_1) = pow(v_base_2, oHNf(v_base_2, r_1)) TRUE"
                                 (rule "multLess2" (formula "2") (term "1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "polySimp_homoEq" (formula "7"))
                                 (rule "polySimp_homoEq" (formula "8"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "add_zero_right" (formula "11") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_ltRight" (formula "20"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "inEqSimp_commuteLeq" (formula "6"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "inEqSimp_commuteLeq" (formula "11"))
                                 (rule "inEqSimp_commuteLeq" (formula "17"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,0"))
                                 (rule "times_zero_1" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "qeq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: pow(v_base_2, r_1) = pow(v_base_2, oHNf(v_base_2, r_1)) FALSE"
                                 (rule "cut_direct" (formula "1") (term "0") (userinteraction))
                                 (branch "CUT: pow(v_base_2, r_1) < pow(v_base_2, oHNf(v_base_2, r_1)) TRUE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hide_right" (formula "20") (userinteraction))
                                    (rule "hide_right" (formula "21") (userinteraction))
                                    (rule "hide_left" (formula "1") (userinteraction))
                                    (rule "hide_left" (formula "2") (userinteraction))
                                    (rule "hide_left" (formula "6") (userinteraction))
                                    (rule "hide_left" (formula "16") (userinteraction))
                                    (rule "leq_to_gt_alt" (formula "16") (userinteraction))
                                    (rule "orRight" (formula "16") (userinteraction))
                                    (rule "close" (formula "16") (ifseqformula "1") (userinteraction))
                                 )
                                 (branch "CUT: pow(v_base_2, r_1) < pow(v_base_2, oHNf(v_base_2, r_1)) FALSE"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "multLess2" (formula "1") (term "0") (ifseqformula "10"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "polySimp_homoEq" (formula "6"))
                                    (rule "polySimp_homoEq" (formula "7"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11"))
                                    (rule "add_zero_right" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11"))
                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                    (rule "inEqSimp_commuteLeq" (formula "6"))
                                    (rule "inEqSimp_commuteLeq" (formula "5"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "19"))
                                    (rule "inEqSimp_commuteLeq" (formula "17"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "0,1"))
                                    (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "10"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "9"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "19"))
                                    (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: ! pow(v_base_2, r_1) * a_1 <= pow(v_base_2, oHNf(v_base_2, r_1)) * a_1 FALSE"
                           (rule "notRight" (formula "18") (userinteraction))
                           (rule "hide_left" (formula "2") (userinteraction))
                           (rule "powBaseMonotone" (inst "base1=base1") (inst "base2=base2") (inst "e=e") (userinteraction))
                           (rule "instAll" (formula "19") (term "0,0,0,0,1") (ifseqformula "1") (userinteraction))
                           (rule "hide_left" (formula "2") (userinteraction))
                           (rule "instAll" (formula "19") (term "0,0,0,1") (ifseqformula "1") (userinteraction))
                           (rule "hide_left" (formula "2") (userinteraction))
                           (rule "instAll" (formula "2") (term "1,0,1") (ifseqformula "1") (userinteraction))
                           (rule "hide_left" (formula "1") (userinteraction))
                           (rule "impLeft" (formula "1") (userinteraction))
                           (branch "Case 1"
                              (rule "polySimp_homoEq" (formula "6"))
                              (rule "polySimp_homoEq" (formula "7"))
                              (rule "polySimp_addComm0" (formula "19") (term "1"))
                              (rule "polySimp_addComm0" (formula "18") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "19"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor2" (formula "19") (term "0,1"))
                              (rule "add_literals" (formula "19") (term "1,0,1"))
                              (rule "times_zero_1" (formula "19") (term "0,1"))
                              (rule "leq_literals" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "inEqSimp_commuteLeq" (formula "17"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "polySimp_sepPosMonomial" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "8"))
                              (rule "polySimp_sepPosMonomial" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                              (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_leqRight" (formula "17"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_invertInEq1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0"))
                              (rule "inEqSimp_invertInEq1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "Case 2"
                              (rule "multLessAux" (inst "right=right") (inst "left=left") (inst "factor=factor") (userinteraction))
                              (rule "instAll" (formula "2") (term "1") (ifseqformula "1") (userinteraction))
                              (rule "hide_left" (formula "1") (userinteraction))
                              (rule "instAll" (formula "2") (term "0") (ifseqformula "1") (userinteraction))
                              (rule "hide_left" (formula "1") (userinteraction))
                              (rule "instAll" (formula "3") (term "1,1") (ifseqformula "1") (userinteraction))
                              (rule "hide_left" (formula "1") (userinteraction))
                              (rule "impLeft" (formula "2") (userinteraction))
                              (branch "Case 1"
                                 (rule "close" (formula "19") (ifseqformula "10"))
                              )
                              (branch "Case 2"
                                 (rule "andLeft" (formula "2") (userinteraction))
                                 (rule "hide_left" (formula "3") (userinteraction))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1") (userinteraction))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "hide_left" (formula "1") (userinteraction))
                                 (rule "cut" (inst "cutFormula=!lt(mul(pow(v_base_2, r_1), a_1),
    mul(pow(add(v_base_2, Z(1(#))),
            oHNf(v_base_2, r_1)),
        a_1))") (userinteraction))
                                 (branch "CUT: ! pow(v_base_2, r_1) * a_1 < pow(v_base_2 + 1, oHNf(v_base_2, r_1)) * a_1 TRUE"
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "hide_right" (formula "20") (userinteraction))
                                    (rule "hide_left" (formula "18") (userinteraction))
                                    (rule "hide_left" (formula "7") (userinteraction))
                                    (rule "hide_left" (formula "3") (userinteraction))
                                    (rule "hide_left" (formula "3") (userinteraction))
                                    (rule "hide_left" (formula "5") (userinteraction))
                                    (rule "leq_to_gt_alt" (formula "2") (userinteraction))
                                    (rule "orLeft" (formula "2") (userinteraction))
                                    (branch " pow(v_base_2, r_1) * a_1 < pow(v_base_2, oHNf(v_base_2, r_1)) * a_1"
                                       (rule "multLess2" (formula "14") (ifseqformula "6"))
                                       (rule "multLess2" (formula "1") (ifseqformula "6"))
                                       (rule "multLess2" (formula "2") (ifseqformula "6"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_ltRight" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7"))
                                       (rule "add_zero_right" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "inEqSimp_commuteLeq" (formula "6"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_literals" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch " pow(v_base_2, r_1) * a_1 = pow(v_base_2, oHNf(v_base_2, r_1)) * a_1"
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "2") (userinteraction))
                                       (rule "close" (formula "14") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "CUT: ! pow(v_base_2, r_1) * a_1 < pow(v_base_2 + 1, oHNf(v_base_2, r_1)) * a_1 FALSE"
                                    (rule "notRight" (formula "19") (userinteraction))
                                    (rule "hide_left" (formula "2") (userinteraction))
                                    (rule "hide_left" (formula "2") (userinteraction))
                                    (rule "cut" (inst "cutFormula=!lt(add(mul(pow(v_base_2, r_1), a_1), c_1),
    add(mul(pow(add(v_base_2, Z(1(#))),
                oHNf(v_base_2, r_1)),
            a_1),
        c_1))") (userinteraction))
                                    (branch "CUT: ! pow(v_base_2, r_1) * a_1 + c_1 < pow(v_base_2 + 1, oHNf(v_base_2, r_1)) * a_1 + c_1 TRUE"
                                       (rule "notLeft" (formula "1") (userinteraction))
                                       (rule "hide_right" (formula "19") (userinteraction))
                                       (rule "hide_left" (formula "17") (userinteraction))
                                       (rule "hide_left" (formula "6") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "hide_left" (formula "4") (userinteraction))
                                       (rule "hide_left" (formula "7") (userinteraction))
                                       (rule "hide_left" (formula "7") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "hide_left" (formula "8") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "hide_left" (formula "3") (userinteraction))
                                       (rule "hide_left" (formula "3") (userinteraction))
                                       (rule "polySimp_addComm0" (formula "3") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1"))
                                       (rule "inEqSimp_ltRight" (formula "3"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_literals" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: ! pow(v_base_2, r_1) * a_1 + c_1 < pow(v_base_2 + 1, oHNf(v_base_2, r_1)) * a_1 + c_1 FALSE"
                                       (rule "notRight" (formula "18") (userinteraction))
                                       (rule "hide_left" (formula "2") (userinteraction))
                                       (rule "cut" (inst "cutFormula=!lt(v_m_2,
    add(mul(pow(add(v_base_2, Z(1(#))),
                oHNf(v_base_2, r_1)),
            a_1),
        c_1))") (userinteraction))
                                       (branch "CUT: ! v_m_2 < pow(v_base_2 + 1, oHNf(v_base_2, r_1)) * a_1 + c_1 TRUE"
                                          (rule "notLeft" (formula "1"))
                                          (rule "polySimp_homoEq" (formula "6"))
                                          (rule "polySimp_homoEq" (formula "7"))
                                          (rule "polySimp_addComm0" (formula "1") (term "1"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "19") (term "1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "19"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltRight" (formula "19"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "inEqSimp_commuteLeq" (formula "10"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17"))
                                          (rule "inEqSimp_commuteLeq" (formula "4"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "inEqSimp_commuteLeq" (formula "5"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,1"))
                                          (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                                          (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: ! v_m_2 < pow(v_base_2 + 1, oHNf(v_base_2, r_1)) * a_1 + c_1 FALSE"
                                          (rule "notRight" (formula "18") (userinteraction))
                                          (rule "hide_left" (formula "8") (userinteraction))
                                          (rule "hide_left" (formula "2") (userinteraction))
                                          (rule "polySimp_homoEq" (formula "6"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1"))
                                          (rule "polySimp_addComm0" (formula "1") (term "1"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0"))
                                          (rule "inEqSimp_ltRight" (formula "17"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8"))
                                          (rule "inEqSimp_commuteLeq" (formula "3"))
                                          (rule "inEqSimp_commuteLeq" (formula "14"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "inEqSimp_commuteLeq" (formula "4"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "polySimp_sepPosMonomial" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,1"))
                                          (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "5"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
)

}
