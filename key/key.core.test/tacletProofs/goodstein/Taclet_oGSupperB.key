\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jul 26 12:21:25 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=500
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Fri Jul 26 12:21:25 CEST 2019
name=oGSupperB
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
cut '\forall int v_r;\forall int v_n;
(2 <= v_n & 0 <= v_r -> olt(oGS(v_n, pow(v_n, v_r) - 1), oexp(omega, oGS(v_n, v_r))))';
tryclose branch;
rule hide_right formula='\forall int v_n;
   \forall int v_r;
     (2 <= v_n & 0 <= v_r -> olt(oGS(v_n, pow(v_n, v_r) - 1), oexp(omega, oGS(v_n, v_r))))';
rule  auto_int_induction_geqZero;
# induction starts here
rule allRight;
rule impRight;
rule andLeft;
cut 'olt(oGS(v_n_0,1-1),oexp(omega, oGS(v_n_0, 0)))';
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, pow(v_n_0, 0) - 1), oexp(omega, oGS(v_n_0, 0)))';
cut 'olt(oGS(v_n_0,0),oexp(omega, oGS(v_n_0, 0)))';
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, 1 - 1), oexp(omega, oGS(v_n_0, 0)))';
rule oGSZero occ=0;
rule oGSZero;
tryclose branch;
#base case finishes here
rule impRight;
rule andLeft;
rule allRight;
rule impRight;
rule andLeft;
cut 'v_r_0 + 1 = 1';
cut 'olt(oGS(v_n_0,pow(v_n_0,1) -1),oexp(omega,oGS(v_n_0,1)))';
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, pow(v_n_0, v_r_0 + 1) - 1), oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
cut 'olt(oGS(v_n_0,v_n_0 - 1),oexp(omega, oGS(v_n_0, 1)))';
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, pow(v_n_0, 1) - 1), oexp(omega, oGS(v_n_0, 1)))';
rule oGSDef1;
instantiate hide var=n with='v_n_0';
instantiate var=m with='v_n_0 - 1';
rule impLeft;
tryclose branch;
instantiate hide var=m with=1;
rule impLeft;
tryclose branch;
cut 'olt(oGS(v_n_0, v_n_0 - 1),omega)';
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, v_n_0 - 1), oexp(omega, oGS(v_n_0, 1)))';
cut 'olt(onat(v_n_0 - 1),omega)';
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, v_n_0 - 1), omega)';
rule hide_left formula='oGS(v_n_0, v_n_0 - 1) = onat(v_n_0 - 1)';
#rule hide_left formula='\forall int v_n;
#   (2 <= v_n & 0 <= v_r_0 -> olt(oGS(v_n, pow(v_n, v_r_0) - 1), oexp(omega, oGS(v_n, v_r_0))))';
rule hide_left formula='oGS(v_n_0, 1) = onat(1)';
cut '!0 <= v_n_0 - 1';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='0 <= v_r_0 + 1';
rule hide_left formula='2 <= v_n_0';
rule onatLessOmega occ=0;
tryclose branch;
# case v_r_0 = 0 finished
# aux lemma 
cut '!pow(v_n_0,v_r_0 + 1) - 1 = pow(v_n_0,v_r_0)*(v_n_0 -1) + (pow(v_n_0,v_r_0) - 1)';
rule notLeft;
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, pow(v_n_0, v_r_0 + 1) - 1), oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
cut '!pow(v_n_0, v_r_0) * (v_n_0 - 1) + pow(v_n_0, v_r_0) = pow(v_n_0, v_r_0)*v_n_0';
rule notLeft;
tryclose branch;
rule notRight;
cut '!pow(v_n_0, v_r_0) * v_n_0 = pow(v_n_0, v_r_0 + 1)';
rule notLeft;
rule hide_right formula='pow(v_n_0, v_r_0 + 1)-1 = pow(v_n_0, v_r_0) * (v_n_0 - 1) + (pow(v_n_0, v_r_0) - 1)';
rule hide_left formula='pow(v_n_0, v_r_0) * (v_n_0 - 1) + pow(v_n_0, v_r_0) = pow(v_n_0, v_r_0) * v_n_0';
#rule hide_left formula='\forall int v_n;
#   (2 <= v_n & 0 <= v_r_0 -> olt(oGS(v_n, pow(v_n, v_r_0) - 1), oexp(omega, oGS(v_n, v_r_0))))';
cut '!v_r_0 >= 0';
rule notLeft;
tryclose branch;
rule notRight;
rule  powExpSucc;
tryclose branch;
rule notRight;
tryclose branch;
rule notRight;
# aux lemma proved
rule oGSDef2;
instantiate hide var=n with='v_n_0';
instantiate hide var=m with='pow(v_n_0, v_r_0 + 1) - 1';
instantiate hide var=k with='v_r_0';
instantiate hide var=a with='v_n_0 - 1';
instantiate hide var=c with='(pow(v_n_0, v_r_0) - 1)';
rule impLeft;
tryclose branch;
instantiate hide var=v_n with='v_n_0';
rule impLeft;
tryclose branch;
cut 'olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
        oGS(v_n_0, pow(v_n_0, v_r_0) - 1)),
        oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
tryclose branch;
rule hide_right formula='olt(oGS(v_n_0, pow(v_n_0, v_r_0 + 1) - 1), oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule hide_left formula='  oGS(v_n_0, pow(v_n_0, v_r_0 + 1) - 1)
 = oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
        oGS(v_n_0, pow(v_n_0, v_r_0) - 1))';
cut '!olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oGS(v_n_0, pow(v_n_0, v_r_0) - 1)),
          oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
               oexp(omega, oGS(v_n_0, v_r_0))))';
rule notLeft;
rule hide_right formula='olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oGS(v_n_0, pow(v_n_0, v_r_0) - 1)),
     oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule hide_left formula='  pow(v_n_0, v_r_0 + 1) - 1
 = pow(v_n_0, v_r_0) * (v_n_0 - 1) + (pow(v_n_0, v_r_0) - 1)';
rule oltAddLessLeft;
tryclose branch;
rule notRight;  
tryclose branch;          
cut 'olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
              oexp(omega, oGS(v_n_0, v_r_0))),
        oexp(omega, oGS(v_n_0, v_r_0 + 1)))';     
tryclose branch;
rule hide_right formula='olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oGS(v_n_0, pow(v_n_0, v_r_0) - 1)),
     oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule hide_left formula='olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oGS(v_n_0, pow(v_n_0, v_r_0) - 1)),
     oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oexp(omega, oGS(v_n_0, v_r_0))))';
rule hide_left formula='  pow(v_n_0, v_r_0 + 1) - 1
 = pow(v_n_0, v_r_0) * (v_n_0 - 1) + (pow(v_n_0, v_r_0) - 1)';
rule hide_left formula='olt(oGS(v_n_0, pow(v_n_0, v_r_0) - 1), oexp(omega, oGS(v_n_0, v_r_0)))';
cut '!oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oexp(omega, oGS(v_n_0, v_r_0)))
     =
     otimes(oexp(omega, oGS(v_n_0, v_r_0)), oadd(onat(v_n_0 - 1),o_1))';
rule notLeft;
rule hide_right formula='olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oexp(omega, oGS(v_n_0, v_r_0))),
     oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule otimes_DefSucc;
tryclose branch;
rule notRight; 
cut '!oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oexp(omega, oGS(v_n_0, v_r_0)))
     =
     otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat((v_n_0 - 1) +1))';
rule notLeft;
rule hide_right formula='olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oexp(omega, oGS(v_n_0, v_r_0))),
     oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule onatSuccDef;
tryclose branch;
rule notRight; 
rule hide_left formula='  oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
        oexp(omega, oGS(v_n_0, v_r_0)))
 = otimes(oexp(omega, oGS(v_n_0, v_r_0)), oadd(onat(v_n_0 - 1), o_1))';
cut '!oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oexp(omega, oGS(v_n_0, v_r_0)))
     =
     otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0))';
rule notLeft;
tryclose branch;
rule notRight; 
rule hide_left formula='  oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
        oexp(omega, oGS(v_n_0, v_r_0)))
 = otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1 + 1))';
cut 'olt(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0)),
         oexp(omega, oGS(v_n_0, v_r_0 + 1)))'; 
tryclose branch;
rule hide_right formula='olt(oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
          oexp(omega, oGS(v_n_0, v_r_0))),
     oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule hide_left formula='  oadd(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0 - 1)),
        oexp(omega, oGS(v_n_0, v_r_0)))
 = otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0))';
cut '!olt(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0)),
          otimes(oexp(omega, oGS(v_n_0, v_r_0)), omega))';
rule notLeft;
rule hide_right formula='olt(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0)),
     oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule onatLessOmegaQ;
instantiate hide var=n with='v_n_0';
rule impLeft;
tryclose branch;
rule otimesMonotoneQ;
instantiate hide var=k with='oexp(omega, oGS(v_n_0, v_r_0))';
instantiate hide var=i with='onat(v_n_0)';
instantiate hide var=j with='omega';
rule impLeft;
rule oexpGreaterEqualOne;
tryclose branch;
tryclose branch;
rule notRight; 
cut 'oleq(otimes(oexp(omega, oGS(v_n_0, v_r_0)), omega),
         oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
tryclose branch;
rule hide_right formula='olt(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0)),
     oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule hide_left formula='olt(otimes(oexp(omega, oGS(v_n_0, v_r_0)), onat(v_n_0)),
     otimes(oexp(omega, oGS(v_n_0, v_r_0)), omega))';
cut  '!otimes(oexp(omega, oGS(v_n_0, v_r_0)), omega)
       =
      oexp(omega, oadd(oGS(v_n_0, v_r_0),o_1))';
rule notLeft;
rule hide_right formula='oleq(otimes(oexp(omega, oGS(v_n_0, v_r_0)), omega),
      oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule oexp_DefSucc;
tryclose branch;
rule notRight; 
cut 'oleq(oexp(omega, oadd(oGS(v_n_0, v_r_0), o_1)),
          oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
tryclose branch;
rule hide_left formula='  otimes(oexp(omega, oGS(v_n_0, v_r_0)), omega)
 = oexp(omega, oadd(oGS(v_n_0, v_r_0), o_1))';
rule hide_right formula='oleq(otimes(oexp(omega, oGS(v_n_0, v_r_0)), omega),
      oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule oGSstrictMonotone;
instantiate hide var=n  with='v_n_0';
instantiate hide var=m1 with='v_r_0';
instantiate hide var=m2 with='v_r_0 + 1';
rule impLeft;
tryclose branch;
cut '!oleq(oadd(oGS(v_n_0, v_r_0), o_1),
           oGS(v_n_0, v_r_0 + 1))';
rule notLeft;
rule hide_right formula='oleq(oexp(omega, oadd(oGS(v_n_0, v_r_0), o_1)),
      oexp(omega, oGS(v_n_0, v_r_0 + 1)))';
rule oLeastSucc;
tryclose branch;
rule notRight; 
rule hide_left formula='olt(oGS(v_n_0, v_r_0), oGS(v_n_0, v_r_0 + 1))';
rule oexpRightWeakMonotoneQ;
tryclose;
"


