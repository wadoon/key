\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jan 10 11:53:23 CET 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Tue Jan 10 11:53:23 CET 2017
name=oGSGreaterZeroQ
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
cut '\forall int v_e;(0<= v_e -> \forall int v_n; (1 < v_n & 0 < v_e -> olt(o_0, oGS(v_n, v_e))))';
tryclose branch;
rule hide_right formula='\forall int v_n; \forall int v_e; (1 < v_n & 0 < v_e -> olt(o_0, oGS(v_n, v_e)))';
rule intValueInduction;
rule allRight;
rule impRight;
rule andLeft;
rule allRight;
rule impRight;
rule andLeft;
cut 'v_e_3 < v_n_3';
rule oGSDef1;
instantiate hide var=n with='v_n_3';
instantiate hide var=m with='v_e_3';
rule impLeft;
tryclose branch;
cut 'olt(onat(0), onat(v_e_3))';
tryclose branch;
rule hide_right formula='olt(o_0, oGS(v_n_3, v_e_3))';
rule onatoltAut;
tryclose branch;
cut '!v_n_3 <= v_e_3';
tryclose branch;
rule hide_right formula='v_e_3 < v_n_3';
rule notRight;
rule  powInfiniteRange;
instantiate hide var='goal' with='v_e_3';
instantiate hide var='base' with='v_n_3';
rule impLeft;
tryclose branch;
rule intLeastNumberPrinciple;
rule exLeft;
rule andLeft;
rule andLeft;
cut 'exp_1 = 1';
tryclose branch;
cut '!0 < exp_1 -1';
tryclose branch;
rule notRight;
rule intdivmodEx;
instantiate hide var=n with='v_e_3';
instantiate hide var=d with='pow(v_n_3, exp_1 - 1)';
rule impLeft;
rule andRight;
rule hide_right formula='olt(o_0, oGS(v_n_3, v_e_3))';
rule lt_to_gt formula='0 < exp_1 - 1';
rule lt_to_gt formula='1 < v_n_3';
rule powGreaterOne occ=1;
tryclose branch;
rule exLeft;
rule exLeft;
rule andLeft;
rule andLeft;
rule andLeft;
instantiate hide var=k with='exp_1 - 1';
rule impLeft;
tryclose branch;
rule notLeft;
cut 'm_1 >= v_n_3';
cut '!pow(v_n_3, exp_1 - 1) * m_1 <= v_e_3';
tryclose branch;
rule notRight;
cut '!pow(v_n_3, exp_1) < mul(pow(v_n_3, exp_1 - 1),m_1)';
rule notLeft;
cut '!pow(v_n_3, exp_1) = pow(v_n_3, (exp_1-1) + 1)';
tryclose branch;
rule notRight;
cut '!exp_1 - 1>=0';
tryclose branch;
rule notRight;
rule powExpSucc;
tryclose branch;
cut 'pow(v_n_3, exp_1 - 1) * v_n_3 < pow(v_n_3, exp_1 - 1) * m_1';
tryclose branch;
rule multLessAux;
instantiate hide var='right'   with='m_1';
instantiate hide var='left'    with='v_n_3';
instantiate hide var='factor'  with='pow(v_n_3, exp_1 - 1)';
rule impLeft;
tryclose branch;
rule oGSDef2;
instantiate hide var=n with='v_n_3';
instantiate hide var=m with='v_e_3';
instantiate hide var=k with='exp_1 - 1';
instantiate hide var=a with='m_1';
instantiate hide var=c with='r_1';
rule impLeft;
rule andRight;
rule andRight;
tryclose branch;
instantiate var=k with='exp_1 - 1';
rule impLeft;
rule andRight;
tryclose branch;
rule powRightIncreasing;
tryclose branch;
instantiate hide var='v_n' with='v_n_3';
rule impLeft;
tryclose branch;
cut 'olt(o_0,oadd(otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1)), oGS(v_n_3, r_1)))';
tryclose branch;
rule hide_left formula='oGS(v_n_3, v_e_3) = oadd(otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1)), oGS(v_n_3, r_1))';
cut 'm_1=0';
tryclose branch;
cut '!olt(onat(0),onat(m_1))';
rule notLeft;
rule onatoltAut;
tryclose branch;
rule notRight;
rule otimesMonotoneQ;
instantiate hide var=k with='oexp(omega, oGS(v_n_3, exp_1 - 1))';
instantiate hide var=i with='o_0';
instantiate hide var=j with='onat(m_1)';
rule impLeft;
rule andRight;
rule oexpGreaterOne;
tryclose branch;
cut '!olt(o_0, otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1)))';
tryclose branch;
rule notRight;
cut 'r_1=0';
rule oGSDef1;
tryclose branch;
tryclose;
instantiate var=k with='r_1';
rule impLeft;
tryclose branch;
instantiate hide var='v_n' with='v_n_3';
rule impLeft;
rule andRight;
tryclose branch;
rule hide_left formula='\forall int k; (0 <= k & k < v_e_3 -> \forall int v_n; (1 < v_n & 0 < k -> olt(o_0, oGS(v_n, k))))';
rule hide_left formula='olt(otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), o_0), otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1)))';
rule oaddStrictMonotone;
instantiate hdie var=x with='otimes(oexp(omega, oGS(v_n_3, exp_1 - 1)), onat(m_1))';
instantiate hdie var=y with='oGS(v_n_3, r_1)';
rule impLeft;
tryclose branch;
tryclose;
"