\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Oct 09 11:25:32 CEST 2017
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=200
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\proofObligation "#Proof Obligation Settings
#Mon Oct 09 11:25:32 CEST 2017
name=encodeIncreasing
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proofScript "
rule oltpInd2;
rule andRight;
rule allRight;
rule allRight;
rule impRight;
cut  'olt(o_1, omax(v_v1_0, v_v2_0))';
rule impLeft;
tryclose branch;
rule allRight;
rule allRight;
rule impRight;
rule impRight;
rule encodeSucc;
instantiate hide var=v1 with='v_v1_0';
instantiate hide var=v2 with='v_v2_0';
instantiate hide var=w1 with='nv1_0';
instantiate hide var=w2 with='nv2_0';
rule impLeft;
tryclose branch;
cut 'olt(omax(nv1_0, nv2_0), oadd(encode(v_v1_0, v_v2_0), o_1))';
tryclose branch;
rule hide_right formula='olt(omax(nv1_0, nv2_0), encode(nv1_0, nv2_0))';
rule hide_left   formula='encode(nv1_0, nv2_0) = oadd(encode(v_v1_0, v_v2_0), o_1)';
rule oltPlusOne formula='olt(omax(v_v1_0, v_v2_0), encode(v_v1_0, v_v2_0))';
rule hide_left formula='olt(omax(v_v1_0, v_v2_0), encode(v_v1_0, v_v2_0))';
rule hide_left formula='olt(o_1, omax(v_v1_0, v_v2_0))';
rule hide_left formula='olt(o_1, omax(nv1_0, nv2_0))';
rule succpOmax;
instantiate hide var=v1 with='v_v1_0';
instantiate hide var=v2 with='v_v2_0';
instantiate hide var=w1 with='nv1_0';
instantiate hide var=w2 with='nv2_0';
rule impLeft;
tryclose branch;
rule hide_left formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule oltleq_trans occ=0;
tryclose branch;
cut '!oleq(omax(v_v1_0, v_v2_0),o_1)';
rule notLeft;
rule hide_right formula='\forall Ord nv1;\forall Ord nv2;
     (succp(v_v1_0, v_v2_0, nv1, nv2) -> olt(o_1, omax(nv1, nv2)) -> olt(omax(nv1, nv2), encode(nv1, nv2)))';
rule hide_left formula='olt(o_1, omax(v_v1_0, v_v2_0)) -> olt(omax(v_v1_0, v_v2_0), encode(v_v1_0, v_v2_0))';
rule olt_total_Axiom;
instantiate hide var=nv  with='omax(v_v1_0, v_v2_0)';
instantiate hide var=nv1 with='o_1';
tryclose branch;
rule notRight;
rule hide_right formula='olt(o_1, omax(v_v1_0, v_v2_0))';
rule hide_left formula='olt(o_1, omax(v_v1_0, v_v2_0)) -> olt(omax(v_v1_0, v_v2_0), encode(v_v1_0, v_v2_0))';
rule allRight;
rule allRight;
rule impRight;
rule impRight;
rule oleq_replace;
rule orLeft;
cut '!omax(v_v1_0, v_v2_0) = o_0';
rule notLeft;
tryclose branch;
rule notRight;
cut '!(v_v1_0  = o_0 & v_v2_0 = o_0)';
rule notLeft;
rule hide_right formula='olt(omax(nv1_0, nv2_0), encode(nv1_0, nv2_0))';
rule hide_left  formula='olt(omax(v_v1_0, v_v2_0), o_1)';
rule hide_left  formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule hide_left  formula='olt(o_1, omax(nv1_0, nv2_0))';
rule omaxDef;
rule ifthenelse_split;
tryclose branch;
rule hide_right formula='v_v1_0 = o_0 & v_v2_0 = o_0';
rule oleq_zeroAxiom;
instantiate hide var=nv with='v_v2_0';
rule applyEq occ=4;
tryclose branch;
rule notRight;
rule andLeft;
rule hide_left formula='omax(v_v1_0, v_v2_0) = o_0';
rule hide_left formula='olt(omax(v_v1_0, v_v2_0), o_1)';
cut '!succp(o_0, o_0, nv1_0, nv2_0)';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule succpConseqEq;
rule andLeft;
rule hide_right formula='olt(omax(nv1_0, nv2_0), encode(nv1_0, nv2_0))';
rule hide_left formula='succp(o_0, o_0, nv1_0, nv2_0)';
rule hide_left formula='v_v1_0 = o_0';
rule hide_left formula='v_v2_0 = o_0';
cut '!nv1_0 = o_1';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='nv1_0 = oadd(o_0, o_1)';
cut '!omax(nv1_0, nv2_0) = o_1';
rule notLeft;
rule hide_left formula='olt(o_1, omax(nv1_0, nv2_0))';
rule omaxDef;
rule ifthenelse_split;
cut '!oleq(o_1, nv2_0)';
rule notLeft;
rule hide_right formula='nv2_0 = o_1';
tryclose branch;
rule notRight;
rule hide_left formula='oleq(nv1_0, nv2_0)';
cut '!oleq(o_1, o_0)';
rule notLeft;
rule hide_right formula='nv2_0 = o_1';
rule hide_left formula='nv1_0 = o_1';
rule applyEq occ=1;
tryclose branch;
rule notRight;
tryclose branch;
tryclose branch;
rule notRight;
rule hide_left formula='nv1_0 = o_1';
rule hide_left formula='nv2_0 = o_0';
rule applyEq occ=5;
rule hide_left formula='omax(nv1_0, nv2_0) = o_1';
rule olt_irref_Axiom;
instantiate hide var=nv with='o_1';
rule notLeft;
tryclose branch;
cut 'v_v1_0=o_0';
cut '!v_v2_0= o_1';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='omax(v_v1_0, v_v2_0) = o_1';
cut '!succp(o_0, o_1, nv1_0, nv2_0)';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule succpConseqGreaterQ;
instantiate hide var=v1 with='o_0';
instantiate hide var=v2 with='o_1';
instantiate hide var=w1 with='nv1_0';
instantiate hide var=w2 with='nv2_0';
rule impLeft;
tryclose branch;
tryclose branch;
cut '!oleq(v_v1_0 ,omax(v_v1_0, v_v2_0))';
rule notLeft;
tryclose branch;
rule notRight;
cut '!oleq(v_v1_0, o_1)';
rule notLeft;
rule hide_right formula='v_v1_0 = o_0';
rule hide_right formula='olt(omax(nv1_0, nv2_0), encode(nv1_0, nv2_0))';
rule hide_left  formula='olt(o_1, omax(nv1_0, nv2_0))';
rule hide_left  formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule applyEq occ=1;
tryclose branch;
rule notRight;
cut '!v_v1_0 = o_1'
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='oleq(v_v1_0, o_1)';
rule hide_right formula='v_v1_0 = o_0';
cut 'v_v2_0 = o_0';
cut '!succp(o_1, o_0, nv1_0, nv2_0)';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule succpConseqLessRQ;
instantiate hide var=v2 with='o_0';
instantiate hide var=w1 with='nv1_0';
instantiate hide var=w2 with='nv2_0';
tryclose branch;
rule hide_left formula='oleq(v_v1_0, omax(v_v1_0, v_v2_0))';
cut '!oleq(v_v2_0 ,omax(v_v1_0, v_v2_0))';
rule notLeft;
tryclose branch;
rule notRight;
cut '!oleq(v_v2_0, o_1)';
rule notLeft;
rule hide_right formula='v_v2_0 = o_0';
rule hide_right formula='olt(omax(nv1_0, nv2_0), encode(nv1_0, nv2_0))';
rule hide_left  formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule hide_left  formula='olt(o_1, omax(nv1_0, nv2_0))';
rule hide_left  formula='v_v1_0 = o_1';
rule applyEq occ=1;
tryclose branch;
rule notRight;
cut '!v_v2_0 = o_1'
rule notLeft;
tryclose branch;
rule notRight;
rule hide_right formula='v_v2_0 = o_0';
cut '!succp(o_1, o_1, nv1_0, nv2_0)';
rule notLeft;
tryclose branch;
rule notRight;
rule hide_left formula='succp(v_v1_0, v_v2_0, nv1_0, nv2_0)';
rule succpConseqEqQ;
instantiate hide var=v1 with='o_1';
instantiate hide var=w1 with='nv1_0';
instantiate hide var=w2 with='nv2_0';
rule impLeft;
tryclose branch;
rule andLeft;
rule hide_left formula='succp(o_1, o_1, nv1_0, nv2_0)';
rule hide_left formula='oleq(v_v2_0, o_1)';
rule hide_left formula='oleq(v_v2_0, omax(v_v1_0, v_v2_0))';
rule hide_left formula='olt(o_1, omax(nv1_0, nv2_0))';
cut '!omax(nv1_0, nv2_0) = oadd(o_1, o_1)';
rule notLeft;
rule hide_right formula='olt(omax(nv1_0, nv2_0), encode(nv1_0, nv2_0))';
rule hide_left formula='omax(v_v1_0, v_v2_0) = o_1';
rule hide_left formula='v_v1_0 = o_1';
rule hide_left formula='v_v2_0 = o_1';
rule omaxDef;
rule ifthenelse_split;
rule hide_right formula='nv2_0 = oadd(o_1, o_1)';
cut '!oleq(nv1_0, o_0)';
rule notLeft;
rule hide_left formula='nv1_0 = oadd(o_1, o_1)';
rule applyEq occ=1;
tryclose branch;
rule notRight;
cut '!oleq(oadd(o_1, o_1), o_0)';
rule notLeft;
rule hide_left formula='oleq(nv1_0, nv2_0)';
rule hide_left formula='nv2_0 = o_0';
rule applyEq occ=0;
tryclose branch;
rule notRight;
tryclose branch;
tryclose branch;
rule notRight;
rule hide_left formula='omax(v_v1_0, v_v2_0) = o_1';
rule hide_left formula='v_v1_0 = o_1';
rule hide_left formula='v_v2_0 = o_1';
cut 'olt(oadd(o_1, o_1), encode(nv1_0, nv2_0))';
rule hide_left formula='nv1_0 = oadd(o_1, o_1)';
rule hide_left formula='nv2_0 = o_0';
rule applyEq occ=12;
tryclose branch;
rule hide_right formula='olt(omax(nv1_0, nv2_0), encode(nv1_0, nv2_0))';
cut 'olt(oadd(o_1, o_1), encode(nv1_0, o_0))';
tryclose branch;
rule hide_right formula='olt(oadd(o_1, o_1), encode(nv1_0, nv2_0))';
rule hide_left formula='nv2_0 = o_0';
cut 'olt(oadd(o_1, o_1), encode(oadd(o_1, o_1), o_0))';
tryclose branch;
rule hide_right formula='olt(oadd(o_1, o_1), encode(nv1_0, o_0))';
rule hide_left formula='nv1_0 = oadd(o_1, o_1)';
rule hide_left formula='omax(nv1_0, nv2_0) = oadd(o_1, o_1)';
cut '!oadd(o_1, o_1) = onat(2)';
rule notLeft;
tryclose branch;
rule notRight;
cut 'olt(oadd(o_1, o_1), encode(onat(2), o_0))';
rule applyEq occ=20;
tryclose branch;
rule hide_right formula='olt(oadd(o_1, o_1), encode(oadd(o_1, o_1), o_0))';
cut '!encode(onat(2), o_0)=onat(4)';
rule notLeft;
tryclose branch;
rule notRight;
cut 'olt(oadd(o_1, o_1), onat(4))';
tryclose branch;
rule hide_right formula='olt(oadd(o_1, o_1), encode(onat(2), o_0))';
rule hide_left  formula='encode(onat(2), o_0) = onat(4)';
rule applyEq occ=7;
tryclose branch;
rule hide_left formula='oadd(o_1, o_1) = onat(2)';
rule onatolt;
instantiate hide var=n with='2';
instantiate hide var=m with='4';
rule impLeft;
tryclose branch;
tryclose branch;
rule allRight;
rule allRight;
rule impRight;
rule andLeft;
rule impRight;
rule encodeLim;
instantiate hide var=v1 with='v_v1_0';
instantiate hide var=v2 with='v_v2_0';
rule impLeft;
tryclose branch;
rule andLeft;

tryclose;
"