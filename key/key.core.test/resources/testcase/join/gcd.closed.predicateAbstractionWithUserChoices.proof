\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 15 15:57:55 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:treatAsAxiom , assertions-assertions\\:safe , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Thu Dec 15 15:57:55 CET 2016
name=Gcd[Gcd\\:\\:gcd(int,int)].JML normal_behavior operation contract.0
contract=Gcd[Gcd\\:\\:gcd(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "dscheurer" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "dscheurer" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "11346053559")

(branch "dummy ID"
(rule "inInt" (formula "1") (term "0,1,0,0") (newnames "a,b,result,exc,heapAtPre,o,f"))
(rule "concrete_and_1" (formula "1") (term "1,0,0"))
(rule "inInt" (formula "1") (term "1,0,0"))
(rule "concrete_and_3" (formula "1") (term "0,0"))
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "inInt" (formula "1") (term "1,0,0,1,1,0,0,0,1,1"))
(rule "concrete_and_3" (formula "1") (term "0,0,1,1,0,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,1,1,0,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,1,0,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,0,0,1,0,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,0,0,1,1,0,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,0,1,1,0,0,0,1,1"))
(rule "simplifyUpdate2" (formula "1") (term "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "inEqSimp_gtToGeq" (formula "3") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "assignment" (formula "3") (term "1"))
(rule "sequentialToParallel2" (formula "3"))
(rule "simplifyUpdate3" (formula "3") (term "1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "3") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "all_unused" (formula "3") (term "1,0,1"))
(rule "all_unused" (formula "3") (term "1,0,1"))
(rule "concrete_and_3" (formula "3") (term "0,1"))
(rule "nnf_imp2or" (formula "3") (term "0,1,1,0,0,1"))
(rule "nnf_notAnd" (formula "3") (term "0,0,1,1,0,0,1"))
(rule "nnf_notAnd" (formula "3") (term "0,0,0,1,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,1,1,0,0,1"))
(rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,1,1,0,0,1"))
(rule "add_literals" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,1"))
(rule "add_zero_left" (formula "3") (term "0,0,0,0,0,1,1,0,0,1"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_gcd,savedHeapBefore_gcd"))
(rule "simplifyUpdate2" (formula "3") (term "1"))
(rule "ifUnfold" (formula "3") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "3") (term "1"))
(rule "sequentialToParallel2" (formula "3"))
(rule "simplifyUpdate3" (formula "3") (term "1,0"))
(rule "applyOnElementary" (formula "3") (term "1,0"))
(rule "applyOnRigidTerm" (formula "3") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "3") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "3") (term "2,0,1,0"))
(rule "applyOnRigidFormula" (formula "3") (term "0,0,1,0"))
(rule "applyOnPV" (formula "3") (term "0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "3") (term "1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,1,0"))
(rule "mul_literals" (formula "3") (term "1,0,0,1,0"))
(rule "ifSplit" (formula "3"))
(branch "if x true"
   (rule "simplifyUpdate2" (formula "1"))
   (rule "simplifyUpdate2" (formula "4"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "ifthenelse_concrete3" (formula "1"))
   (rule "boolean_not_equal_2" (formula "1") (term "1"))
   (rule "concrete_or_4" (formula "1"))
   (rule "unaryMinusInt" (formula "4") (term "1"))
   (rule "translateJavaUnaryMinusInt" (formula "4") (term "0,0,1"))
   (rule "polySimp_elimNeg" (formula "4") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "4"))
   (rule "simplifyUpdate2" (formula "4"))
   (rule "simplifyUpdate3" (formula "4") (term "1,0"))
   (rule "applyOnElementary" (formula "4") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "4") (term "0,1,0"))
   (rule "applyOnPV" (formula "4") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0"))
   (builtin "JoinRule" (formula "4") (newnames "abstrPred_or_AND_abstrPred_geq_0") (joinProc "JoinByPredicateAbstraction") (nrJoinPartners "1") (joinId "74") (distFormula "leq(a, Z(neglit(1(#))))") (abstractionPredicates "('int i', 'geq(i, Z(0(#)))'), ('int i', 'i = a | i = neg(a)')") (latticeType "de.uka.ilkd.key.axiom_abstraction.predicateabstraction.ConjunctivePredicateAbstractionLattice") (userChoices "('int _a', `('int i', 'i = a | i = neg(a)')_AND_('int i', 'geq(i, Z(0(#)))')`)"))
   (branch "Join Result"
      (rule "simplifyUpdate2" (formula "3"))
      (rule "andLeft" (formula "3") (userinteraction))
      (rule "polySimp_elimNeg" (formula "3") (term "1,1"))
      (rule "ifUnfold" (formula "5") (term "1") (inst "#boolv=x_5"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_41"))
      (rule "less_than_comparison_simple" (formula "5") (term "1"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,1,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,1,0"))
      (rule "ifSplit" (formula "5"))
      (branch "if x_41 true"
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "unaryMinusInt" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "translateJavaUnaryMinusInt" (formula "6") (term "0,1,0"))
         (rule "polySimp_elimNeg" (formula "6") (term "0,1,0"))
         (builtin "JoinRule" (formula "6") (newnames "abstrPred_or_AND_abstrPred_geq_3") (joinProc "JoinByPredicateAbstraction") (nrJoinPartners "1") (joinId "37616") (abstractionPredicates "('int ph', 'geq(ph, Z(0(#)))'), ('int ph', 'ph = b | ph = neg(b)')") (latticeType "de.uka.ilkd.key.axiom_abstraction.predicateabstraction.ConjunctivePredicateAbstractionLattice") (userChoices "('int _b', `('int ph', 'ph = b | ph = neg(b)')_AND_('int ph', 'geq(ph, Z(0(#)))')`)"))
         (branch "Join Result"
            (builtin "One Step Simplification" (formula "5"))
            (rule "andLeft" (formula "5"))
            (rule "eqSymm" (formula "5") (term "0"))
            (rule "eqSymm" (formula "5") (term "1"))
            (rule "polySimp_elimNeg" (formula "5") (term "0,1"))
            (rule "polySimp_homoEq" (formula "5") (term "1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
            (rule "variableDeclarationMult" (formula "7") (term "1"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "big_2"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "small_2"))
            (rule "blockEmpty" (formula "7") (term "1"))
            (rule "polySimp_sepPosMonomial" (formula "5") (term "1"))
            (rule "ifElseUnfold" (formula "7") (term "1") (inst "#boolv=x_5"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_42"))
            (rule "greater_than_comparison_simple" (formula "7") (term "1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_gtToGeq" (formula "7") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,0"))
            (rule "ifElseSplit" (formula "7"))
            (branch "if x_42 true"
               (builtin "One Step Simplification" (formula "8"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "assignment" (formula "8") (term "1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "assignment" (formula "8") (term "1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "blockEmpty" (formula "8") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
               (rule "times_zero_1" (formula "7") (term "0,0"))
               (rule "add_zero_left" (formula "7") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
               (rule "leq_literals" (formula "5") (term "0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x_5"))
               (rule "variableDeclarationAssign" (formula "8") (term "1"))
               (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_47"))
               (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_gcdHelp_4,result_5,exc_5,heapAfter_gcdHelp_4,anon_heap_gcdHelp_4") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
               (branch "Post (gcdHelp)"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "11"))
                  (rule "inEqSimp_gtToGeq" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,1,1"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "nnf_imp2or" (formula "13") (term "0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                  (rule "methodCallReturn" (formula "14") (term "1"))
                  (rule "assignment" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (rule "tryEmpty" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "impRight" (formula "14"))
                  (rule "jmod_axiom" (formula "15") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "15") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "15") (term "0,1,0"))
                  (rule "polySimp_mulComm1" (formula "15") (term "1,0,1,0"))
                  (rule "jmod_axiom" (formula "15") (term "0,0,1,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,1,0,0,1"))
                  (rule "jmod_axiom" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,0"))
                  (rule "jmod_axiom" (formula "15") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,1,0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "15") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "15") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "15") (term "0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "15") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,0,0,1"))
                  (rule "jdiv_axiom" (formula "12") (term "0,0"))
                  (rule "eqSymm" (formula "12"))
                  (rule "inEqSimp_subsumption1" (formula "12") (term "0,0") (ifseqformula "7"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
                  (rule "jdiv_axiom" (formula "14") (term "0,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "eqSymm" (formula "14"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                  (rule "cut_direct" (formula "5") (term "0"))
                  (branch "CUT: abstrPred_or_AND_abstrPred_geq_0 = a TRUE"
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "17") (term "0,0,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "5"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "7") (term "0,0"))
                     (rule "add_zero_left" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "cut_direct" (formula "5") (term "0"))
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 TRUE"
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "14"))
                        (rule "eqSymm" (formula "16") (term "0"))
                        (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "allRight" (formula "16") (inst "sk=x_51"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "notRight" (formula "18"))
                        (rule "notRight" (formula "18"))
                        (rule "inEqSimp_leqRight" (formula "18"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "8"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "div_axiom" (formula "16") (term "1") (inst "quotient=quotient_249"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,2,1,1"))
                        (rule "commute_and" (formula "16") (term "0,1"))
                        (rule "jdiv_axiom" (formula "14") (term "0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "14") (term "1") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "polySimp_homoEq" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "14") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "14") (term "0") (ifseqformula "9"))
                        (rule "leq_literals" (formula "14") (term "0,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "div_axiom" (formula "15") (term "0,0") (inst "quotient=quotient_250"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1"))
                        (rule "commute_and" (formula "15") (term "0,1"))
                        (rule "allLeft" (formula "20") (inst "t=x_51"))
                        (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                        (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "20") (term "0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "closeFalse" (formula "20"))
                     )
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 FALSE"
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0,0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "1,0,1,0,0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "5"))
                        (rule "elimGcdEq" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=abstrPred_or_AND_abstrPred_geq_3") (inst "elimGcd=Z(2(#))"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "add_zero_left" (formula "16") (term "0,1,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,0"))
                        (rule "add_literals" (formula "16") (term "1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "times_zero_1" (formula "16") (term "0,0,0"))
                        (rule "qeq_literals" (formula "16") (term "1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "leq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "16"))
                        (rule "add_zero_right" (formula "7") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "leq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "false_right" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                        (rule "mul_literals" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_241"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                        (rule "commute_and" (formula "13") (term "0,1"))
                        (rule "jdiv_axiom" (formula "11") (term "0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "polySimp_homoEq" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "11") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "11") (term "0,0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "div_axiom" (formula "12") (term "0,0") (inst "quotient=quotient_242"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                        (rule "commute_and" (formula "12") (term "0,1"))
                        (rule "jdiv_axiom" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "19") (term "0,0"))
                        (rule "polySimp_homoEq" (formula "19") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                        (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "17"))
                        (rule "polySimp_pullOutFactor2" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allRight" (formula "19") (inst "sk=x_50"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "notRight" (formula "21"))
                        (rule "notRight" (formula "21"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "polySimp_critPair" (formula "20") (ifseqformula "17"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "20") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "20") (term "1,1,0"))
                        (rule "polySimp_mulComm1" (formula "20") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0"))
                        (rule "add_zero_right" (formula "20") (term "0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "20"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0"))
                        (rule "ifthenelse_split_for" (formula "18") (term "1,1"))
                        (branch "result_5 >= 0 TRUE"
                           (rule "replace_known_left" (formula "16") (term "0,1,1") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "cnf_rightDist" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "commute_or" (formula "20"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17"))
                           (rule "cnf_rightDist" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "commute_or" (formula "21"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17"))
                           (rule "jdiv_axiom" (formula "28") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "4"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                           (rule "times_zero_2" (formula "4") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "polySimp_mulComm1" (formula "5") (term "0"))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1"))
                           (rule "jdiv_axiom" (formula "3") (term "0,0"))
                           (rule "eqSymm" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "13"))
                           (rule "leq_literals" (formula "3") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "allLeft" (formula "30") (inst "t=x_50"))
                           (rule "applyEq" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "3"))
                           (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "30") (term "0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "notLeft" (formula "30"))
                           (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_246"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                           (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "false_right" (formula "35"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "div_axiom" (formula "8") (term "0,1") (inst "quotient=quotient_247"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "9") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "9") (term "0,2") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "9") (term "0,0,2"))
                           (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "8"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                           (rule "mul_literals" (formula "9") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "div_axiom" (formula "6") (term "1") (inst "quotient=quotient_248"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,0"))
                           (rule "leq_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "8") (term "0,0,1"))
                           (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "8") (term "0,0,2"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "7"))
                           (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,0"))
                           (rule "times_zero_1" (formula "7") (term "0"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "8") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                           (rule "mul_literals" (formula "7") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "polySimp_critPair" (formula "34") (ifseqformula "33"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "34") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "1,1,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0"))
                           (rule "add_zero_right" (formula "34") (term "0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0"))
                           (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "1,0"))
                           (rule "times_zero_1" (formula "34") (term "0"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "jdiv_axiom" (formula "36") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                           (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "20"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0"))
                           (rule "close" (formula "37") (ifseqformula "12"))
                        )
                        (branch "result_5 >= 0 FALSE"
                           (rule "replace_known_right" (formula "16") (term "0,1,1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_geqRight" (formula "23"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "20"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "20"))
                           (rule "eqSymm" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,0"))
                           (rule "times_zero_1" (formula "19") (term "0"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "20"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "19"))
                           (rule "applyEq" (formula "21") (term "1") (ifseqformula "19"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "17") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "18"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0"))
                           (rule "eqSymm" (formula "23"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "18"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "18"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "17"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,0"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                           (rule "qeq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "18"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "jdiv_axiom" (formula "24") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "25") (term "0"))
                           (rule "polySimp_homoEq" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "25"))
                           (rule "jdiv_axiom" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "5"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                           (rule "times_zero_2" (formula "5") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                           (rule "polySimp_mulComm1" (formula "6") (term "0"))
                           (rule "polySimp_homoEq" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "eqSymm" (formula "4"))
                           (rule "inEqSimp_subsumption1" (formula "4") (term "0,0") (ifseqformula "14"))
                           (rule "leq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "allLeft" (formula "26") (inst "t=x_50"))
                           (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "26") (term "0,1"))
                           (rule "polySimp_homoEq" (formula "26") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,0,1"))
                           (rule "applyEq" (formula "26") (term "0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "polySimp_sepPosMonomial" (formula "26") (term "1"))
                           (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "26") (term "0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "notLeft" (formula "26"))
                           (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_243"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0"))
                           (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                           (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                           (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0"))
                           (rule "qeq_literals" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "false_right" (formula "31"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "div_axiom" (formula "9") (term "0,1") (inst "quotient=quotient_244"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0"))
                           (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,0"))
                           (rule "times_zero_1" (formula "10") (term "0"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "10") (term "0,2") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "10") (term "0,0,2"))
                           (rule "applyEqRigid" (formula "11") (term "0,1") (ifseqformula "9"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                           (rule "mul_literals" (formula "10") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_245"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "9") (term "0,0,1"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "8") (term "0,0,2"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                           (rule "mul_literals" (formula "8") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=quotient_241"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "2,0"))
                           (rule "applyEq" (formula "27") (term "0,1,0,1,2,0") (ifseqformula "30"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,2,0"))
                           (rule "add_literals" (formula "27") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "27") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "polySimp_homoEq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "0,0"))
                           (rule "add_zero_left" (formula "27") (term "0"))
                           (rule "polySimp_invertEq" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "times_zero_2" (formula "27") (term "1"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "polyDiv_zero" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "div_literals" (formula "27") (term "0,1"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "polySimp_critPair" (formula "29") (ifseqformula "26"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0"))
                           (rule "add_zero_right" (formula "29") (term "0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0"))
                           (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "28"))
                           (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,0"))
                           (rule "times_zero_1" (formula "29") (term "0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "jdiv_axiom" (formula "31") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                           (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "21"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0"))
                           (rule "close" (formula "32") (ifseqformula "13"))
                        )
                     )
                  )
                  (branch "CUT: abstrPred_or_AND_abstrPred_geq_0 = a FALSE"
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "5"))
                     (rule "polySimp_homoEq" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0"))
                     (rule "polySimp_pullOutFactor3" (formula "17") (term "0"))
                     (rule "applyEq" (formula "13") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "5"))
                     (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "5"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "elimGcdEq" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=a") (inst "elimGcd=Z(2(#))"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "add_zero_left" (formula "16") (term "0,0,1"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0"))
                     (rule "add_literals" (formula "16") (term "1,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,1,0"))
                     (rule "times_zero_1" (formula "16") (term "0,0,1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "times_zero_1" (formula "16") (term "0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "0,1,0"))
                     (rule "leq_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "qeq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "qeq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "false_right" (formula "16"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "7") (term "0,0"))
                     (rule "add_zero_left" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "cut_direct" (formula "5") (term "0"))
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 TRUE"
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "applyEq" (formula "16") (term "0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "14"))
                        (rule "eqSymm" (formula "16") (term "1,0"))
                        (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "applyEq" (formula "16") (term "1,0,1,0,0,1") (ifseqformula "5"))
                        (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_233"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                        (rule "commute_and" (formula "13") (term "0,1"))
                        (rule "jdiv_axiom" (formula "11") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,0,2,0"))
                        (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "eqSymm" (formula "11") (term "1"))
                        (rule "inEqSimp_invertInEq1" (formula "11") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                        (rule "times_zero_2" (formula "11") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                        (rule "inEqSimp_subsumption0" (formula "11") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "11") (term "0,0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "div_axiom" (formula "12") (term "0,0") (inst "quotient=quotient_234"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                        (rule "commute_and" (formula "12") (term "0,1"))
                        (rule "jdiv_axiom" (formula "18") (term "0,0,0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "19") (term "0,0"))
                        (rule "polySimp_homoEq" (formula "19") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                        (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "14"))
                        (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allRight" (formula "19") (inst "sk=x_49"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "notRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "notRight" (formula "21"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "polySimp_critPair" (formula "20") (ifseqformula "17"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "20") (term "1,1,0"))
                        (rule "polySimp_mulComm1" (formula "20") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0"))
                        (rule "add_zero_right" (formula "20") (term "0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "20"))
                        (rule "ifthenelse_split_for" (formula "18") (term "1,1"))
                        (branch "result_5 >= 0 TRUE"
                           (rule "replace_known_left" (formula "16") (term "0,1,1") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "cnf_rightDist" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "commute_or" (formula "20"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17"))
                           (rule "cnf_rightDist" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "commute_or" (formula "21"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17"))
                           (rule "jdiv_axiom" (formula "28") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "eqSymm" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "jdiv_axiom" (formula "3") (term "0,0"))
                           (rule "eqSymm" (formula "3"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "3") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "polySimp_mulComm1" (formula "4") (term "0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "4"))
                           (rule "polySimp_critPair" (formula "29") (ifseqformula "28"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "29") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0"))
                           (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,1,0"))
                           (rule "times_zero_1" (formula "29") (term "1,0"))
                           (rule "add_zero_right" (formula "29") (term "0"))
                           (rule "polySimp_addComm0" (formula "29") (term "0"))
                           (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "22"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,0"))
                           (rule "times_zero_1" (formula "29") (term "0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "allLeft" (formula "30") (inst "t=x_49"))
                           (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "5"))
                           (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "30") (term "0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "notLeft" (formula "30"))
                           (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_238"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                           (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "false_right" (formula "35"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_239"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0"))
                           (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "10") (term "0,2") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "10") (term "0,0,2"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "8"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                           (rule "mul_literals" (formula "9") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "div_axiom" (formula "6") (term "0,1") (inst "quotient=quotient_240"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,0"))
                           (rule "leq_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0"))
                           (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,2"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,2"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,2"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "8") (term "0,0,2"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,0"))
                           (rule "times_zero_1" (formula "7") (term "0"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,1"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "7") (term "0,0,1"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "6"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                           (rule "mul_literals" (formula "7") (term "1,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "7") (term "2") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "7") (term "0,2"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "cut_direct" (formula "24") (term "0"))
                           (branch "CUT: result_5 = 0 TRUE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "12"))
                              (rule "polySimp_homoEq" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                              (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "28"))
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                              (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "24"))
                              (rule "add_zero_right" (formula "2") (term "1"))
                              (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "24"))
                              (rule "jdiv_axiom_inline" (formula "30") (term "0,0,1,0"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0"))
                              (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "23"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "24"))
                              (rule "jdiv_axiom_inline" (formula "5") (term "0"))
                              (rule "qeq_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "23"))
                              (rule "add_zero_right" (formula "4") (term "0,1"))
                              (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "23"))
                              (rule "polySimp_addComm0" (formula "11") (term "0"))
                              (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                              (rule "eqSymm" (formula "25"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "23"))
                              (rule "eqSymm" (formula "22"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "23"))
                              (rule "times_zero_2" (formula "24") (term "0"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "23"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "26") (term "0"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "23"))
                              (rule "times_zero_2" (formula "27") (term "0"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "23"))
                              (rule "applyEqRigid" (formula "25") (term "0,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "25"))
                              (rule "jdiv_axiom_inline" (formula "25") (term "1"))
                              (rule "qeq_literals" (formula "25") (term "0,1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "div_literals" (formula "25") (term "1"))
                              (rule "eqSymm" (formula "25"))
                              (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "27") (term "0,0,0,0,1,0,0") (ifseqformula "26"))
                              (rule "jdiv_axiom_inline" (formula "27") (term "0,0,0,1,0,0"))
                              (rule "qeq_literals" (formula "27") (term "0,0,0,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "times_zero_2" (formula "12") (term "1,0"))
                              (rule "add_zero_right" (formula "12") (term "0"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "26"))
                              (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                              (rule "qeq_literals" (formula "9") (term "0,0"))
                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
                              (rule "true_left" (formula "9"))
                              (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                              (rule "div_literals" (formula "24") (term "0,1,0"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "25"))
                              (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "25"))
                              (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "8"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "24") (term "0,1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "25"))
                              (rule "times_zero_2" (formula "24") (term "0,0"))
                              (rule "add_zero_left" (formula "24") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "times_zero_2" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "applyEqRigid" (formula "26") (term "1,0,1,0,0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "25"))
                              (rule "div_literals" (formula "23") (term "1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: result_5 = 0 FALSE"
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "30"))
                              (rule "eqSymm" (formula "33"))
                              (rule "polySimp_homoEq" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                              (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "30"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0"))
                              (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                              (rule "applyEq" (formula "32") (term "1") (ifseqformula "30"))
                              (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "25"))
                              (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "34"))
                              (rule "inEqSimp_homoInEq0" (formula "29"))
                              (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "1,0"))
                              (rule "times_zero_1" (formula "29") (term "0"))
                              (rule "qeq_literals" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq1" (formula "30"))
                              (rule "polySimp_addComm1" (formula "30") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq0" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,0"))
                              (rule "times_zero_1" (formula "24") (term "0"))
                              (rule "qeq_literals" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "polySimp_sepPosMonomial" (formula "30"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "25"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0"))
                              (rule "leq_literals" (formula "33") (term "0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "false_right" (formula "33"))
                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                              (rule "leq_literals" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "jdiv_axiom" (formula "32") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
                              (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "times_zero_2" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "19"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0"))
                              (rule "close" (formula "33") (ifseqformula "9"))
                           )
                        )
                        (branch "result_5 >= 0 FALSE"
                           (rule "replace_known_right" (formula "16") (term "0,1,1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_geqRight" (formula "23"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "20"))
                           (rule "eqSymm" (formula "23"))
                           (rule "polySimp_homoEq" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "20"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "20"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,0"))
                           (rule "times_zero_1" (formula "19") (term "0"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "polySimp_sepPosMonomial" (formula "22"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "17") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "18"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "18"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0"))
                           (rule "eqSymm" (formula "23"))
                           (rule "polySimp_homoEq" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,0"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                           (rule "qeq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "17"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                           (rule "polySimp_sepPosMonomial" (formula "22"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "jdiv_axiom" (formula "24") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "25") (term "0"))
                           (rule "polySimp_homoEq" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "25"))
                           (rule "jdiv_axiom" (formula "5") (term "0,0"))
                           (rule "eqSymm" (formula "5"))
                           (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "eqSymm" (formula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "polySimp_mulComm1" (formula "5") (term "0"))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "allLeft" (formula "26") (inst "t=x_49"))
                           (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "26") (term "0,1"))
                           (rule "polySimp_homoEq" (formula "26") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,0,1"))
                           (rule "applyEqRigid" (formula "26") (term "0,0,0,1,0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "polySimp_sepPosMonomial" (formula "26") (term "1"))
                           (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "26") (term "0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "notLeft" (formula "26"))
                           (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_235"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0"))
                           (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                           (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                           (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0"))
                           (rule "qeq_literals" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "false_right" (formula "31"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_236"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0"))
                           (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "11") (term "0,0,1"))
                           (rule "applyEq" (formula "11") (term "0,2") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "11") (term "2"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,2"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "11") (term "0,0,2"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,0"))
                           (rule "times_zero_1" (formula "10") (term "0"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                           (rule "mul_literals" (formula "10") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "div_axiom" (formula "7") (term "0,1") (inst "quotient=quotient_237"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,2"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,0,2"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                           (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,2"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "9") (term "0,0,2"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,1"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "8") (term "0,0,1"))
                           (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "7"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                           (rule "mul_literals" (formula "8") (term "1,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=quotient_233"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "2,0"))
                           (rule "applyEq" (formula "27") (term "0,1,0,1,2,0") (ifseqformula "30"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,2,0"))
                           (rule "add_literals" (formula "27") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "27") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "polySimp_homoEq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "0,0"))
                           (rule "add_zero_left" (formula "27") (term "0"))
                           (rule "polySimp_invertEq" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "times_zero_2" (formula "27") (term "1"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "polyDiv_zero" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "div_literals" (formula "27") (term "0,1"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "jdiv_axiom" (formula "31") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
                           (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "times_zero_2" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "20"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0"))
                           (rule "close" (formula "32") (ifseqformula "10"))
                        )
                     )
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 FALSE"
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                        (rule "polySimp_homoEq" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "17") (term "0,0,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0,1,0,0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "17") (term "1,0,1,0,0,1") (ifseqformula "5"))
                        (rule "elimGcdEq" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=abstrPred_or_AND_abstrPred_geq_3") (inst "elimGcd=Z(2(#))"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "add_zero_left" (formula "16") (term "0,1,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,0"))
                        (rule "add_literals" (formula "16") (term "1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "times_zero_1" (formula "16") (term "0,0,0"))
                        (rule "qeq_literals" (formula "16") (term "1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "leq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "16"))
                        (rule "add_zero_right" (formula "7") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0"))
                        (rule "leq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "false_right" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                        (rule "mul_literals" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "jdiv_axiom" (formula "16") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "17") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "17") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                        (rule "applyEq" (formula "17") (term "1,0,0,0") (ifseqformula "13"))
                        (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0,0"))
                        (rule "add_literals" (formula "17") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_225"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1"))
                        (rule "commute_and" (formula "14") (term "0,1"))
                        (rule "jdiv_axiom" (formula "12") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "12"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,0,2,0"))
                        (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "eqSymm" (formula "12") (term "1"))
                        (rule "inEqSimp_invertInEq1" (formula "12") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                        (rule "times_zero_2" (formula "12") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                        (rule "inEqSimp_subsumption0" (formula "12") (term "0") (ifseqformula "7"))
                        (rule "leq_literals" (formula "12") (term "0,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "div_axiom" (formula "13") (term "0,0") (inst "quotient=quotient_226"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                        (rule "commute_and" (formula "13") (term "0,1"))
                        (rule "polySimp_critPair" (formula "17") (ifseqformula "14"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "1,1,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "1,1,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0"))
                        (rule "add_zero_right" (formula "17") (term "0"))
                        (rule "polySimp_addComm0" (formula "17") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "17"))
                        (rule "jdiv_axiom" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "21") (term "0,0"))
                        (rule "polySimp_homoEq" (formula "21") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,0,0"))
                        (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "19"))
                        (rule "polySimp_pullOutFactor2" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "0,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "allRight" (formula "21") (inst "sk=x_48"))
                        (rule "orRight" (formula "21"))
                        (rule "orRight" (formula "21"))
                        (rule "orRight" (formula "21"))
                        (rule "notRight" (formula "23"))
                        (rule "notRight" (formula "23"))
                        (rule "inEqSimp_leqRight" (formula "23"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "ifthenelse_split_for" (formula "19") (term "1,1"))
                        (branch "result_5 >= 0 TRUE"
                           (rule "replace_known_left" (formula "17") (term "0,1,1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "cnf_rightDist" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "commute_or" (formula "21"))
                           (rule "cnf_rightDist" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "commute_or" (formula "18"))
                           (rule "cnf_rightDist" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "commute_or" (formula "22"))
                           (rule "cnf_rightDist" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "commute_or" (formula "18"))
                           (rule "jdiv_axiom" (formula "29") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "4"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                           (rule "times_zero_2" (formula "4") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "polySimp_mulComm1" (formula "5") (term "0"))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1"))
                           (rule "jdiv_axiom" (formula "3") (term "0,0"))
                           (rule "eqSymm" (formula "3"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (term "0,0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "3") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "polySimp_mulComm1" (formula "4") (term "0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "4"))
                           (rule "polySimp_critPair" (formula "30") (ifseqformula "29"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0"))
                           (rule "add_zero_right" (formula "30") (term "0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0"))
                           (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "23"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,0"))
                           (rule "times_zero_1" (formula "30") (term "0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_230"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                           (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "false_right" (formula "35"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "div_axiom" (formula "8") (term "0,1") (inst "quotient=quotient_231"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "9") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "9") (term "0,2") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "9") (term "0,0,2"))
                           (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "8"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                           (rule "mul_literals" (formula "9") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "div_axiom" (formula "6") (term "0,1") (inst "quotient=quotient_232"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,0"))
                           (rule "leq_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,1"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "8") (term "0,0,1"))
                           (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,2"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,2"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,2"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "8") (term "0,0,2"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,0"))
                           (rule "times_zero_1" (formula "7") (term "0"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "6"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                           (rule "mul_literals" (formula "7") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "7") (term "1") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0,1"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_contradInEq1" (formula "7") (term "2") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "7") (term "0,2"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "cut_direct" (formula "25") (term "0"))
                           (branch "CUT: result_5 = 0 TRUE"
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "25"))
                              (rule "add_zero_right" (formula "2") (term "1"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "25"))
                              (rule "jdiv_axiom_inline" (formula "5") (term "0"))
                              (rule "qeq_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "25"))
                              (rule "jdiv_axiom_inline" (formula "31") (term "0,0,1,0"))
                              (rule "qeq_literals" (formula "31") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "25"))
                              (rule "times_zero_1" (formula "30") (term "0"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "13"))
                              (rule "polySimp_homoEq" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "12"))
                              (rule "polySimp_homoEq" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "28"))
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                              (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "eqSymm" (formula "25"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "23"))
                              (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "24"))
                              (rule "add_zero_right" (formula "3") (term "0,1"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "times_zero_2" (formula "13") (term "1,0"))
                              (rule "add_zero_right" (formula "13") (term "0"))
                              (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "28"))
                              (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "closeFalse" (formula "19"))
                           )
                           (branch "CUT: result_5 = 0 FALSE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "31"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0"))
                              (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "31"))
                              (rule "eqSymm" (formula "34"))
                              (rule "polySimp_homoEq" (formula "34"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                              (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "35"))
                              (rule "inEqSimp_homoInEq0" (formula "30"))
                              (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                              (rule "add_literals" (formula "30") (term "1,0"))
                              (rule "times_zero_1" (formula "30") (term "0"))
                              (rule "qeq_literals" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                              (rule "inEqSimp_homoInEq1" (formula "31"))
                              (rule "polySimp_addComm1" (formula "31") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0"))
                              (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "26"))
                              (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "30"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                              (rule "applyEq" (formula "32") (term "1") (ifseqformula "30"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "qeq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0"))
                              (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "31"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "29"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0"))
                              (rule "leq_literals" (formula "34") (term "0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "false_right" (formula "34"))
                              (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "29"))
                              (rule "leq_literals" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "allLeft" (formula "32") (inst "t=result_5"))
                              (rule "applyEq" (formula "32") (term "0,0,0,1,0") (ifseqformula "29"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                              (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "applyEq" (formula "32") (term "0,0,0,1,0") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                              (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "32") (term "0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "allLeft" (formula "33") (inst "t=x_48"))
                              (rule "applyEq" (formula "33") (term "0,0,1") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1"))
                              (rule "inEqSimp_contradEq3" (formula "33") (term "1") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1"))
                              (rule "qeq_literals" (formula "33") (term "0,1"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_231"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "2,0"))
                              (rule "applyEq" (formula "9") (term "0,1,0,1,2,0") (ifseqformula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,2,0"))
                              (rule "add_literals" (formula "9") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "9") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "polySimp_invertEq" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "times_zero_2" (formula "9") (term "1"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "polyDiv_zero" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "div_literals" (formula "9") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=quotient_232"))
                              (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "2,0"))
                              (rule "applyEq" (formula "6") (term "0,1,0,1,2,0") (ifseqformula "8"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,2,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor2" (formula "6") (term "0,1,2,0"))
                              (rule "add_literals" (formula "6") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "6") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_homoEq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "polySimp_invertEq" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "times_zero_2" (formula "6") (term "1"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "polyDiv_zero" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "div_literals" (formula "6") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "polySimp_critPair" (formula "9") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "9"))
                              (rule "jdiv_axiom" (formula "31") (term "0,0"))
                              (rule "eqSymm" (formula "31"))
                              (rule "inEqSimp_subsumption1" (formula "31") (term "0,0") (ifseqformula "27"))
                              (rule "leq_literals" (formula "31") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "eqSymm" (formula "31"))
                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                              (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,2,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,2,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0,2,0,0"))
                              (rule "add_literals" (formula "32") (term "1,0,0,2,0,0"))
                              (rule "times_zero_1" (formula "32") (term "0,0,2,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0"))
                              (rule "polySimp_rightDist" (formula "32") (term "0"))
                              (rule "polySimp_homoEq" (formula "32"))
                              (rule "polySimp_elimOne" (formula "32") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "0,0"))
                              (rule "add_zero_left" (formula "32") (term "0"))
                              (rule "polySimp_invertEq" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "times_zero_2" (formula "32") (term "1"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "polyDiv_zero" (formula "32") (term "0,0"))
                              (rule "div_literals" (formula "32") (term "1,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "times_zero_2" (formula "32") (term "0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "polyDiv_pullOut" (formula "31") (term "1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,2,1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "31") (term "0,0,2,0"))
                              (rule "add_literals" (formula "31") (term "1,0,0,2,0"))
                              (rule "times_zero_1" (formula "31") (term "0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "2,0"))
                              (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "31") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "eqSymm" (formula "31"))
                              (rule "polyDiv_zero" (formula "31") (term "1,1"))
                              (rule "div_literals" (formula "31") (term "1,1,1"))
                              (rule "polySimp_homoEq" (formula "31"))
                              (rule "polySimp_addComm1" (formula "31") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1"))
                              (rule "mul_literals" (formula "31") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "31") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "polySimp_homoEq" (formula "31"))
                              (rule "times_zero_2" (formula "31") (term "1,0"))
                              (rule "add_zero_right" (formula "31") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "31"))
                              (rule "mul_literals" (formula "31") (term "1"))
                              (rule "jdiv_axiom" (formula "32") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0,0,2,1"))
                              (rule "eqSymm" (formula "32"))
                              (rule "polySimp_elimOne" (formula "32") (term "0,0,2,0"))
                              (rule "inEqSimp_invertInEq1" (formula "32") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                              (rule "times_zero_2" (formula "32") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                              (rule "inEqSimp_subsumption0" (formula "32") (term "0,0") (ifseqformula "18"))
                              (rule "leq_literals" (formula "32") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "eqSymm" (formula "32"))
                              (rule "applyEq" (formula "33") (term "0,0,0,0") (ifseqformula "32"))
                              (rule "polyDiv_pullOut" (formula "33") (term "0,0,0,0") (inst "polyDivCoeff=quotient_232"))
                              (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,2,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,2,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "2,0,0,0,0"))
                              (rule "applyEq" (formula "33") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,2,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,0,1,2,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "33") (term "0,1,2,0,0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,0,1,2,0,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "0,1,2,0,0,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                              (rule "polySimp_homoEq" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                              (rule "applyEq" (formula "33") (term "0,1,0,0,0,0") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,0"))
                              (rule "polySimp_invertEq" (formula "33") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                              (rule "times_zero_2" (formula "33") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                              (rule "polyDiv_zero" (formula "33") (term "0,0,0,0"))
                              (rule "div_literals" (formula "33") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "times_zero_2" (formula "33") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "notLeft" (formula "33"))
                              (rule "polyDiv_pullOut" (formula "32") (term "1") (inst "polyDivCoeff=quotient_232"))
                              (rule "eqSymm" (formula "32"))
                              (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,0"))
                              (rule "applyEq" (formula "32") (term "0,1,0,1,2,0") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,2,0"))
                              (rule "add_literals" (formula "32") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "32") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "eqSymm" (formula "32"))
                              (rule "polyDiv_zero" (formula "32") (term "1,1"))
                              (rule "div_literals" (formula "32") (term "1,1,1"))
                              (rule "polySimp_homoEq" (formula "32"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "polySimp_homoEq" (formula "32"))
                              (rule "times_zero_2" (formula "32") (term "1,0"))
                              (rule "add_zero_right" (formula "32") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1"))
                              (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_226"))
                              (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                              (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "25"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,2,0"))
                              (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                              (rule "add_literals" (formula "24") (term "1,0,0"))
                              (rule "times_zero_1" (formula "24") (term "0,0"))
                              (rule "add_zero_left" (formula "24") (term "0"))
                              (rule "polySimp_invertEq" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                              (rule "times_zero_2" (formula "24") (term "1"))
                              (rule "polySimp_elimOne" (formula "24") (term "0"))
                              (rule "polyDiv_zero" (formula "24") (term "0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "div_literals" (formula "24") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "27"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "polyDiv_pullOut" (formula "25") (term "0") (inst "polyDivCoeff=quotient_225"))
                              (rule "polySimp_mulComm1" (formula "25") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "2,0"))
                              (rule "applyEq" (formula "25") (term "0,1,0,1,2,0") (ifseqformula "29"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,2,0"))
                              (rule "add_literals" (formula "25") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "25") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "25") (term "0,0") (ifseqformula "26"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "polySimp_homoEq" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "0,0"))
                              (rule "add_zero_left" (formula "25") (term "0"))
                              (rule "polySimp_invertEq" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "times_zero_2" (formula "25") (term "1"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "polyDiv_zero" (formula "25") (term "0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "div_literals" (formula "25") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "25") (term "0,0") (ifseqformula "26"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "polySimp_critPair" (formula "28") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "28") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0"))
                              (rule "add_zero_right" (formula "28") (term "0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "27"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "polySimp_critPair" (formula "28") (ifseqformula "27"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "28") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "28") (term "0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0"))
                              (rule "add_zero_right" (formula "28") (term "0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0"))
                              (rule "apply_eq_monomials" (formula "28") (term "1,0") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "28") (term "1,0,1,0"))
                              (rule "polySimp_mulComm1" (formula "28") (term "0,1,0,1,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "28") (term "1,0"))
                              (rule "add_literals" (formula "28") (term "1,1,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,1,0"))
                              (rule "add_zero_right" (formula "28") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "jdiv_axiom" (formula "32") (term "0,0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "20"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                              (rule "polyDiv_pullOut" (formula "33") (term "0,0") (inst "polyDivCoeff=quotient_231"))
                              (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,2,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,2,0,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "2,0,0"))
                              (rule "applyEq" (formula "33") (term "0,1,0,1,2,0,0") (ifseqformula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,2,0,0"))
                              (rule "add_literals" (formula "33") (term "1,0,1,2,0,0"))
                              (rule "times_zero_1" (formula "33") (term "0,1,2,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0"))
                              (rule "polySimp_rightDist" (formula "33") (term "0"))
                              (rule "polySimp_homoEq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "applyEqRigid" (formula "33") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "1,0,0"))
                              (rule "times_zero_1" (formula "33") (term "0,0"))
                              (rule "add_zero_left" (formula "33") (term "0"))
                              (rule "polySimp_invertEq" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                              (rule "times_zero_2" (formula "33") (term "1"))
                              (rule "polySimp_elimOne" (formula "33") (term "0"))
                              (rule "polyDiv_zero" (formula "33") (term "0,0"))
                              (rule "div_literals" (formula "33") (term "1,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "times_zero_2" (formula "33") (term "0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "closeTrue" (formula "33"))
                           )
                        )
                        (branch "result_5 >= 0 FALSE"
                           (rule "replace_known_right" (formula "17") (term "0,1,1") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "20") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "21"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "24"))
                           (rule "polySimp_homoEq" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                           (rule "add_literals" (formula "20") (term "1,0"))
                           (rule "times_zero_1" (formula "20") (term "0"))
                           (rule "qeq_literals" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "20"))
                           (rule "polySimp_sepPosMonomial" (formula "23"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "mul_literals" (formula "21") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "18") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0"))
                           (rule "qeq_literals" (formula "18") (term "0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "19"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0"))
                           (rule "eqSymm" (formula "24"))
                           (rule "polySimp_homoEq" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                           (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "19"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0"))
                           (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "19"))
                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "19"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq0" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,0"))
                           (rule "times_zero_1" (formula "18") (term "0"))
                           (rule "qeq_literals" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "23"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                           (rule "mul_literals" (formula "19") (term "1"))
                           (rule "jdiv_axiom" (formula "25") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "26") (term "0"))
                           (rule "polySimp_homoEq" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "26"))
                           (rule "jdiv_axiom" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "5"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                           (rule "times_zero_2" (formula "5") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                           (rule "polySimp_mulComm1" (formula "6") (term "0"))
                           (rule "polySimp_homoEq" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "eqSymm" (formula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "polySimp_mulComm1" (formula "5") (term "0"))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_227"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0"))
                           (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                           (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                           (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0"))
                           (rule "qeq_literals" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "false_right" (formula "31"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "div_axiom" (formula "9") (term "0,1") (inst "quotient=quotient_228"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "9"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0"))
                           (rule "applyEq" (formula "11") (term "0,2") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "11") (term "2"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,2"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "11") (term "0,0,2"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,0"))
                           (rule "times_zero_1" (formula "10") (term "0"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "9"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                           (rule "mul_literals" (formula "10") (term "1,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "2") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "10") (term "0,2"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "10") (term "1") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=quotient_225"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "2,0"))
                           (rule "applyEq" (formula "27") (term "0,1,0,1,2,0") (ifseqformula "30"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,2,0"))
                           (rule "add_literals" (formula "27") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "27") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "polySimp_homoEq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "0,0"))
                           (rule "add_zero_left" (formula "27") (term "0"))
                           (rule "polySimp_invertEq" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "times_zero_2" (formula "27") (term "1"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "polyDiv_zero" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "div_literals" (formula "27") (term "0,1"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "div_axiom" (formula "7") (term "0,1") (inst "quotient=quotient_229"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                           (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,2"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,0,2"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                           (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,2"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "9") (term "0,0,2"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,1"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "8") (term "0,0,1"))
                           (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "7"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                           (rule "mul_literals" (formula "8") (term "1,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "polySimp_critPair" (formula "30") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0"))
                           (rule "add_zero_right" (formula "30") (term "0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0"))
                           (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "29"))
                           (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,0"))
                           (rule "times_zero_1" (formula "30") (term "0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "polySimp_critPair" (formula "30") (ifseqformula "29"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,1,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0"))
                           (rule "add_zero_right" (formula "30") (term "0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0"))
                           (rule "apply_eq_monomials" (formula "30") (term "1,0") (ifseqformula "27"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "30") (term "0,1,0,1,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "30") (term "1,0"))
                           (rule "add_literals" (formula "30") (term "1,1,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,1,0"))
                           (rule "add_zero_right" (formula "30") (term "1,0"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,0"))
                           (rule "times_zero_1" (formula "30") (term "0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=quotient_226"))
                           (rule "polySimp_mulComm1" (formula "26") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "2,0"))
                           (rule "applyEq" (formula "26") (term "0,1,0,1,2,0") (ifseqformula "27"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,2,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,0,1,2,0"))
                           (rule "polySimp_pullOutFactor2" (formula "26") (term "0,1,2,0"))
                           (rule "add_literals" (formula "26") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "26") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "26") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "polySimp_homoEq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "1,0,0"))
                           (rule "times_zero_1" (formula "26") (term "0,0"))
                           (rule "add_zero_left" (formula "26") (term "0"))
                           (rule "polySimp_invertEq" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "times_zero_2" (formula "26") (term "1"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "polyDiv_zero" (formula "26") (term "0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "div_literals" (formula "26") (term "0,1"))
                           (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "26") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "allLeft" (formula "30") (inst "t=x_48"))
                           (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "5"))
                           (rule "polySimp_mulComm1" (formula "30") (term "0,1"))
                           (rule "polySimp_homoEq" (formula "30") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "30") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "30") (term "1") (ifseqformula "2"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1"))
                           (rule "qeq_literals" (formula "30") (term "0,1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "30") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_228"))
                           (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "2,0"))
                           (rule "applyEq" (formula "10") (term "0,1,0,1,2,0") (ifseqformula "12"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,2,0"))
                           (rule "add_literals" (formula "10") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "10") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "10") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_homoEq" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "1,0,0"))
                           (rule "times_zero_1" (formula "10") (term "0,0"))
                           (rule "add_zero_left" (formula "10") (term "0"))
                           (rule "polySimp_invertEq" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "times_zero_2" (formula "10") (term "1"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "polyDiv_zero" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "div_literals" (formula "10") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "10") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=quotient_229"))
                           (rule "polySimp_mulComm1" (formula "7") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "2,0"))
                           (rule "applyEq" (formula "7") (term "0,1,0,1,2,0") (ifseqformula "9"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,2,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,0,1,2,0"))
                           (rule "polySimp_pullOutFactor2" (formula "7") (term "0,1,2,0"))
                           (rule "add_literals" (formula "7") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "7") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "7") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_homoEq" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "0,0"))
                           (rule "add_zero_left" (formula "7") (term "0"))
                           (rule "polySimp_invertEq" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "times_zero_2" (formula "7") (term "1"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "polyDiv_zero" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "div_literals" (formula "7") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "7") (term "0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "7") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "polySimp_critPair" (formula "10") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                           (rule "polySimp_mulComm1" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polySimp_addComm0" (formula "10") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "10"))
                           (rule "jdiv_axiom" (formula "29") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "29"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "29") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                           (rule "times_zero_2" (formula "29") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                           (rule "inEqSimp_subsumption0" (formula "29") (term "0,0") (ifseqformula "19"))
                           (rule "leq_literals" (formula "29") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "eqSymm" (formula "29"))
                           (rule "applyEq" (formula "30") (term "0,0,0,0") (ifseqformula "29"))
                           (rule "polyDiv_pullOut" (formula "30") (term "0,0,0,0") (inst "polyDivCoeff=quotient_229"))
                           (rule "polySimp_mulComm1" (formula "30") (term "1,0,0,2,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "30") (term "2,0,0,0,0"))
                           (rule "applyEq" (formula "30") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "8"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,2,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "30") (term "0,1,2,0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "1,0,1,2,0,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "0,1,2,0,0,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,0,0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "30") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                           (rule "polySimp_homoEq" (formula "30") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                           (rule "applyEq" (formula "30") (term "0,1,0,0,0,0") (ifseqformula "8"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "30") (term "0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "1,0,0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,0"))
                           (rule "polySimp_invertEq" (formula "30") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                           (rule "times_zero_2" (formula "30") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                           (rule "polyDiv_zero" (formula "30") (term "0,0,0,0"))
                           (rule "div_literals" (formula "30") (term "1,0,0,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,0,0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "30") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "times_zero_2" (formula "30") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "notLeft" (formula "30"))
                           (rule "polyDiv_pullOut" (formula "29") (term "1") (inst "polyDivCoeff=quotient_229"))
                           (rule "eqSymm" (formula "29"))
                           (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "29") (term "2,0"))
                           (rule "applyEq" (formula "29") (term "0,1,0,1,2,0") (ifseqformula "8"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,2,0"))
                           (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,2,0"))
                           (rule "add_literals" (formula "29") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "29") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "eqSymm" (formula "29"))
                           (rule "polyDiv_zero" (formula "29") (term "1,1"))
                           (rule "div_literals" (formula "29") (term "1,1,1"))
                           (rule "polySimp_homoEq" (formula "29"))
                           (rule "polySimp_addComm1" (formula "29") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "29"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "29") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "polySimp_homoEq" (formula "29"))
                           (rule "times_zero_2" (formula "29") (term "1,0"))
                           (rule "add_zero_right" (formula "29") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "29"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1"))
                           (rule "jdiv_axiom" (formula "31") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "21"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                           (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=quotient_228"))
                           (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,2,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,2,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                           (rule "applyEqRigid" (formula "32") (term "0,1,0,1,2,0,0") (ifseqformula "12"))
                           (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1,2,0,0"))
                           (rule "add_literals" (formula "32") (term "1,0,1,2,0,0"))
                           (rule "times_zero_1" (formula "32") (term "0,1,2,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0"))
                           (rule "polySimp_rightDist" (formula "32") (term "0"))
                           (rule "polySimp_homoEq" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                           (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "12"))
                           (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "0,0"))
                           (rule "add_zero_left" (formula "32") (term "0"))
                           (rule "polySimp_invertEq" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "times_zero_2" (formula "32") (term "1"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "polyDiv_zero" (formula "32") (term "0,0"))
                           (rule "div_literals" (formula "32") (term "1,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                           (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "times_zero_2" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "closeTrue" (formula "32"))
                        )
                     )
                  )
               )
               (branch "Exceptional Post (gcdHelp)"
                  (builtin "One Step Simplification" (formula "10"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "10"))
                  (rule "close" (formula "13") (ifseqformula "12"))
               )
               (branch "Pre (gcdHelp)"
                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")))
                  (rule "inEqSimp_geqRight" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_42 false"
               (builtin "One Step Simplification" (formula "8"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_leqRight" (formula "7"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "assignment" (formula "8") (term "1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "assignment" (formula "8") (term "1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "blockEmpty" (formula "8") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x_5"))
               (rule "variableDeclarationAssign" (formula "8") (term "1"))
               (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_43"))
               (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_gcdHelp_3,result_4,exc_4,heapAfter_gcdHelp_3,anon_heap_gcdHelp_3") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
               (branch "Post (gcdHelp)"
                  (builtin "One Step Simplification" (formula "10"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "11"))
                  (rule "inEqSimp_gtToGeq" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,1,1"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,0,1,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,1,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,1,0,1,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1,1"))
                  (rule "jmod_axiom" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,1,1"))
                  (rule "nnf_imp2or" (formula "11") (term "0,1,1"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,1,1"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,0,1,1"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,1,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,1"))
                  (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,1"))
                  (rule "commute_and" (formula "11") (term "0,1"))
                  (rule "commute_or_2" (formula "11") (term "0,0,1,1"))
                  (rule "methodCallReturn" (formula "12") (term "1"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "methodCallEmpty" (formula "12") (term "1"))
                  (rule "tryEmpty" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "emptyModality" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "impRight" (formula "12"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,1,0,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,1,0,0,1"))
                  (rule "jmod_axiom" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0"))
                  (rule "jmod_axiom" (formula "13") (term "0,1,0"))
                  (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                  (rule "jdiv_axiom" (formula "12") (term "0,0,1,0,1"))
                  (rule "eqSymm" (formula "12"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "13") (term "0,0,1,0,1") (ifseqformula "12"))
                  (rule "commute_and" (formula "13") (term "0,1"))
                  (rule "cut_direct" (formula "5") (term "0"))
                  (branch "CUT: abstrPred_or_AND_abstrPred_geq_0 = a TRUE"
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,0,1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0,1,0,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1,1") (ifseqformula "5"))
                     (rule "cut_direct" (formula "7") (term "0"))
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 TRUE"
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "0,0,0,0,1,0,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "1,0,1,0,0,1") (ifseqformula "7"))
                        (rule "commute_and" (formula "14") (term "0"))
                        (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyEqRigid" (formula "14") (term "0,0,0,0,0") (ifseqformula "12"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_commuteGeq" (formula "1"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "12"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "11"))
                        (rule "jdiv_axiom_inline" (formula "10") (term "0"))
                        (rule "qeq_literals" (formula "10") (term "0,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "eqSymm" (formula "10"))
                        (rule "applyEqRigid" (formula "13") (term "0,0,0,0,1,0,0,1") (ifseqformula "11"))
                        (rule "jdiv_axiom_inline" (formula "13") (term "0,0,0,1,0,0,1"))
                        (rule "times_zero_2" (formula "13") (term "0,0,2,0,0,0,1,0,0,1"))
                        (rule "qeq_literals" (formula "13") (term "0,0,0,0,1,0,0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "11"))
                        (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "applyEqRigid" (formula "12") (term "1,0,1,0,0,1") (ifseqformula "10"))
                        (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "10"))
                        (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "11"))
                        (rule "add_zero_right" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "11") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "qeq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 FALSE"
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "7"))
                        (rule "polySimp_homoEq" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,0"))
                        (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "15") (term "1,0,1,0,0,1") (ifseqformula "7"))
                        (rule "polySimp_invertEq" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                        (rule "times_zero_2" (formula "1") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                        (rule "elimGcdEq" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=abstrPred_or_AND_abstrPred_geq_3") (inst "elimGcd=Z(2(#))"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "add_zero_left" (formula "14") (term "0,1,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0"))
                        (rule "add_literals" (formula "14") (term "1,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1"))
                        (rule "qeq_literals" (formula "14") (term "1,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "times_zero_1" (formula "14") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "leq_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "15"))
                        (rule "add_zero_right" (formula "7") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0"))
                        (rule "leq_literals" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "false_right" (formula "15"))
                        (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_217"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                        (rule "commute_and" (formula "11") (term "0,1"))
                        (rule "jdiv_axiom" (formula "14") (term "0,0"))
                        (rule "eqSymm" (formula "14"))
                        (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "eqSymm" (formula "14"))
                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                        (rule "jdiv_axiom" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "18") (term "0,0"))
                        (rule "polySimp_homoEq" (formula "18") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                        (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "14"))
                        (rule "polySimp_pullOutFactor2" (formula "18") (term "0,0"))
                        (rule "add_literals" (formula "18") (term "1,0,0"))
                        (rule "times_zero_1" (formula "18") (term "0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "allRight" (formula "18") (inst "sk=x_46"))
                        (rule "orRight" (formula "18"))
                        (rule "orRight" (formula "18"))
                        (rule "orRight" (formula "18"))
                        (rule "notRight" (formula "20"))
                        (rule "notRight" (formula "20"))
                        (rule "inEqSimp_leqRight" (formula "20"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "div_axiom" (formula "18") (term "1") (inst "quotient=quotient_218"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1"))
                        (rule "commute_and" (formula "18") (term "0,1"))
                        (rule "ifthenelse_split_for" (formula "15") (term "1,1"))
                        (branch "result_4 >= 0 TRUE"
                           (rule "replace_known_left" (formula "19") (term "0,1,1") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17"))
                           (rule "cnf_rightDist" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "commute_or" (formula "21"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17"))
                           (rule "cnf_rightDist" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "commute_or" (formula "22"))
                           (rule "jdiv_axiom" (formula "27") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "4"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                           (rule "times_zero_2" (formula "4") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "polySimp_mulComm1" (formula "5") (term "0"))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1"))
                           (rule "jdiv_axiom" (formula "3") (term "0,0"))
                           (rule "eqSymm" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "polySimp_critPair" (formula "23") (ifseqformula "28"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "polySimp_mulComm1" (formula "23") (term "1,1,0"))
                           (rule "polySimp_mulComm1" (formula "23") (term "0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "allLeft" (formula "30") (inst "t=x_46"))
                           (rule "applyEq" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "3"))
                           (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "30") (term "0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "notLeft" (formula "30"))
                           (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_222"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                           (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "false_right" (formula "35"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "div_axiom" (formula "8") (term "0,1") (inst "quotient=quotient_223"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0"))
                           (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,0"))
                           (rule "times_zero_1" (formula "9") (term "0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEqRigid" (formula "9") (term "0,2") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "9") (term "0,0,2"))
                           (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "8"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                           (rule "mul_literals" (formula "9") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "9") (term "1") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0,1"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "2") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "9") (term "0,2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "div_axiom" (formula "6") (term "1") (inst "quotient=quotient_224"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                           (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,0"))
                           (rule "leq_literals" (formula "6") (term "0,0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "andLeft" (formula "6"))
                           (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "8") (term "0,0,1"))
                           (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "8") (term "0,0,2"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "7"))
                           (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,0"))
                           (rule "times_zero_1" (formula "7") (term "0"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "8") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                           (rule "mul_literals" (formula "7") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "cut_direct" (formula "30") (term "0"))
                           (branch "CUT: result_4 = 0 TRUE"
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "27"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0"))
                              (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "27"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "12"))
                              (rule "polySimp_homoEq" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                              (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "25"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "27"))
                              (rule "jdiv_axiom_inline" (formula "5") (term "0"))
                              (rule "qeq_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "26"))
                              (rule "add_zero_right" (formula "2") (term "1"))
                              (rule "applyEq" (formula "29") (term "0,0,0,1,0") (ifseqformula "26"))
                              (rule "jdiv_axiom_inline" (formula "29") (term "0,0,1,0"))
                              (rule "qeq_literals" (formula "29") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "25"))
                              (rule "add_zero_right" (formula "4") (term "0,1"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                              (rule "times_zero_2" (formula "24") (term "0"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "25"))
                              (rule "times_zero_2" (formula "27") (term "0"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "26"))
                              (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "22"))
                              (rule "polySimp_addComm0" (formula "11") (term "0"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "22"))
                              (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1"))
                              (rule "applyEqRigid" (formula "28") (term "0,0,0,0,1,0,0") (ifseqformula "24"))
                              (rule "jdiv_axiom_inline" (formula "28") (term "0,0,0,1,0,0"))
                              (rule "qeq_literals" (formula "28") (term "0,0,0,0,1,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "23"))
                              (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "23"))
                              (rule "times_zero_2" (formula "9") (term "0,0"))
                              (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                              (rule "qeq_literals" (formula "9") (term "0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_commuteGeq" (formula "12"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "17"))
                              (rule "closeFalse" (formula "17"))
                           )
                           (branch "CUT: result_4 = 0 FALSE"
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0"))
                              (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "31"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0"))
                              (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "25"))
                              (rule "applyEq" (formula "33") (term "1") (ifseqformula "31"))
                              (rule "applyEq" (formula "27") (term "1") (ifseqformula "25"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq0" (formula "24"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,0"))
                              (rule "times_zero_1" (formula "24") (term "0"))
                              (rule "qeq_literals" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "30"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq1" (formula "31"))
                              (rule "polySimp_addComm1" (formula "31") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "33"))
                              (rule "inEqSimp_homoInEq0" (formula "29"))
                              (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "1,0"))
                              (rule "times_zero_1" (formula "29") (term "0"))
                              (rule "qeq_literals" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "29"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0"))
                              (rule "leq_literals" (formula "33") (term "0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "false_right" (formula "33"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "29"))
                              (rule "leq_literals" (formula "23") (term "0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "jdiv_axiom" (formula "32") (term "0,0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                              (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "20"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0"))
                              (rule "close" (formula "33") (ifseqformula "12"))
                           )
                        )
                        (branch "result_4 >= 0 FALSE"
                           (rule "replace_known_right" (formula "18") (term "0,1,1") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_geqRight" (formula "22"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "20"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,0"))
                           (rule "times_zero_1" (formula "19") (term "0"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "20"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "applyEq" (formula "21") (term "1") (ifseqformula "19"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "16") (term "0") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0"))
                           (rule "qeq_literals" (formula "16") (term "0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "16"))
                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,0"))
                           (rule "times_zero_1" (formula "16") (term "0"))
                           (rule "qeq_literals" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                           (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "16"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "jdiv_axiom" (formula "23") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "24") (term "0"))
                           (rule "polySimp_homoEq" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "24"))
                           (rule "jdiv_axiom" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "5"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "5") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                           (rule "times_zero_2" (formula "5") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                           (rule "polySimp_mulComm1" (formula "6") (term "0"))
                           (rule "polySimp_homoEq" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "eqSymm" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "allLeft" (formula "25") (inst "t=x_46"))
                           (rule "applyEq" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "25") (term "0,1,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "25") (term "0,1"))
                           (rule "polySimp_homoEq" (formula "25") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "25") (term "1"))
                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "notLeft" (formula "25"))
                           (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_219"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0"))
                           (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                           (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "30"))
                           (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "2"))
                           (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0"))
                           (rule "qeq_literals" (formula "30") (term "0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "false_right" (formula "30"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "div_axiom" (formula "9") (term "0,1") (inst "quotient=quotient_220"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0"))
                           (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "11") (term "0,0,1"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,0"))
                           (rule "times_zero_1" (formula "10") (term "0"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEq" (formula "10") (term "0,2") (ifseqformula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "10") (term "0,0,2"))
                           (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "9"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                           (rule "mul_literals" (formula "10") (term "1,2"))
                           (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_221"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                           (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0,0"))
                           (rule "leq_literals" (formula "7") (term "0,0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "8") (term "0,0,2"))
                           (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "8") (term "0,0,1"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                           (rule "mul_literals" (formula "8") (term "1,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=quotient_218"))
                           (rule "polySimp_mulComm1" (formula "27") (term "1,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,2,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "2,0"))
                           (rule "applyEq" (formula "27") (term "0,1,0,1,2,0") (ifseqformula "29"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,2,0"))
                           (rule "add_literals" (formula "27") (term "1,0,1,2,0"))
                           (rule "times_zero_1" (formula "27") (term "0,1,2,0"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "polySimp_homoEq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "1,0,0"))
                           (rule "times_zero_1" (formula "27") (term "0,0"))
                           (rule "add_zero_left" (formula "27") (term "0"))
                           (rule "polySimp_invertEq" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "times_zero_2" (formula "27") (term "1"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "polyDiv_zero" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "div_literals" (formula "27") (term "0,1"))
                           (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "27") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "jdiv_axiom" (formula "30") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                           (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "21"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0"))
                           (rule "close" (formula "31") (ifseqformula "13"))
                        )
                     )
                  )
                  (branch "CUT: abstrPred_or_AND_abstrPred_geq_0 = a FALSE"
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "5"))
                     (rule "polySimp_homoEq" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0"))
                     (rule "polySimp_pullOutFactor3" (formula "14") (term "0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,0,1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "0,0,0,1,0,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "5"))
                     (rule "inEqSimp_invertInEq1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "times_zero_2" (formula "6") (term "1"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "elimGcdEq" (formula "14") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=a") (inst "elimGcd=Z(2(#))"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "add_zero_left" (formula "14") (term "0,1,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1"))
                     (rule "qeq_literals" (formula "14") (term "1,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "times_zero_1" (formula "14") (term "0,0"))
                     (rule "times_zero_1" (formula "14") (term "0,0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "leq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "13"))
                     (rule "add_zero_right" (formula "5") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "13") (ifseqformula "5"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "false_right" (formula "13"))
                     (rule "cut_direct" (formula "6") (term "0"))
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 TRUE"
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "13") (term "0,0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "13") (term "1,0,1,0,0,1") (ifseqformula "6"))
                        (rule "commute_and" (formula "13") (term "0"))
                        (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_209"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                        (rule "commute_and" (formula "11") (term "0,1"))
                        (rule "jdiv_axiom" (formula "13") (term "0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "polySimp_elimOne" (formula "13") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "13") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                        (rule "times_zero_2" (formula "13") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "13") (term "0,0") (ifseqformula "5"))
                        (rule "leq_literals" (formula "13") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "eqSymm" (formula "13"))
                        (rule "applyEq" (formula "14") (term "0,0,1,0,1") (ifseqformula "13"))
                        (rule "commute_and" (formula "14") (term "0,1"))
                        (rule "cut_direct" (formula "14") (term "0,0"))
                        (branch "CUT: abstrPred_or_AND_abstrPred_geq_3 = 0 TRUE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "applyEq" (formula "11") (term "0,0,1,0,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEqRigid" (formula "10") (term "1,0,0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "14") (term "0,0,0,0,1,0,0,1") (ifseqformula "13"))
                           (rule "jdiv_axiom_inline" (formula "14") (term "0,0,0,1,0,0,1"))
                           (rule "qeq_literals" (formula "14") (term "0,0,0,0,1,0,0,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "1"))
                           (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "13"))
                           (rule "jdiv_axiom_inline" (formula "11") (term "0"))
                           (rule "qeq_literals" (formula "11") (term "0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "eqSymm" (formula "11"))
                           (rule "applyEq" (formula "14") (term "0,0,0,0,0") (ifseqformula "13"))
                           (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "applyEqRigid" (formula "13") (term "1,0,1,0,0,1") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "10") (term "1,0,1,1,1,1") (ifseqformula "12"))
                           (rule "add_zero_right" (formula "10") (term "0,1,1,1,1"))
                           (rule "applyEqRigid" (formula "13") (term "1,0,0") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "12"))
                           (rule "applyEqRigid" (formula "10") (term "1,0,1,2,1,1") (ifseqformula "12"))
                           (rule "add_zero_right" (formula "10") (term "0,1,2,1,1"))
                           (rule "inEqSimp_invertInEq0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "times_zero_2" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: abstrPred_or_AND_abstrPred_geq_3 = 0 FALSE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "17"))
                           (rule "add_zero_right" (formula "7") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "17") (ifseqformula "7"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "leq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_210"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                           (rule "commute_and" (formula "13") (term "0,1"))
                           (rule "jdiv_axiom" (formula "18") (term "0,0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm1" (formula "19") (term "0,0"))
                           (rule "polySimp_homoEq" (formula "19") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                           (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "16"))
                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "allRight" (formula "19") (inst "sk=x_45"))
                           (rule "orRight" (formula "19"))
                           (rule "orRight" (formula "19"))
                           (rule "notRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "notRight" (formula "21"))
                           (rule "inEqSimp_leqRight" (formula "21"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "ifthenelse_split_for" (formula "15") (term "1,1"))
                           (branch "result_4 >= 0 TRUE"
                              (rule "replace_known_left" (formula "18") (term "0,1,1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "cnf_rightDist" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "commute_or" (formula "17"))
                              (rule "cnf_rightDist" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "commute_or" (formula "20"))
                              (rule "cnf_rightDist" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "commute_or" (formula "17"))
                              (rule "cnf_rightDist" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "commute_or" (formula "21"))
                              (rule "polySimp_critPair" (formula "25") (ifseqformula "24"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "25") (term "1,1,0"))
                              (rule "polySimp_mulComm1" (formula "25") (term "0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "25"))
                              (rule "jdiv_axiom" (formula "28") (term "0,0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                              (rule "jdiv_axiom" (formula "4") (term "0,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "inEqSimp_subsumption1" (formula "4") (term "0,0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "4") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "eqSymm" (formula "4"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                              (rule "jdiv_axiom" (formula "3") (term "0,0"))
                              (rule "eqSymm" (formula "3"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (term "0,0") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "polySimp_mulComm1" (formula "4") (term "0"))
                              (rule "polySimp_homoEq" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "4"))
                              (rule "allLeft" (formula "30") (inst "t=x_45"))
                              (rule "applyEqRigid" (formula "30") (term "0,0,0,1,0") (ifseqformula "5"))
                              (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                              (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "notLeft" (formula "30"))
                              (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_214"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "35") (term "0"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                              (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0"))
                              (rule "add_zero_right" (formula "35") (term "0,0"))
                              (rule "qeq_literals" (formula "35") (term "0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "false_right" (formula "35"))
                              (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                              (rule "leq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_215"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0,0"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0"))
                              (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "9"))
                              (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,0"))
                              (rule "times_zero_1" (formula "9") (term "0"))
                              (rule "qeq_literals" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "9") (term "0,0,2"))
                              (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "9") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "8"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                              (rule "mul_literals" (formula "9") (term "1,2"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                              (rule "leq_literals" (formula "9") (term "0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                              (rule "leq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "div_axiom" (formula "6") (term "0,1") (inst "quotient=quotient_216"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0"))
                              (rule "leq_literals" (formula "6") (term "0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "6"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,0"))
                              (rule "times_zero_1" (formula "7") (term "0"))
                              (rule "qeq_literals" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "applyEq" (formula "7") (term "0,2") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "2"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,0,2"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,2"))
                              (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,2"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "7") (term "0,0,2"))
                              (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,1"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "7") (term "0,0,1"))
                              (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "6"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                              (rule "mul_literals" (formula "7") (term "1,2"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "polySimp_critPair" (formula "34") (ifseqformula "33"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "34") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "34") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                              (rule "add_literals" (formula "34") (term "1,1,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0"))
                              (rule "add_zero_right" (formula "34") (term "0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0"))
                              (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "32"))
                              (rule "polySimp_mulComm1" (formula "34") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                              (rule "add_literals" (formula "34") (term "1,0"))
                              (rule "times_zero_1" (formula "34") (term "0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "cut_direct" (formula "28") (term "0"))
                              (branch "CUT: result_4 = 0 TRUE"
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "25"))
                                 (rule "jdiv_axiom_inline" (formula "30") (term "0,0,1,0"))
                                 (rule "qeq_literals" (formula "30") (term "0,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "25"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0"))
                                 (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "0"))
                                 (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "25"))
                                 (rule "add_zero_right" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "25"))
                                 (rule "jdiv_axiom_inline" (formula "5") (term "0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "25"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "polySimp_homoEq" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "polySimp_homoEq" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "23"))
                                 (rule "add_zero_right" (formula "3") (term "0,1"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "24"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "23"))
                                 (rule "times_zero_2" (formula "25") (term "0"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "23"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "23"))
                                 (rule "times_zero_2" (formula "27") (term "0"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "23"))
                                 (rule "applyEqRigid" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                 (rule "div_literals" (formula "26") (term "0,1,0"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm0" (formula "11") (term "0"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "27"))
                                 (rule "qeq_literals" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                              (branch "CUT: result_4 = 0 FALSE"
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "29"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "25"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                 (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq0" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,0"))
                                 (rule "times_zero_1" (formula "28") (term "0"))
                                 (rule "qeq_literals" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0"))
                                 (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "25"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "24"))
                                 (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,0"))
                                 (rule "times_zero_1" (formula "24") (term "0"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0"))
                                 (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "26"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "30"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "27"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "false_right" (formula "33"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "27"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "jdiv_axiom" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "1") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                 (rule "close" (formula "33") (ifseqformula "9"))
                              )
                           )
                           (branch "result_4 >= 0 FALSE"
                              (rule "replace_known_right" (formula "17") (term "0,1,1") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_geqRight" (formula "22"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq0" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,0"))
                              (rule "times_zero_1" (formula "18") (term "0"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "18"))
                              (rule "applyEq" (formula "20") (term "1") (ifseqformula "18"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "16") (term "0") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0"))
                              (rule "qeq_literals" (formula "16") (term "0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "17"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq0" (formula "16"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "1,0"))
                              (rule "times_zero_1" (formula "16") (term "0"))
                              (rule "qeq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "jdiv_axiom" (formula "23") (term "0,0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm1" (formula "24") (term "0"))
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "24"))
                              (rule "jdiv_axiom" (formula "5") (term "0,0"))
                              (rule "eqSymm" (formula "5"))
                              (rule "inEqSimp_subsumption1" (formula "5") (term "0,0") (ifseqformula "14"))
                              (rule "leq_literals" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "eqSymm" (formula "5"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                              (rule "jdiv_axiom" (formula "4") (term "0,0"))
                              (rule "eqSymm" (formula "4"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "4") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "eqSymm" (formula "4"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                              (rule "polySimp_mulComm1" (formula "5") (term "0"))
                              (rule "polySimp_homoEq" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "5"))
                              (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_211"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0"))
                              (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "29"))
                              (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "2"))
                              (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0"))
                              (rule "qeq_literals" (formula "29") (term "0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "false_right" (formula "29"))
                              (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "allLeft" (formula "28") (inst "t=x_45"))
                              (rule "applyEqRigid" (formula "28") (term "0,0,0,1,0") (ifseqformula "9"))
                              (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "5"))
                              (rule "polySimp_mulComm1" (formula "28") (term "0,1"))
                              (rule "polySimp_homoEq" (formula "28") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "28") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "28") (term "1") (ifseqformula "2"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1"))
                              (rule "qeq_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_212"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0"))
                              (rule "applyEq" (formula "11") (term "0,2") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "11") (term "2"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,2"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,2"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "11") (term "0,0,2"))
                              (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "11") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq0" (formula "10"))
                              (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,0"))
                              (rule "times_zero_1" (formula "10") (term "0"))
                              (rule "qeq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "9"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                              (rule "mul_literals" (formula "10") (term "1,2"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "10") (term "2") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "10") (term "0,2"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "inEqSimp_subsumption1" (formula "10") (term "1") (ifseqformula "3"))
                              (rule "leq_literals" (formula "10") (term "0,1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "div_axiom" (formula "7") (term "0,1") (inst "quotient=quotient_213"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0,0"))
                              (rule "leq_literals" (formula "7") (term "0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                              (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,2"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,2"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                              (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,2"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "9") (term "0,0,2"))
                              (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,1"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "9") (term "0,0,1"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,0"))
                              (rule "times_zero_1" (formula "8") (term "0"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                              (rule "mul_literals" (formula "8") (term "1,2"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                              (rule "leq_literals" (formula "8") (term "0,0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "polySimp_critPair" (formula "29") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "29") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                              (rule "polySimp_mulComm1" (formula "29") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "1,1,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0"))
                              (rule "add_zero_right" (formula "29") (term "0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "29"))
                              (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=quotient_210"))
                              (rule "polySimp_mulComm1" (formula "26") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "26") (term "2,0"))
                              (rule "applyEq" (formula "26") (term "0,1,0,1,2,0") (ifseqformula "28"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,2,0"))
                              (rule "add_literals" (formula "26") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "26") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "26") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "polySimp_homoEq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "1,0,0"))
                              (rule "times_zero_1" (formula "26") (term "0,0"))
                              (rule "add_zero_left" (formula "26") (term "0"))
                              (rule "polySimp_invertEq" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                              (rule "times_zero_2" (formula "26") (term "1"))
                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                              (rule "polyDiv_zero" (formula "26") (term "0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "div_literals" (formula "26") (term "0,1"))
                              (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "26") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_209"))
                              (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                              (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "29"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,2,0"))
                              (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                              (rule "add_literals" (formula "24") (term "1,0,0"))
                              (rule "times_zero_1" (formula "24") (term "0,0"))
                              (rule "add_zero_left" (formula "24") (term "0"))
                              (rule "polySimp_invertEq" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                              (rule "times_zero_2" (formula "24") (term "1"))
                              (rule "polySimp_elimOne" (formula "24") (term "0"))
                              (rule "polyDiv_zero" (formula "24") (term "0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "div_literals" (formula "24") (term "0,1"))
                              (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "jdiv_axiom" (formula "30") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
                              (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "times_zero_2" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "19"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0"))
                              (rule "close" (formula "31") (ifseqformula "10"))
                           )
                        )
                     )
                     (branch "CUT: b = abstrPred_or_AND_abstrPred_geq_3 FALSE"
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEq" (formula "14") (term "0,0,0,0,1,0,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "6"))
                        (rule "polySimp_homoEq" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                        (rule "polySimp_pullOutFactor3" (formula "13") (term "0"))
                        (rule "applyEq" (formula "14") (term "0,0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "14") (term "1,0,1,0,0,1") (ifseqformula "6"))
                        (rule "elimGcdEq" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=abstrPred_or_AND_abstrPred_geq_3") (inst "elimGcd=Z(2(#))"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "add_zero_left" (formula "13") (term "0,1,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0"))
                        (rule "add_literals" (formula "13") (term "1,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                        (rule "times_zero_1" (formula "13") (term "0,1,0"))
                        (rule "times_zero_1" (formula "13") (term "0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "leq_literals" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "15"))
                        (rule "add_zero_right" (formula "7") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0"))
                        (rule "leq_literals" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "false_right" (formula "15"))
                        (rule "jdiv_axiom" (formula "15") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "16") (term "0,0"))
                        (rule "polyDiv_pullOut" (formula "16") (term "0,0,0,0") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_4)"))
                        (rule "polySimp_mulComm1" (formula "16") (term "1,0,0,2,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "2,0,0,0,0"))
                        (rule "applyEq" (formula "16") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,2,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "16") (term "0,1,2,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "1,0,1,2,0,0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "0,1,2,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "2,0,0,0,0"))
                        (rule "polyDiv_zero" (formula "16") (term "0,2,0,0,0,0"))
                        (rule "div_literals" (formula "16") (term "1,0,2,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "2,0,0,0,0"))
                        (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(mul(a, Z(neglit(1(#)))), result_4)"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "14"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0"))
                        (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,2,1,0"))
                        (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                        (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "1"))
                        (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                        (rule "div_literals" (formula "1") (term "1,0,2,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "16") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                        (rule "div_axiom" (formula "12") (term "1") (inst "quotient=quotient_200"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                        (rule "commute_and" (formula "12") (term "0,1"))
                        (rule "jdiv_axiom" (formula "17") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "times_zero_2" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "18") (term "0,1,0"))
                        (rule "polySimp_homoEq" (formula "18") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0"))
                        (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "15"))
                        (rule "polySimp_pullOutFactor2" (formula "18") (term "0,1,0"))
                        (rule "add_literals" (formula "18") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "18") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "jdiv_axiom" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                        (rule "times_zero_2" (formula "16") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "16") (term "0,0") (ifseqformula "7"))
                        (rule "leq_literals" (formula "16") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                        (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "16"))
                        (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_201"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "ifthenelse_split" (formula "2") (term "1,2,0"))
                        (branch "result_4 = 0 TRUE"
                           (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "3"))
                           (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                           (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "18") (term "0,0,0,1,0") (ifseqformula "2"))
                           (rule "jdiv_axiom_inline" (formula "18") (term "0,0,1,0"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "19") (term "0,0"))
                           (rule "eqSymm" (formula "19") (term "0"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "1"))
                           (rule "polySimp_homoEq" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                           (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "16"))
                           (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0"))
                           (rule "applyEq" (formula "19") (term "0,0,0,1,0,1") (ifseqformula "2"))
                           (rule "jdiv_axiom_inline" (formula "19") (term "0,0,1,0,1"))
                           (rule "qeq_literals" (formula "19") (term "0,0,0,1,0,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "16"))
                           (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "2"))
                           (rule "times_zero_2" (formula "15") (term "0"))
                           (rule "eqSymm" (formula "15"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "15"))
                           (rule "eqSymm" (formula "14"))
                           (rule "jdiv_axiom_inline" (formula "14") (term "1"))
                           (rule "div_literals" (formula "14") (term "1,1"))
                           (rule "qeq_literals" (formula "14") (term "0,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "eqSymm" (formula "14"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "closeFalse" (formula "10"))
                        )
                        (branch "result_4 = 0 FALSE"
                           (rule "add_zero_right" (formula "2") (term "2,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "eqSymm" (formula "2"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "polySimp_homoEq" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                           (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "14"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0"))
                           (rule "applyEq" (formula "15") (term "0,2") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "2"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,2"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,2"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "15") (term "0,0,2"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "13"))
                           (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                           (rule "add_literals" (formula "13") (term "1,0"))
                           (rule "times_zero_1" (formula "13") (term "0"))
                           (rule "qeq_literals" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "14") (term "0,0,1"))
                           (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "15") (term "1") (ifseqformula "13"))
                           (rule "polySimp_sepPosMonomial" (formula "2"))
                           (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm1" (formula "21") (term "0,0"))
                           (rule "polySimp_homoEq" (formula "21") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,0,0"))
                           (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "18"))
                           (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "allRight" (formula "21") (inst "sk=x_44"))
                           (rule "orRight" (formula "21"))
                           (rule "orRight" (formula "21"))
                           (rule "notRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "notRight" (formula "23"))
                           (rule "inEqSimp_leqRight" (formula "23"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "2"))
                           (rule "mul_literals" (formula "17") (term "1,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_202"))
                           (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,2"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "20"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0"))
                           (rule "applyEq" (formula "22") (term "0,2") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "2"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,2"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,0,2"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,2"))
                           (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,2"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,2"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,2"))
                           (rule "add_zero_right" (formula "22") (term "0,0,2"))
                           (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,1"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,0"))
                           (rule "times_zero_1" (formula "21") (term "0"))
                           (rule "qeq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "20"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "20"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "2"))
                           (rule "mul_literals" (formula "21") (term "1,2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,1"))
                           (rule "jdiv_axiom" (formula "25") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "jdiv_axiom" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "4"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                           (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                           (rule "times_zero_2" (formula "4") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "polySimp_mulComm1" (formula "5") (term "0"))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1"))
                           (rule "jdiv_axiom" (formula "3") (term "0,0"))
                           (rule "eqSymm" (formula "3"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "3") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "polySimp_mulComm1" (formula "4") (term "0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "4"))
                           (rule "ifthenelse_split_for" (formula "20"))
                           (branch "result_4 >= 0 TRUE"
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "21"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0"))
                              (rule "leq_literals" (formula "28") (term "0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "false_right" (formula "28"))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                              (rule "leq_literals" (formula "20") (term "0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "polySimp_critPair" (formula "22") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "22") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                              (rule "polySimp_mulComm1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_zero_right" (formula "22") (term "0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "22"))
                              (rule "polyDiv_pullOut" (formula "19") (term "0") (inst "polyDivCoeff=quotient_200"))
                              (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "2,0"))
                              (rule "applyEq" (formula "19") (term "0,1,0,1,2,0") (ifseqformula "23"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,2,0"))
                              (rule "add_literals" (formula "19") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "19") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "19") (term "0,0") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "19") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "polySimp_homoEq" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "polySimp_invertEq" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "times_zero_2" (formula "19") (term "1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "polyDiv_zero" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "div_literals" (formula "19") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "19") (term "0,0") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "19") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "div_axiom" (formula "5") (term "0,1") (inst "quotient=quotient_206"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,0"))
                              (rule "leq_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0"))
                              (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "1,0"))
                              (rule "times_zero_1" (formula "6") (term "0"))
                              (rule "qeq_literals" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "6") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "6") (term "0,2") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "6") (term "2"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,2"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,2"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "6") (term "0,0,2"))
                              (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                              (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "2"))
                              (rule "mul_literals" (formula "6") (term "1,2"))
                              (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "2"))
                              (rule "leq_literals" (formula "6") (term "0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "div_axiom" (formula "3") (term "0,1") (inst "quotient=quotient_207"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0"))
                              (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,1"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "5") (term "0,0,1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "4") (term "0,2") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "4") (term "2"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,2"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,2"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,2"))
                              (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,2"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "4") (term "0,0,2"))
                              (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "3"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "2"))
                              (rule "mul_literals" (formula "4") (term "1,2"))
                              (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "2"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_208"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "32"))
                              (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0"))
                              (rule "qeq_literals" (formula "32") (term "0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "false_right" (formula "32"))
                              (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                              (rule "leq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "polyDiv_pullOut" (formula "28") (term "0") (inst "polyDivCoeff=quotient_202"))
                              (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "2,0"))
                              (rule "applyEq" (formula "28") (term "0,1,0,1,2,0") (ifseqformula "30"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,2,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1,2,0"))
                              (rule "add_literals" (formula "28") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "28") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "0,0"))
                              (rule "add_zero_left" (formula "28") (term "0"))
                              (rule "polySimp_invertEq" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "times_zero_2" (formula "28") (term "1"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "polyDiv_zero" (formula "28") (term "0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "div_literals" (formula "28") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "allLeft" (formula "30") (inst "t=result_4"))
                              (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                              (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0"))
                              (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=x_44"))
                              (rule "applyEq" (formula "31") (term "0,0,1") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                              (rule "inEqSimp_contradEq3" (formula "31") (term "1") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "31") (term "0,0,1"))
                              (rule "qeq_literals" (formula "31") (term "0,1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "31") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_206"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "2,0"))
                              (rule "applyEq" (formula "9") (term "0,1,0,1,2,0") (ifseqformula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,2,0"))
                              (rule "add_literals" (formula "9") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "9") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "polySimp_invertEq" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "times_zero_2" (formula "9") (term "1"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "polyDiv_zero" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "div_literals" (formula "9") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "polySimp_critPair" (formula "26") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0"))
                              (rule "add_zero_right" (formula "26") (term "0"))
                              (rule "polySimp_addComm0" (formula "26") (term "0"))
                              (rule "apply_eq_monomials" (formula "26") (term "1,0") (ifseqformula "29"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "1,0,1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "0,1,0,1,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "1,1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,1,0"))
                              (rule "add_zero_right" (formula "26") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=quotient_207"))
                              (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "2,0"))
                              (rule "applyEq" (formula "6") (term "0,1,0,1,2,0") (ifseqformula "8"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,2,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor2" (formula "6") (term "0,1,2,0"))
                              (rule "add_literals" (formula "6") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "6") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_homoEq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "polySimp_invertEq" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "times_zero_2" (formula "6") (term "1"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "polyDiv_zero" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "div_literals" (formula "6") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "jdiv_axiom" (formula "28") (term "0,0"))
                              (rule "eqSymm" (formula "28"))
                              (rule "inEqSimp_subsumption1" (formula "28") (term "0,0") (ifseqformula "22"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "28"))
                              (rule "polyDiv_pullOut" (formula "29") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,2,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,2,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "29") (term "0,0,2,0,0"))
                              (rule "add_literals" (formula "29") (term "1,0,0,2,0,0"))
                              (rule "times_zero_1" (formula "29") (term "0,0,2,0,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "2,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0") (ifseqformula "22"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0"))
                              (rule "polySimp_rightDist" (formula "29") (term "0"))
                              (rule "polySimp_homoEq" (formula "29"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "0,0"))
                              (rule "add_zero_left" (formula "29") (term "0"))
                              (rule "polySimp_invertEq" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "times_zero_2" (formula "29") (term "1"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "polyDiv_zero" (formula "29") (term "0,0"))
                              (rule "div_literals" (formula "29") (term "1,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0") (ifseqformula "22"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "times_zero_2" (formula "29") (term "0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "polyDiv_pullOut" (formula "28") (term "1") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,2,1"))
                              (rule "eqSymm" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,2,0"))
                              (rule "add_literals" (formula "28") (term "1,0,0,2,0"))
                              (rule "times_zero_1" (formula "28") (term "0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "2,0"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "22"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "eqSymm" (formula "28"))
                              (rule "polyDiv_zero" (formula "28") (term "1,1"))
                              (rule "div_literals" (formula "28") (term "1,1,1"))
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                              (rule "mul_literals" (formula "28") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "22"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "times_zero_2" (formula "28") (term "1,0"))
                              (rule "add_zero_right" (formula "28") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "28"))
                              (rule "mul_literals" (formula "28") (term "1"))
                              (rule "polySimp_critPair" (formula "9") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "9"))
                              (rule "jdiv_axiom" (formula "30") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,0,2,1"))
                              (rule "eqSymm" (formula "30"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,0,2,0"))
                              (rule "inEqSimp_invertInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                              (rule "times_zero_2" (formula "30") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_subsumption0" (formula "30") (term "0,0") (ifseqformula "17"))
                              (rule "leq_literals" (formula "30") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "30"))
                              (rule "polyDiv_pullOut" (formula "31") (term "0,0,0,0") (inst "polyDivCoeff=quotient_207"))
                              (rule "polySimp_mulComm1" (formula "31") (term "1,0,0,2,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,2,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "2,0,0,0,0"))
                              (rule "applyEq" (formula "31") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,2,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "31") (term "0,1,2,0,0,0,0"))
                              (rule "add_literals" (formula "31") (term "1,0,1,2,0,0,0,0"))
                              (rule "times_zero_1" (formula "31") (term "0,1,2,0,0,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "31") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                              (rule "polySimp_homoEq" (formula "31") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                              (rule "applyEq" (formula "31") (term "0,1,0,0,0,0") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "31") (term "0,0,0,0"))
                              (rule "add_literals" (formula "31") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "31") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "31") (term "0,0,0"))
                              (rule "polySimp_invertEq" (formula "31") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                              (rule "times_zero_2" (formula "31") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                              (rule "polyDiv_zero" (formula "31") (term "0,0,0,0"))
                              (rule "div_literals" (formula "31") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "31") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "31") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "times_zero_2" (formula "31") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "notLeft" (formula "31"))
                              (rule "polyDiv_pullOut" (formula "30") (term "1") (inst "polyDivCoeff=quotient_207"))
                              (rule "eqSymm" (formula "30"))
                              (rule "polySimp_mulComm1" (formula "30") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "2,0"))
                              (rule "applyEq" (formula "30") (term "0,1,0,1,2,0") (ifseqformula "7"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor0" (formula "30") (term "0,1,2,0"))
                              (rule "add_literals" (formula "30") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "30") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "eqSymm" (formula "30"))
                              (rule "polyDiv_zero" (formula "30") (term "1,1"))
                              (rule "div_literals" (formula "30") (term "1,1,1"))
                              (rule "polySimp_homoEq" (formula "30"))
                              (rule "polySimp_addComm1" (formula "30") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "polySimp_homoEq" (formula "30"))
                              (rule "times_zero_2" (formula "30") (term "1,0"))
                              (rule "add_zero_right" (formula "30") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "30"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1"))
                              (rule "jdiv_axiom" (formula "32") (term "0,0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "20"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "1"))
                              (rule "polyDiv_pullOut" (formula "33") (term "0,0") (inst "polyDivCoeff=quotient_206"))
                              (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,2,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,2,0,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "2,0,0"))
                              (rule "applyEqRigid" (formula "33") (term "0,1,0,1,2,0,0") (ifseqformula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,2,0,0"))
                              (rule "add_literals" (formula "33") (term "1,0,1,2,0,0"))
                              (rule "times_zero_1" (formula "33") (term "0,1,2,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0"))
                              (rule "polySimp_rightDist" (formula "33") (term "0"))
                              (rule "polySimp_homoEq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "applyEqRigid" (formula "33") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0"))
                              (rule "add_literals" (formula "33") (term "1,0,0"))
                              (rule "times_zero_1" (formula "33") (term "0,0"))
                              (rule "add_zero_left" (formula "33") (term "0"))
                              (rule "polySimp_invertEq" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                              (rule "times_zero_2" (formula "33") (term "1"))
                              (rule "polySimp_elimOne" (formula "33") (term "0"))
                              (rule "polyDiv_zero" (formula "33") (term "0,0"))
                              (rule "div_literals" (formula "33") (term "1,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,0") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "times_zero_2" (formula "33") (term "0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "closeTrue" (formula "33"))
                           )
                           (branch "result_4 >= 0 FALSE"
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm1" (formula "29") (term "0"))
                              (rule "polySimp_homoEq" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "29"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0"))
                              (rule "qeq_literals" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "false_right" (formula "27"))
                              (rule "polySimp_critPair" (formula "22") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "22") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                              (rule "polySimp_mulComm1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_zero_right" (formula "22") (term "0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "22"))
                              (rule "polyDiv_pullOut" (formula "19") (term "0") (inst "polyDivCoeff=quotient_200"))
                              (rule "polySimp_mulComm1" (formula "19") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "2,0"))
                              (rule "applyEq" (formula "19") (term "0,1,0,1,2,0") (ifseqformula "23"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,2,0"))
                              (rule "add_literals" (formula "19") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "19") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq3" (formula "19") (term "0,0") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "19") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "polySimp_homoEq" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "polySimp_invertEq" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "times_zero_2" (formula "19") (term "1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "polyDiv_zero" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "div_literals" (formula "19") (term "0,1"))
                              (rule "inEqSimp_contradEq3" (formula "19") (term "0,0") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "19") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "div_axiom" (formula "5") (term "0,1") (inst "quotient=quotient_203"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,0"))
                              (rule "leq_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0"))
                              (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "7") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "7") (term "0,2") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "2"))
                              (rule "polySimp_addComm1" (formula "7") (term "0,2"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,2"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "7") (term "0,0,2"))
                              (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "1,0"))
                              (rule "times_zero_1" (formula "6") (term "0"))
                              (rule "qeq_literals" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                              (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "2"))
                              (rule "mul_literals" (formula "6") (term "1,2"))
                              (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "2"))
                              (rule "leq_literals" (formula "6") (term "0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "div_axiom" (formula "3") (term "0,1") (inst "quotient=quotient_204"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "3"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0"))
                              (rule "applyEq" (formula "5") (term "0,2") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "2"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,2"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,0,2"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,2"))
                              (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,2"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,2"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,2"))
                              (rule "add_zero_right" (formula "5") (term "0,0,2"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,1"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "4") (term "0,0,1"))
                              (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "2"))
                              (rule "mul_literals" (formula "4") (term "1,2"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "2"))
                              (rule "leq_literals" (formula "4") (term "0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_205"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                              (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0"))
                              (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "32"))
                              (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "2"))
                              (rule "polySimp_mulAssoc" (formula "32") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0"))
                              (rule "qeq_literals" (formula "32") (term "0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "false_right" (formula "32"))
                              (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                              (rule "leq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "polyDiv_pullOut" (formula "28") (term "0") (inst "polyDivCoeff=quotient_202"))
                              (rule "polySimp_mulComm1" (formula "28") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "2,0"))
                              (rule "applyEq" (formula "28") (term "0,1,0,1,2,0") (ifseqformula "30"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,2,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1,2,0"))
                              (rule "add_literals" (formula "28") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "28") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq3" (formula "28") (term "0,0") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "1,0,0"))
                              (rule "times_zero_1" (formula "28") (term "0,0"))
                              (rule "add_zero_left" (formula "28") (term "0"))
                              (rule "polySimp_invertEq" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "times_zero_2" (formula "28") (term "1"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "polyDiv_zero" (formula "28") (term "0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "div_literals" (formula "28") (term "0,1"))
                              (rule "inEqSimp_contradEq3" (formula "28") (term "0,0") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "28") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "allLeft" (formula "30") (inst "t=x_44"))
                              (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "5"))
                              (rule "polySimp_mulComm1" (formula "30") (term "0,1"))
                              (rule "polySimp_homoEq" (formula "30") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "30") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "30") (term "1") (ifseqformula "2"))
                              (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "30") (term "0,0,1"))
                              (rule "qeq_literals" (formula "30") (term "0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_203"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "2,0"))
                              (rule "applyEq" (formula "9") (term "0,1,0,1,2,0") (ifseqformula "11"))
                              (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,2,0"))
                              (rule "add_literals" (formula "9") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "9") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "polySimp_invertEq" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "times_zero_2" (formula "9") (term "1"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "polyDiv_zero" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "div_literals" (formula "9") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "9") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "polySimp_critPair" (formula "26") (ifseqformula "25"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0"))
                              (rule "add_zero_right" (formula "26") (term "0"))
                              (rule "polySimp_addComm0" (formula "26") (term "0"))
                              (rule "apply_eq_monomials" (formula "26") (term "1,0") (ifseqformula "29"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "1,0,1,0"))
                              (rule "polySimp_mulComm1" (formula "26") (term "0,1,0,1,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,0"))
                              (rule "add_literals" (formula "26") (term "1,1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,1,0"))
                              (rule "add_zero_right" (formula "26") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "26") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=quotient_204"))
                              (rule "polySimp_mulComm1" (formula "6") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "2,0"))
                              (rule "applyEq" (formula "6") (term "0,1,0,1,2,0") (ifseqformula "8"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,2,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,1,2,0"))
                              (rule "polySimp_pullOutFactor2" (formula "6") (term "0,1,2,0"))
                              (rule "add_literals" (formula "6") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "6") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_homoEq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "polySimp_invertEq" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "times_zero_2" (formula "6") (term "1"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "polyDiv_zero" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "div_literals" (formula "6") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "6") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "polySimp_critPair" (formula "9") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                              (rule "polySimp_mulComm1" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "1,1,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "9"))
                              (rule "jdiv_axiom" (formula "29") (term "0,0,0,1"))
                              (rule "eqSymm" (formula "29"))
                              (rule "inEqSimp_subsumption1" (formula "29") (term "0,0") (ifseqformula "19"))
                              (rule "leq_literals" (formula "29") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "eqSymm" (formula "29"))
                              (rule "applyEq" (formula "30") (term "0,0,0,1") (ifseqformula "29"))
                              (rule "polyDiv_pullOut" (formula "30") (term "0,0,0,1") (inst "polyDivCoeff=quotient_203"))
                              (rule "polySimp_mulComm1" (formula "30") (term "1,0,0,2,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,2,0,0,0,1"))
                              (rule "polySimp_addComm0" (formula "30") (term "2,0,0,0,1"))
                              (rule "applyEqRigid" (formula "30") (term "0,1,0,1,2,0,0,0,1") (ifseqformula "10"))
                              (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1,2,0,0,0,1"))
                              (rule "add_literals" (formula "30") (term "1,0,1,2,0,0,0,1"))
                              (rule "times_zero_1" (formula "30") (term "0,1,2,0,0,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,0,0,1") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,1"))
                              (rule "leq_literals" (formula "30") (term "0,0,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "0,0,1"))
                              (rule "polySimp_homoEq" (formula "30") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "30") (term "0,1,0,0,0,1") (ifseqformula "10"))
                              (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0,1"))
                              (rule "add_literals" (formula "30") (term "1,0,0,0,1"))
                              (rule "times_zero_1" (formula "30") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "30") (term "0,0,1"))
                              (rule "polySimp_invertEq" (formula "30") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1"))
                              (rule "times_zero_2" (formula "30") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "30") (term "0,0,1"))
                              (rule "polyDiv_zero" (formula "30") (term "0,0,0,1"))
                              (rule "div_literals" (formula "30") (term "1,0,0,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,0,0,1") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,1"))
                              (rule "leq_literals" (formula "30") (term "0,0,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "times_zero_2" (formula "30") (term "0,0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "notLeft" (formula "30"))
                              (rule "polyDiv_pullOut" (formula "29") (term "1") (inst "polyDivCoeff=quotient_203"))
                              (rule "eqSymm" (formula "29"))
                              (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "2,0"))
                              (rule "applyEqRigid" (formula "29") (term "0,1,0,1,2,0") (ifseqformula "10"))
                              (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,2,0"))
                              (rule "add_literals" (formula "29") (term "1,0,1,2,0"))
                              (rule "times_zero_1" (formula "29") (term "0,1,2,0"))
                              (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "eqSymm" (formula "29"))
                              (rule "polyDiv_zero" (formula "29") (term "1,1"))
                              (rule "div_literals" (formula "29") (term "1,1,1"))
                              (rule "polySimp_homoEq" (formula "29"))
                              (rule "polySimp_addComm1" (formula "29") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "polySimp_homoEq" (formula "29"))
                              (rule "times_zero_2" (formula "29") (term "1,0"))
                              (rule "add_zero_right" (formula "29") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1"))
                              (rule "polySimp_elimOne" (formula "29") (term "1"))
                              (rule "jdiv_axiom" (formula "31") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                              (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "times_zero_2" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "18"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                              (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=quotient_204"))
                              (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,2,0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,2,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "2,0,0"))
                              (rule "applyEq" (formula "32") (term "0,1,0,1,2,0,0") (ifseqformula "8"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,2,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,2,0,0"))
                              (rule "add_literals" (formula "32") (term "1,0,1,2,0,0"))
                              (rule "times_zero_1" (formula "32") (term "0,1,2,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0"))
                              (rule "polySimp_rightDist" (formula "32") (term "0"))
                              (rule "polySimp_homoEq" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                              (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "8"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "0,0"))
                              (rule "add_zero_left" (formula "32") (term "0"))
                              (rule "polySimp_invertEq" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "times_zero_2" (formula "32") (term "1"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "polyDiv_zero" (formula "32") (term "0,0"))
                              (rule "div_literals" (formula "32") (term "1,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,0") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "times_zero_2" (formula "32") (term "0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "closeTrue" (formula "32"))
                           )
                        )
                     )
                  )
               )
               (branch "Exceptional Post (gcdHelp)"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
                  (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "10"))
                  (rule "close" (formula "13") (ifseqformula "12"))
               )
               (branch "Pre (gcdHelp)"
                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
                  (rule "closeTrue" (formula "8"))
               )
            )
         )
         (branch "Join is valid (1)"
            (builtin "One Step Simplification" (formula "1"))
            (rule "impRight" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "4"))
            (rule "eqSymm" (formula "6") (term "1,0"))
            (rule "polySimp_homoEq" (formula "6") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "6") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_geqRight" (formula "6"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Join is valid (2)"
            (builtin "One Step Simplification" (formula "1"))
            (rule "impRight" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "close" (formula "3") (ifseqformula "1"))
         )
      )
      (branch "if x_41 false"
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "5"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (builtin "CloseAfterJoin" (formula "6") (newnames "abstrPred_or_AND_abstrPred_geq_3") (joinNode "37616"))
      )
   )
   (branch "Join is valid (1)"
      (rule "simplifyUpdate2" (formula "1") (term "1"))
      (rule "impRight" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "2"))
      (rule "eqSymm" (formula "4") (term "1,0,1"))
      (rule "eqSymm" (formula "4") (term "0,0,1"))
      (rule "polySimp_elimNeg" (formula "4") (term "0,1,0,1"))
      (rule "polySimp_homoEq" (formula "4") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,1"))
      (rule "applyOnRigidFormula" (formula "4"))
      (rule "applyOnRigidFormula" (formula "4") (term "0"))
      (rule "applyOnRigidFormula" (formula "4") (term "1"))
      (rule "applyOnPV" (formula "4") (term "0,1"))
      (rule "simplifyUpdate1" (formula "4") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "4") (term "0,0"))
      (rule "simplifyUpdate1" (formula "4") (term "0,0,0"))
      (rule "applyOnPV" (formula "4") (term "1,0,0"))
      (rule "polySimp_homoEq" (formula "4") (term "0,0"))
      (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0"))
      (rule "add_literals" (formula "4") (term "1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "4") (term "1,0"))
      (rule "simplifyUpdate1" (formula "4") (term "1,1,0"))
      (rule "applyOnRigidTerm" (formula "4") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "4") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor2" (formula "4") (term "0,1,0"))
      (rule "add_literals" (formula "4") (term "1,0,1,0"))
      (rule "times_zero_1" (formula "4") (term "0,1,0"))
      (rule "eqClose" (formula "4") (term "1,0"))
      (rule "concrete_or_3" (formula "4") (term "0"))
      (rule "concrete_and_1" (formula "4"))
      (rule "inEqSimp_geqRight" (formula "4"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
      (rule "qeq_literals" (formula "2") (term "0"))
      (rule "concrete_and_2" (formula "2"))
      (rule "closeFalse" (formula "2"))
   )
   (branch "Join is valid (2)"
      (rule "simplifyUpdate2" (formula "1") (term "1"))
      (rule "impRight" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "2"))
      (rule "eqSymm" (formula "4") (term "1,0,1"))
      (rule "eqSymm" (formula "4") (term "0,0,1"))
      (rule "polySimp_elimNeg" (formula "4") (term "0,1,0,1"))
      (rule "polySimp_homoEq" (formula "4") (term "1,0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1"))
      (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,1"))
      (rule "applyOnRigidFormula" (formula "4"))
      (rule "applyOnRigidFormula" (formula "4") (term "1"))
      (rule "applyOnPV" (formula "4") (term "0,1"))
      (rule "simplifyUpdate1" (formula "4") (term "1,1"))
      (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
      (rule "concrete_and_3" (formula "4"))
      (rule "orRight" (formula "4"))
      (rule "applyOnRigidFormula" (formula "4"))
      (rule "simplifyUpdate1" (formula "4") (term "0"))
      (rule "applyOnPV" (formula "4") (term "1"))
      (rule "eqClose" (formula "4"))
      (rule "closeTrue" (formula "4"))
   )
)
(branch "if x false"
   (rule "false_to_not_true" (formula "1") (term "1"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "simplifyUpdate2" (formula "4"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "3"))
   (rule "applyOnPV" (formula "3") (term "0"))
   (rule "simplifyUpdate1" (formula "3") (term "1"))
   (rule "ifthenelse_concrete3" (formula "3"))
   (rule "boolean_not_equal_2" (formula "3") (term "1"))
   (rule "concrete_or_4" (formula "3"))
   (rule "inEqSimp_leqRight" (formula "3"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (builtin "CloseAfterJoin" (formula "4") (newnames "abstrPred_or_AND_abstrPred_geq_0") (joinNode "74"))
)
)

}
