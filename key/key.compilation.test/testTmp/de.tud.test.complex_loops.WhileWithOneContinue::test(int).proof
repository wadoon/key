\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Tue Dec 06 11:43:51 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:allow , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=Symbolic Execution Strategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../resources/testcase/functional/complex_loops/one_break_or_continue";

\proofObligation "#Proof Obligation Settings
#Tue Dec 06 11:43:51 CET 2016
name=Symbolic Execution of de.tud.test.complex_loops.WhileWithOneContinue\\:\\:test
addSymbolicExecutionLabel=true
addUninterpretedPredicate=true
class=de.uka.ilkd.key.symbolic_execution.po.ProgramMethodPO
method=de.tud.test.complex_loops.WhileWithOneContinue\\#test(int)
";

\proof {
(keyLog "0" (keyUser "dscheurer" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "891")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,SETAccumulate"))
(rule "impRight" (formula "1"))
(rule "assignment" (formula "2"))
(rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_test,savedHeapBefore_test,iBefore_test"))
(builtin "One Step Simplification" (formula "2"))
(rule "loopComplexToSimple" (formula "2") (term "1") (newnames "b"))
(rule "greater_than_comparison_simple" (formula "2") (term "1"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_gtToGeq" (formula "2") (term "0,0,1,0"))
(rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "2") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,0"))
(rule "mul_literals" (formula "2") (term "1,0,0,1,0"))
(builtin "Loop Invariant" (formula "2") (newnames "variant,b,heapBefore_LOOP,bBefore_LOOP,iBefore_LOOP,b_0,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "2"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "3"))
   (rule "impRight" (formula "3"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "variableDeclarationAssign" (formula "3") (term "1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "b_2"))
   (rule "assignment" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "methodCallEmpty" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "emptyModality" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "notRight" (formula "3"))
   (rule "applyEq" (formula "4") (term "0,0,0,0,1,0") (ifseqformula "1"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "cont"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "thrownExc"))
   (rule "ifSplit" (formula "4"))
   (branch "if b true"
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifUnfold" (formula "4") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x"))
      (rule "equality_comparison_simple" (formula "4") (term "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "ifSplit" (formula "4"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "applyEq" (formula "5") (term "0,1,0,0,1,0,0,0") (ifseqformula "1"))
         (rule "postdecrement" (formula "5") (term "1"))
         (rule "compound_subtraction_1" (formula "5") (term "1") (inst "#v=x"))
         (rule "variableDeclarationAssign" (formula "5") (term "1"))
         (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_1"))
         (rule "widening_identity_cast_5" (formula "5") (term "1"))
         (rule "assignment" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "assignmentSubtractionInt" (formula "5") (term "1"))
         (rule "translateJavaSubInt" (formula "5") (term "0,0,1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "sub_literals" (formula "5") (term "0,1,0"))
         (rule "greater_than_comparison_simple" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "greater_literals" (formula "5") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "assignment" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "blockBreakNoLabel" (formula "5") (term "1"))
         (rule "blockBreakNoLabel" (formula "5") (term "1"))
         (rule "blockBreakLabel" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "blockEmpty" (formula "5") (term "1"))
         (rule "tryEmpty" (formula "5") (term "1"))
         (rule "methodCallEmpty" (formula "5") (term "1"))
         (rule "emptyModality" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "precOfInt" (formula "5") (term "0"))
         (rule "leq_literals" (formula "5") (term "0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "less_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "false_right" (formula "5"))
         (opengoal " ")
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "notLeft" (formula "1"))
         (rule "postdecrement" (formula "5") (term "1"))
         (rule "compound_subtraction_1" (formula "5") (term "1") (inst "#v=x"))
         (rule "variableDeclarationAssign" (formula "5") (term "1"))
         (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
         (rule "widening_identity_cast_5" (formula "5") (term "1"))
         (rule "assignment" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "assignmentSubtractionInt" (formula "5") (term "1"))
         (rule "translateJavaSubInt" (formula "5") (term "0,0,1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "polySimp_elimSub" (formula "5") (term "0,1,0"))
         (rule "mul_literals" (formula "5") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
         (rule "blockEmpty" (formula "5") (term "1"))
         (rule "greater_than_comparison_simple" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "unusedLabel" (formula "5") (term "1"))
         (rule "blockEmpty" (formula "5") (term "1"))
         (rule "tryEmpty" (formula "5") (term "1"))
         (rule "methodCallEmpty" (formula "5") (term "1"))
         (rule "emptyModality" (formula "5") (term "1"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "precOfInt" (formula "5") (term "0"))
         (rule "less_literals" (formula "5") (term "1,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "false_right" (formula "5"))
         (opengoal " ")
      )
   )
   (branch "if b false"
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "3"))
   (rule "variableDeclarationAssign" (formula "3") (term "1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "b_1"))
   (rule "assignment" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "methodCallEmpty" (formula "3") (term "1"))
   (rule "emptyModality" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "impRight" (formula "3"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "4") (term "1"))
   (rule "methodCallReturn" (formula "4") (term "1"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "methodCallEmpty" (formula "4") (term "1"))
   (rule "tryEmpty" (formula "4") (term "1"))
   (rule "emptyModality" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (opengoal " ")
)
)

}
