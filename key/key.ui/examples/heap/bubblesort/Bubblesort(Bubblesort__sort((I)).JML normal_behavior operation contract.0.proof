\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Oct 13 14:10:52 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../../../../../../key/examples/heap/bubblesort/src";

\proofObligation "#Proof Obligation Settings
#Wed Oct 13 14:10:52 CEST 2021
contract=Bubblesort[Bubblesort\\:\\:sort([I)].JML normal_behavior operation contract.0
name=Bubblesort[Bubblesort\\:\\:sort([I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "23239e9fef59a915e3708e167809bb10990a0c0c"))

(autoModeTime "50483")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "a,exc_25,heapAtPre_0,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "6") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "6") (term "0,2,1,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "6") (term "1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0,0,0,0,1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "array2seqDef" (formula "6") (term "1,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "6") (term "0,1,0,0,0,1") (inst "u=u"))
(rule "commute_and" (formula "4") (term "0,0"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort,_aBefore_sort"))
 (builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "sorted"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "loopScopeInvDia" (formula "6") (term "1") (newnames "sorted_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
(branch "Invariant Initially Valid"
   (rule "andRight" (formula "6"))
   (branch
      (rule "andRight" (formula "6"))
      (branch
          (builtin "One Step Simplification" (formula "6"))
         (rule "closeTrue" (formula "6"))
      )
      (branch
          (builtin "One Step Simplification" (formula "6"))
         (rule "allRight" (formula "6") (inst "sk=i_0"))
         (rule "impRight" (formula "6"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "8"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
         (rule "mul_literals" (formula "7") (term "1,1,0,0"))
         (rule "commute_or" (formula "7") (term "0,0"))
         (rule "allLeft" (formula "7") (inst "t=i_0"))
         (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
         (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "1"))
         (rule "qeq_literals" (formula "7") (term "0,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "7") (term "0,0,1"))
         (rule "leq_literals" (formula "7") (term "0,1"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "7"))
         (rule "qeq_literals" (formula "2") (term "0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
   )
   (branch
      (rule "impRight" (formula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Invariant Preserved and Used"
    (builtin "One Step Simplification" (formula "7"))
   (rule "translateJavaSubInt" (formula "7") (term "1,1,0,0,1,1,0"))
   (rule "translateJavaAddInt" (formula "7") (term "0,2,1,1,0,1,1,0,0,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "7") (term "1,1,0,0,1,1,0,0,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "7") (term "0,2,1,1,0,1,1,0"))
   (rule "impRight" (formula "7"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "10") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "10") (term "1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "3") (term "1,1,1,0,0,1"))
   (rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "3") (term "0,2,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
   (rule "array2seqDef" (formula "10") (term "0,0,0,0,0,1,1,0,1") (inst "u=u"))
   (rule "array2seqDef" (formula "10") (term "1,0,1,1,1,0,1") (inst "u=u"))
   (rule "array2seqDef" (formula "10") (term "1,0,1,1,0") (inst "u=u"))
   (rule "array2seqDef" (formula "10") (term "1,0,0,0,0,1,1,0,1") (inst "u=u"))
   (rule "array2seqDef" (formula "1") (term "0") (inst "u=u"))
   (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "5") (ifseqformula "9"))
   (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
   (rule "commute_and" (formula "2") (term "0,0"))
   (rule "commute_and" (formula "3") (term "0,0,1"))
   (rule "ifElseUnfold" (formula "10") (term "1") (inst "#boolv=x_2"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_2"))
   (rule "compound_assignment_1_new" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "ifElseSplit" (formula "10"))
   (branch "if x_2 true"
       (builtin "One Step Simplification" (formula "11"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "11") (term "0,0,0,1,1,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "variableDeclarationGhostAssign" (formula "10") (term "1"))
      (rule "variableDeclarationGhost" (formula "10") (term "1") (newnames "last"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "variableDeclarationGhost" (formula "10") (term "1") (newnames "diff"))
      (rule "array2seqDef" (formula "10") (term "0,1,0") (inst "u=u"))
      (rule "elim_double_block_4" (formula "10") (term "1"))
      (rule "for_to_while" (formula "10") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "j"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "elim_double_block_3" (formula "10") (term "1"))
      (rule "loopScopeInvDia" (formula "10") (term "1") (newnames "j_0,sorted_1,diff_0,o,f") (inst "#x=x_3") (inst "#variant=x_2") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_1") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_1") (inst "anon_heap_LOOP=anon_heap_LOOP_1"))
      (branch "Invariant Initially Valid"
         (rule "andRight" (formula "10"))
         (branch
            (rule "andRight" (formula "10"))
            (branch
               (rule "andRight" (formula "10"))
               (branch
                  (rule "andRight" (formula "10"))
                  (branch
                     (rule "andRight" (formula "10"))
                     (branch
                        (rule "orRight" (formula "10"))
                        (rule "andRight" (formula "10"))
                        (branch
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "closeTrue" (formula "11"))
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "closeTrue" (formula "11"))
                        )
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "allRight" (formula "10") (inst "sk=i_0"))
                        (rule "impRight" (formula "10"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "12"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_imp2or" (formula "5") (term "0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "5") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                        (rule "commute_or" (formula "10") (term "0,0"))
                        (rule "commute_or" (formula "5") (term "0,0"))
                        (rule "allLeft" (formula "10") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "10") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0"))
                        (rule "leq_literals" (formula "10") (term "0,0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "allLeft" (formula "5") (inst "t=i_0"))
                        (rule "replaceKnownSelect_taclet10000001_0" (formula "5") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10000001_1" (formula "5") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "5") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "5") (term "0,1"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "5") (term "0,0,1"))
                        (rule "leq_literals" (formula "5") (term "0,1"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                  )
                  (branch
                     (rule "impRight" (formula "10"))
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "1"))
                     (rule "translateJavaAddInt" (formula "10") (term "0,2,1,1,0"))
                     (rule "allRight" (formula "10") (inst "sk=i_0"))
                     (rule "impRight" (formula "10"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,2,1"))
                     (rule "inEqSimp_leqRight" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch
                  (rule "impRight" (formula "10"))
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "1"))
                  (rule "eqSymm" (formula "10"))
                  (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                  (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "closeTrue" (formula "10"))
               )
            )
            (branch
               (rule "impRight" (formula "10"))
               (rule "andRight" (formula "11"))
               (branch
                  (rule "andRight" (formula "11"))
                  (branch
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch
                     (rule "andRight" (formula "11"))
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
            (rule "array2seqDef" (formula "10") (term "0") (inst "u=u"))
            (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "4") (ifseqformula "9"))
            (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
            (rule "close" (formula "10") (ifseqformula "1"))
         )
      )
      (branch "Invariant Preserved and Used"
          (builtin "One Step Simplification" (formula "11"))
         (rule "translateJavaSubInt" (formula "11") (term "0,1,1,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0,1,1,0,0,0,0"))
         (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0,1,1,0,0,0,0,0,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "11") (term "0,1,1,0,1"))
         (rule "impRight" (formula "11"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "17") (term "1,0,1,1,1,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "17") (term "1,0,0,1,0,1,1,0,1"))
         (rule "eqSymm" (formula "5") (term "1,0,1,1"))
         (rule "eqSymm" (formula "4") (term "1"))
         (rule "polySimp_elimSub" (formula "17") (term "0,1,1,0"))
         (rule "polySimp_elimSub" (formula "17") (term "0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "17") (term "0,2,1,1,0,1,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "3") (term "0,2,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "17") (term "0,1,1,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,1,1,1,0,1"))
         (rule "castedGetAny" (formula "17") (term "1,0,0,1,1,0,0,0,1,1,0,1"))
         (rule "getOfSeqDef" (formula "5") (term "0,1,0,0,1"))
         (rule "castDel" (formula "5") (term "2,0,1,0,0,1"))
         (rule "castDel" (formula "5") (term "1,0,1,0,0,1"))
         (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,1,0,0,1"))
         (rule "times_zero_2" (formula "5") (term "1,1,1,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "5") (term "1,1,0,0,1,0,0,1"))
         (rule "castedGetAny" (formula "17") (term "0,1,0,1,1,1,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "17") (term "1,0,1,1,1,0,0,0,1,1,0,1"))
         (rule "getOfSeqDef" (formula "5") (term "0,0,1,0,1,1"))
         (rule "castDel" (formula "5") (term "2,0,0,1,0,1,1"))
         (rule "castDel" (formula "5") (term "1,0,0,1,0,1,1"))
         (rule "add_zero_right" (formula "5") (term "0,2,1,0,0,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,0,1,0,1,1"))
         (rule "times_zero_2" (formula "5") (term "1,1,1,0,0,0,1,0,1,1"))
         (rule "add_zero_right" (formula "5") (term "1,1,0,0,0,1,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0,1,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,1,0,1,1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
         (rule "array2seqDef" (formula "17") (term "0,1,0,0,1,1,0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "17") (term "1,1,0,0,1,1,0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "17") (term "0,1,1,0,0,0,0,1,1,0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "6") (term "0") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "11") (ifseqformula "16"))
         (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
         (rule "array2seqDef" (formula "4") (term "1,1") (inst "u=u"))
         (rule "eqSymm" (formula "4") (term "1"))
         (rule "eqSeqDef" (formula "4") (term "1") (inst "iv=iv"))
         (rule "getOfSeqDef" (formula "4") (term "1,1,0,1,1"))
         (rule "castDel" (formula "4") (term "2,1,1,0,1,1"))
         (rule "castDel" (formula "4") (term "1,1,1,0,1,1"))
         (rule "add_zero_right" (formula "4") (term "0,2,1,1,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0,1,1"))
         (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0,1,1"))
         (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0,1,1"))
         (rule "getOfSeqDef" (formula "4") (term "0,1,0,1,1"))
         (rule "castDel" (formula "4") (term "1,0,1,0,1,1"))
         (rule "castDel" (formula "4") (term "2,0,1,0,1,1"))
         (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0,1,1"))
         (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0,1,1"))
         (rule "times_zero_2" (formula "4") (term "1,1,1,0,0,1,0,1,1"))
         (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0,1,1"))
         (rule "lenOfSeqDef" (formula "4") (term "0,0,1"))
         (rule "eqSymm" (formula "4") (term "0,1"))
         (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1"))
         (rule "mul_literals" (formula "4") (term "1,1,1,0,1"))
         (rule "add_zero_right" (formula "4") (term "1,1,0,1"))
         (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0,1,1"))
         (rule "mul_literals" (formula "4") (term "1,1,1,1,0,0,1,1"))
         (rule "add_zero_right" (formula "4") (term "1,1,1,0,0,1,1"))
         (rule "lenOfSeqDef" (formula "4") (term "0,0,1"))
         (rule "polySimp_elimSub" (formula "4") (term "1,0,0,1"))
         (rule "times_zero_2" (formula "4") (term "1,1,0,0,1"))
         (rule "add_zero_right" (formula "4") (term "1,0,0,1"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0,1"))
         (rule "eqSymm" (formula "4") (term "1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0,1"))
         (rule "eqSymm" (formula "4") (term "1,0,1"))
         (rule "pullOutSelect" (formula "5") (term "0,0,0,1") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnon" (formula "5"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "applyEqReverse" (formula "6") (term "0,0,0,1") (ifseqformula "5"))
         (rule "hideAuxiliaryEq" (formula "5"))
         (rule "pullOutSelect" (formula "5") (term "1,0,1,0,0,1") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnon" (formula "5"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "applyEqReverse" (formula "6") (term "1,0,1,0,0,1") (ifseqformula "5"))
         (rule "hideAuxiliaryEq" (formula "5"))
         (rule "narrowSelectArrayType" (formula "5") (term "1,0,1,0,0,1") (ifseqformula "10") (ifseqformula "16"))
         (rule "commute_or" (formula "1"))
         (rule "commute_and" (formula "2") (term "0,0"))
         (rule "commute_and" (formula "5") (term "1,0,1"))
         (rule "commute_and" (formula "3") (term "0,0,1"))
         (rule "cnf_rightDist" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "commute_or" (formula "1"))
         (rule "commute_and" (formula "6") (term "0,0,1,1"))
         (rule "commute_and" (formula "5") (term "0,0,1"))
         (rule "commute_and" (formula "6") (term "0,0,1,0,0,1"))
         (rule "commute_and" (formula "6") (term "0,0,0,1,0,1,1"))
         (rule "commute_and" (formula "5") (term "0,1,1,0,1"))
         (rule "eqSymm" (formula "5") (term "1,0,1"))
         (rule "shift_paren_and" (formula "6") (term "0,1"))
         (rule "commute_and" (formula "6") (term "0,0,1"))
         (rule "commute_and" (formula "5") (term "0,1,1,0,1"))
         (rule "eqSymm" (formula "5") (term "1,0,1"))
         (rule "arrayLengthIsAShort" (formula "15") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "arrayLengthNotNegative" (formula "15") (term "1,0,0,0"))
         (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x_4"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_4"))
         (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_5"))
         (rule "assignment" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_6"))
         (rule "compound_subtraction_1" (formula "19") (term "1") (inst "#v=x_7"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_7"))
         (rule "assignment_read_length" (formula "19"))
         (branch "Normal Execution (_a != null)"
             (builtin "One Step Simplification" (formula "19"))
            (rule "assignmentSubtractionInt" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "translateJavaSubInt" (formula "19") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "19") (term "0,1,0"))
            (rule "mul_literals" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "19") (term "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "ifElseSplit" (formula "19"))
            (branch "if x_4 true"
                (builtin "One Step Simplification" (formula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_4"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_8"))
               (rule "compound_greater_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_9"))
               (rule "assignment_array2" (formula "20"))
               (branch "Normal Execution (_a != null)"
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_10"))
                  (rule "eval_order_array_access5" (formula "20") (term "1") (inst "#v1=x_11") (inst "#ar1=x_arr"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr"))
                  (rule "assignment" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_11"))
                  (rule "assignmentAdditionInt" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                  (rule "assignment_array2" (formula "20"))
                  (branch "Normal Execution (x_arr != null)"
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "greater_than_comparison_simple" (formula "20") (term "1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "ifSplit" (formula "20"))
                     (branch "if x_8 true"
                         (builtin "One Step Simplification" (formula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "21") (term "1"))
                        (rule "variableDeclaration" (formula "21") (term "1") (newnames "t"))
                        (rule "assignment_array2" (formula "21"))
                        (branch "Normal Execution (_a != null)"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replaceKnownSelect_taclet000101_4" (formula "21") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "21") (term "0,1,0"))
                           (rule "eval_order_array_access3" (formula "21") (term "1") (inst "#v1=x_5") (inst "#v2=x_4") (inst "#v0=x_arr"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_1"))
                           (rule "assignment" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_12"))
                           (rule "assignment" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_13"))
                           (rule "eval_order_array_access5" (formula "21") (term "1") (inst "#v1=x_14") (inst "#ar1=x_arr_2"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_2"))
                           (rule "assignment" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_14"))
                           (rule "assignmentAdditionInt" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                           (rule "assignment_array2" (formula "21"))
                           (branch "Normal Execution (x_arr_2 != null)"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "replaceKnownSelect_taclet0000101_6" (formula "21") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "21") (term "0,1,0"))
                              (rule "assignment_to_primitive_array_component" (formula "21"))
                              (branch "Normal Execution (x_arr_1 != null)"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "eval_order_array_access2" (formula "21") (term "1") (inst "#v0=x_4") (inst "#ar1=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_3"))
                                 (rule "assignment" (formula "21") (term "1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_15"))
                                 (rule "assignmentAdditionInt" (formula "21") (term "1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "21"))
                                 (branch "Normal Execution (x_arr_3 != null)"
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "ifSplit" (formula "21"))
                                    (branch "if sorted true"
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "assignment" (formula "21") (term "1"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "emptyStatement" (formula "21") (term "1"))
                                       (rule "blockEmpty" (formula "21") (term "1"))
                                       (rule "assignment" (formula "21") (term "1"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "blockEmpty" (formula "21") (term "1"))
                                       (rule "postincrement" (formula "21") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=x_4"))
                                       (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                       (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_16"))
                                       (rule "remove_parentheses_right" (formula "21") (term "1"))
                                       (rule "assignmentAdditionInt" (formula "21") (term "1"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "21") (term "1"))
                                       (rule "assignment" (formula "21") (term "1"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "blockEmpty" (formula "21") (term "1"))
                                       (rule "lsContinue" (formula "21") (term "1"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "andRight" (formula "21"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "21"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "21"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "21"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "21"))
                                                   (branch "Case 1"
                                                      (rule "orRight" (formula "21"))
                                                      (rule "andRight" (formula "21"))
                                                      (branch "Case 1"
                                                         (rule "inEqSimp_geqRight" (formula "21"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "22"))
                                                         (rule "mul_literals" (formula "22") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0"))
                                                         (rule "qeq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "false_right" (formula "22"))
                                                         (rule "inEqSimp_contradEq3" (formula "5") (term "1") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                         (rule "qeq_literals" (formula "5") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "inEqSimp_contradEq3" (formula "6") (term "1") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "6") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                         (rule "qeq_literals" (formula "6") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "inEqSimp_ltRight" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "22"))
                                                         (rule "mul_literals" (formula "22") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "21") (inst "sk=i_0"))
                                                      (rule "impRight" (formula "21"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_geqRight" (formula "23"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_4"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_or_subsumption6" (formula "9"))
                                                      (rule "greater_literals" (formula "9") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "nnf_imp2or" (formula "11") (term "0"))
                                                      (rule "nnf_imp2or" (formula "16") (term "0"))
                                                      (rule "nnf_imp2or" (formula "10") (term "0"))
                                                      (rule "nnf_imp2or" (formula "22") (term "0"))
                                                      (rule "nnf_imp2or" (formula "12") (term "0"))
                                                      (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "11") (term "0,0"))
                                                      (rule "commute_or" (formula "16") (term "0,0"))
                                                      (rule "commute_or" (formula "10") (term "0,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0"))
                                                      (rule "commute_or" (formula "22") (term "0,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0"))
                                                      (rule "commute_and" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "commute_and" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "ifthenelse_to_or_left" (formula "12") (term "0,0,0"))
                                                      (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "12") (term "0,1,1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,1,0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,0,0,1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,1,1,0,0,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0"))
                                                      (rule "commute_or" (formula "12") (term "1,1,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0,1,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0,1,1,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "12") (term "1,1,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0,1,1,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,1,0"))
                                                      (rule "qeq_literals" (formula "12") (term "1,0,0,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "shift_paren_or" (formula "12") (term "1,1,0"))
                                                      (rule "commute_or" (formula "12") (term "0,1,1,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "12") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12") (term "1,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "add_literals" (formula "12") (term "1,0,1,1,1,0"))
                                                      (rule "times_zero_1" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "leq_literals" (formula "12") (term "1,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "commute_or_2" (formula "12") (term "0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "j_0 = i_0 TRUE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "7") (term "1,0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "1"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "ifthenelse_to_or_left" (formula "9") (term "0,0,0,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,1,0,0,0,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                                         (rule "commute_or" (formula "9") (term "1,1,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "commute_or" (formula "10") (term "0"))
                                                         (rule "shift_paren_or" (formula "9") (term "0,0"))
                                                         (rule "commute_or" (formula "10") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "commute_or_2" (formula "10") (term "0"))
                                                         (rule "shift_paren_or" (formula "11") (term "0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0"))
                                                         (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "11") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "qeq_literals" (formula "10") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "cut_direct" (formula "9") (term "0,1,1,0"))
                                                         (branch "CUT: a.length >= 1 TRUE"
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "allLeft" (formula "7") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet100000000000000101_10" (formula "7") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100000000000000101_11" (formula "7") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "7") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "allLeft" (formula "20") (inst "t=i_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "20") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "21") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "allLeft" (formula "8") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "8") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "8"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "closeFalse" (formula "8"))
                                                         )
                                                         (branch "CUT: a.length >= 1 FALSE"
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_geqRight" (formula "20"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "19"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0"))
                                                            (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "19"))
                                                            (rule "seqDef_lower_equals_upper" (formula "13") (term "0"))
                                                            (rule "seqPermEmpty1" (formula "13"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "eqSeqEmpty" (formula "13"))
                                                            (rule "lenOfSeqDef" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                                                            (rule "mul_literals" (formula "13") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "13") (term "0,1"))
                                                            (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "19"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "18"))
                                                            (rule "seqDef_lower_equals_upper" (formula "11") (term "0"))
                                                            (rule "seqPermEmpty1" (formula "11"))
                                                            (rule "eqSymm" (formula "11"))
                                                            (rule "eqSeqEmpty" (formula "11"))
                                                            (rule "lenOfSeqDef" (formula "11") (term "0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                                                            (rule "mul_literals" (formula "11") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "11") (term "0,1"))
                                                            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "16"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                      (branch "j_0 = i_0 FALSE"
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "ifthenelse_to_or_left" (formula "11") (term "0,0,0,0"))
                                                         (rule "eqSymm" (formula "11") (term "1,0,0,0,0,0"))
                                                         (rule "eqSymm" (formula "11") (term "1,1,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "11") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "commute_or" (formula "11") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "11") (term "0,0"))
                                                         (rule "commute_or_2" (formula "11") (term "0"))
                                                         (rule "commute_or_2" (formula "11") (term "0,1,0"))
                                                         (rule "commute_or" (formula "11") (term "1,1,0"))
                                                         (rule "commute_or" (formula "11") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "11") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or" (formula "12") (term "0"))
                                                         (rule "commute_or_2" (formula "11") (term "0"))
                                                         (rule "commute_or" (formula "12") (term "1,1,0"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0"))
                                                         (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "cnf_rightDist" (formula "12") (term "0"))
                                                         (rule "distr_forallAnd" (formula "12"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "commute_or_2" (formula "12") (term "0"))
                                                         (rule "shift_paren_or" (formula "13") (term "0"))
                                                         (rule "commute_or_2" (formula "12") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "13") (term "0,0"))
                                                         (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                                                         (rule "commute_or" (formula "11") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "commute_or" (formula "12") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "qeq_literals" (formula "12") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "j_0 = -1 + i_0 TRUE"
                                                            (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "applyEqRigid" (formula "6") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,2,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,2,0"))
                                                            (rule "add_zero_left" (formula "6") (term "0,2,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                                            (rule "add_literals" (formula "7") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "1"))
                                                            (rule "polySimp_homoEq" (formula "21"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0"))
                                                            (rule "add_literals" (formula "21") (term "0"))
                                                            (rule "equal_literals" (formula "21"))
                                                            (rule "false_right" (formula "21"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "6") (term "0,2,1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "cut_direct" (formula "10") (term "0,1,1,0"))
                                                            (branch "CUT: a.length >= 1 TRUE"
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                               (rule "replaceKnownSelect_taclet100000000000000101_10" (formula "8") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100000000000000101_11" (formula "8") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "8") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "8") (term "0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "closeFalse" (formula "8"))
                                                            )
                                                            (branch "CUT: a.length >= 1 FALSE"
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_geqRight" (formula "21"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                               (rule "qeq_literals" (formula "21"))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "20"))
                                                               (rule "seqDef_lower_equals_upper" (formula "12") (term "0"))
                                                               (rule "seqPermEmpty1" (formula "12"))
                                                               (rule "eqSymm" (formula "12"))
                                                               (rule "eqSeqEmpty" (formula "12"))
                                                               (rule "lenOfSeqDef" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "12") (term "0,1"))
                                                               (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "20"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "19"))
                                                               (rule "seqDef_lower_equals_upper" (formula "13") (term "0"))
                                                               (rule "seqPermEmpty1" (formula "13"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "eqSeqEmpty" (formula "13"))
                                                               (rule "lenOfSeqDef" (formula "13") (term "0"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                                                               (rule "mul_literals" (formula "13") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "13") (term "0,1"))
                                                               (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "19"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "17"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                         )
                                                         (branch "j_0 = -1 + i_0 FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "cut_direct" (formula "10") (term "0,1,1,0"))
                                                            (branch "CUT: a.length >= 1 TRUE"
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "allLeft" (formula "15") (inst "t=j_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "15") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_7"))
                                                               (rule "simplifySelectOfAnon" (formula "15"))
                                                                (builtin "One Step Simplification" (formula "15"))
                                                               (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                                                               (rule "hideAuxiliaryEq" (formula "15"))
                                                               (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), j_0)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "16") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_8"))
                                                               (rule "simplifySelectOfAnon" (formula "16"))
                                                                (builtin "One Step Simplification" (formula "16"))
                                                               (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                                               (rule "hideAuxiliaryEq" (formula "16"))
                                                               (rule "allLeft" (formula "17") (inst "t=i_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "17") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "17") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_9"))
                                                               (rule "simplifySelectOfAnon" (formula "17"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                                               (rule "hideAuxiliaryEq" (formula "17"))
                                                               (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), j_0)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "23") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "allLeft" (formula "8") (inst "t=add(Z(1(#)), j_0)"))
                                                               (rule "replaceKnownSelect_taclet0000101_6" (formula "8") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "8") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "8") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                               (rule "mul_literals" (formula "8") (term "0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "mul_literals" (formula "8") (term "1"))
                                                               (rule "allLeft" (formula "10") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet000101_4" (formula "10") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "10") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "7"))
                                                               (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "10") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "allLeft" (formula "10") (inst "t=i_0"))
                                                               (rule "replaceKnownSelect_taclet100000000000000101_10" (formula "10") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100000000000000101_11" (formula "10") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "10") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "10") (term "0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "closeFalse" (formula "10"))
                                                            )
                                                            (branch "CUT: a.length >= 1 FALSE"
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_geqRight" (formula "21"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "20"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "20"))
                                                               (rule "seqDef_lower_equals_upper" (formula "12") (term "0"))
                                                               (rule "seqPermEmpty1" (formula "12"))
                                                               (rule "eqSymm" (formula "12"))
                                                               (rule "eqSeqEmpty" (formula "12"))
                                                               (rule "lenOfSeqDef" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "12") (term "0,1"))
                                                               (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "20"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "19"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "18"))
                                                               (rule "seqDef_lower_equals_upper" (formula "12") (term "1"))
                                                               (rule "seqPermEmpty2" (formula "12"))
                                                               (rule "eqSymm" (formula "12"))
                                                               (rule "eqSeqEmpty" (formula "12"))
                                                               (rule "lenOfSeqDef" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                               (rule "add_zero_right" (formula "12") (term "0,1"))
                                                               (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "18"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "17"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                                               (rule "qeq_literals" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "17"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "21"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "21"))
                                                      (branch "Case 1"
                                                         (rule "getOfSeqDef" (formula "21") (term "1"))
                                                         (rule "add_zero_right" (formula "21") (term "0,2,0,1,1"))
                                                         (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1"))
                                                         (rule "mul_literals" (formula "21") (term "1,1,1,0,1"))
                                                         (rule "add_zero_right" (formula "21") (term "1,1,0,1"))
                                                         (rule "inEqSimp_ltRight" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "6") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=arr_4"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=arr_5"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "narrowSelectArrayType" (formula "1") (term "0,1,0") (ifseqformula "13") (ifseqformula "20"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_or_subsumption6" (formula "5"))
                                                         (rule "greater_literals" (formula "5") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "nnf_imp2or" (formula "19") (term "0"))
                                                         (rule "nnf_imp2or" (formula "13") (term "0"))
                                                         (rule "nnf_imp2or" (formula "7") (term "0"))
                                                         (rule "nnf_imp2or" (formula "8") (term "0"))
                                                         (rule "nnf_imp2or" (formula "9") (term "0"))
                                                         (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                         (rule "commute_or" (formula "19") (term "0,0"))
                                                         (rule "commute_or" (formula "13") (term "0,0"))
                                                         (rule "commute_or" (formula "7") (term "0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "commute_or" (formula "8") (term "0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "commute_and" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "eqSymm" (formula "9") (term "0,0,0"))
                                                         (rule "commute_and" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "eqSymm" (formula "9") (term "0,0,0"))
                                                         (rule "ifthenelse_to_or_left" (formula "9") (term "0,0,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "9") (term "0,1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,1,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,1,1,0,0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                                         (rule "commute_or" (formula "9") (term "1,1,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "qeq_literals" (formula "9") (term "1,0,0,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "shift_paren_or" (formula "9") (term "1,1,0"))
                                                         (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "9") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9") (term "1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,1,1,0"))
                                                         (rule "add_literals" (formula "9") (term "1,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "0,1,1,1,0"))
                                                         (rule "leq_literals" (formula "9") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "shift_paren_or" (formula "9") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "ifthenelse_to_or_left" (formula "9") (term "0,0,0,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,1,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                                         (rule "commute_or" (formula "9") (term "1,1,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "9") (term "0"))
                                                         (rule "distr_forallAnd" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "commute_or" (formula "10") (term "0"))
                                                         (rule "commute_or_2" (formula "9") (term "0"))
                                                         (rule "commute_or" (formula "10") (term "1,1,0"))
                                                         (rule "shift_paren_or" (formula "9") (term "0,0"))
                                                         (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "commute_or_2" (formula "10") (term "0"))
                                                         (rule "shift_paren_or" (formula "11") (term "0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0"))
                                                         (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "11") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "qeq_literals" (formula "10") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), j_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=arr_6"))
                                                         (rule "simplifySelectOfAnon" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                                                         (rule "hideAuxiliaryEq" (formula "13"))
                                                         (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), j_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "21") (inst "t=j_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "allLeft" (formula "14") (inst "t=j_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "14") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_7"))
                                                         (rule "simplifySelectOfAnon" (formula "14"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                                         (rule "hideAuxiliaryEq" (formula "14"))
                                                         (rule "cut_direct" (formula "9") (term "0,1,1,0"))
                                                         (branch "CUT: a.length >= 1 TRUE"
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "9"))
                                                            (rule "leq_literals" (formula "21") (term "0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "allLeft" (formula "7") (inst "t=add(Z(1(#)), j_0)"))
                                                            (rule "replaceKnownSelect_taclet0000101_6" (formula "7") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "7") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "7") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                            (rule "mul_literals" (formula "7") (term "0,0"))
                                                            (rule "add_zero_left" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1"))
                                                            (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet000101_4" (formula "9") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "9") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_subsumption1" (formula "9") (term "1") (ifseqformula "7"))
                                                            (rule "leq_literals" (formula "9") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "allLeft" (formula "12") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet0010000000000000101_11" (formula "12") (term "1,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0010000000000000101_12" (formula "12") (term "1,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "12") (term "1,0,0") (ifseqformula "20") (ifseqformula "28"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "12") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "12") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=arr_8"))
                                                            (rule "simplifySelectOfAnon" (formula "12"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
                                                            (rule "hideAuxiliaryEq" (formula "12"))
                                                            (rule "narrowSelectArrayType" (formula "12") (term "0") (ifseqformula "15") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_literals" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "CUT: a.length >= 1 FALSE"
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_geqRight" (formula "24"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "21"))
                                                            (rule "seqDef_lower_equals_upper" (formula "11") (term "1"))
                                                            (rule "seqPermEmpty2" (formula "11"))
                                                            (rule "eqSymm" (formula "11"))
                                                            (rule "eqSeqEmpty" (formula "11"))
                                                            (rule "lenOfSeqDef" (formula "11") (term "0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                                                            (rule "mul_literals" (formula "11") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "11") (term "0,1"))
                                                            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "20"))
                                                            (rule "seqDef_lower_equals_upper" (formula "12") (term "0"))
                                                            (rule "seqPermEmpty1" (formula "12"))
                                                            (rule "eqSymm" (formula "12"))
                                                            (rule "eqSeqEmpty" (formula "12"))
                                                            (rule "lenOfSeqDef" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                                                            (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "12") (term "0,1"))
                                                            (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "19"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "21"))
                                                         (branch "Case 1"
                                                            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "inEqSimp_geqRight" (formula "20"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                                            (rule "eqSymm" (formula "8") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                                            (rule "eqSymm" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,0,0"))
                                                            (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "5"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "inEqSimp_ltRight" (formula "21"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "qeq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "21") (inst "sk=l_0"))
                                                      (rule "impRight" (formula "21"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "23"))
                                                      (rule "getOfSeqDef" (formula "23") (term "0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,2,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0"))
                                                      (rule "times_zero_2" (formula "23") (term "1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "10") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "10") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "10") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
                                                      (rule "eqSymm" (formula "10") (term "1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=arr_4"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "22") (term "0,1,0") (ifseqformula "14") (ifseqformula "21"))
                                                      (rule "castDel" (formula "22") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "7") (term "1") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "7") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "7") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "nnf_imp2or" (formula "7") (term "0"))
                                                      (rule "nnf_imp2or" (formula "19") (term "0"))
                                                      (rule "nnf_imp2or" (formula "8") (term "0"))
                                                      (rule "nnf_imp2or" (formula "13") (term "0"))
                                                      (rule "nnf_imp2or" (formula "9") (term "0"))
                                                      (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "commute_or" (formula "7") (term "0,0"))
                                                      (rule "commute_or" (formula "19") (term "0,0"))
                                                      (rule "commute_or" (formula "8") (term "0,0"))
                                                      (rule "commute_or_2" (formula "9") (term "0"))
                                                      (rule "commute_or" (formula "13") (term "0,0"))
                                                      (rule "commute_or" (formula "9") (term "0,0"))
                                                      (rule "commute_or_2" (formula "9") (term "0"))
                                                      (rule "commute_and" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "eqSymm" (formula "9") (term "0,0,0"))
                                                      (rule "commute_and" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "eqSymm" (formula "9") (term "0,0,0"))
                                                      (rule "ifthenelse_split" (formula "22") (term "0"))
                                                      (branch "a.length >= 1 + l_0 TRUE"
                                                         (rule "eqSymm" (formula "23"))
                                                         (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "10") (term "0,1,1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0"))
                                                         (rule "commute_or" (formula "10") (term "0,0"))
                                                         (rule "commute_or_2" (formula "10") (term "0"))
                                                         (rule "commute_or" (formula "10") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                         (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "10") (term "0,0,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,1,0"))
                                                         (rule "qeq_literals" (formula "10") (term "1,0,0,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "shift_paren_or" (formula "10") (term "1,1,0"))
                                                         (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "10") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,1,1,0"))
                                                         (rule "add_literals" (formula "10") (term "1,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "10") (term "0,1,1,1,0"))
                                                         (rule "leq_literals" (formula "10") (term "1,1,1,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "commute_or_2" (formula "10") (term "0"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                         (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "commute_or" (formula "10") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0"))
                                                         (rule "commute_or_2" (formula "10") (term "0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                         (rule "commute_or" (formula "10") (term "1,1,0"))
                                                         (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "10") (term "0"))
                                                         (rule "distr_forallAnd" (formula "10"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "commute_or_2" (formula "10") (term "0"))
                                                         (rule "commute_or" (formula "11") (term "0"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                         (rule "commute_or" (formula "11") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "cnf_rightDist" (formula "11") (term "0"))
                                                         (rule "distr_forallAnd" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "commute_or_2" (formula "11") (term "0"))
                                                         (rule "shift_paren_or" (formula "12") (term "0"))
                                                         (rule "commute_or_2" (formula "11") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "12") (term "0,0"))
                                                         (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "12") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                         (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "commute_or" (formula "11") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "qeq_literals" (formula "11") (term "1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "allLeft" (formula "20") (inst "t=l_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "20") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "9") (inst "t=l_0"))
                                                         (rule "replaceKnownSelect_taclet110000000000000101_12" (formula "9") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000000000000101_13" (formula "9") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_6"))
                                                         (rule "simplifySelectOfAnon" (formula "9"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "9"))
                                                         (rule "hideAuxiliaryEq" (formula "9"))
                                                         (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), j_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "allLeft" (formula "23") (inst "t=j_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allLeft" (formula "8") (inst "t=l_0"))
                                                         (rule "replaceKnownSelect_taclet110000000000000101_12" (formula "8") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000000000000101_13" (formula "8") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "8") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                         (rule "replaceKnownSelect_taclet000101_4" (formula "9") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "9") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "allLeft" (formula "10") (inst "t=add(Z(1(#)), j_0)"))
                                                         (rule "replaceKnownSelect_taclet0000101_6" (formula "10") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "10") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "10") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "6"))
                                                         (rule "mul_literals" (formula "10") (term "0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "9") (term "0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "cut_direct" (formula "14") (term "0,1,1,0"))
                                                         (branch "CUT: a.length >= 1 TRUE"
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "24") (term "0"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "allLeft" (formula "19") (inst "t=l_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "19") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "19") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "19"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                            (rule "hideAuxiliaryEq" (formula "19"))
                                                            (rule "allLeft" (formula "20") (inst "t=j_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "20") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_8"))
                                                            (rule "simplifySelectOfAnon" (formula "20"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                                            (rule "hideAuxiliaryEq" (formula "20"))
                                                            (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), j_0)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "21") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_9"))
                                                            (rule "simplifySelectOfAnon" (formula "21"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                                            (rule "hideAuxiliaryEq" (formula "21"))
                                                            (rule "allLeft" (formula "15") (inst "t=l_0"))
                                                            (rule "replaceKnownSelect_taclet110000000000000101_8" (formula "15") (term "1,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet110000000000000101_9" (formula "15") (term "1,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "15") (term "1,0,0") (ifseqformula "24") (ifseqformula "33"))
                                                            (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "15") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "15") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_10"))
                                                            (rule "simplifySelectOfAnon" (formula "15"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                                                            (rule "hideAuxiliaryEq" (formula "15"))
                                                            (rule "narrowSelectArrayType" (formula "15") (term "0") (ifseqformula "18") (ifseqformula "33"))
                                                            (rule "close" (formula "34") (ifseqformula "15"))
                                                         )
                                                         (branch "CUT: a.length >= 1 FALSE"
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_geqRight" (formula "28"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "24"))
                                                            (rule "seqDef_lower_equals_upper" (formula "18") (term "0"))
                                                            (rule "seqPermEmpty1" (formula "18"))
                                                            (rule "eqSymm" (formula "18"))
                                                            (rule "eqSeqEmpty" (formula "18"))
                                                            (rule "lenOfSeqDef" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "polySimp_elimSub" (formula "18") (term "0,1"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "18") (term "0,1"))
                                                            (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "23"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "22"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0"))
                                                            (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "22"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "22"))
                                                            (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "22"))
                                                            (rule "seqDef_lower_equals_upper" (formula "15") (term "0"))
                                                            (rule "seqPermEmpty1" (formula "15"))
                                                            (rule "eqSymm" (formula "15"))
                                                            (rule "eqSeqEmpty" (formula "15"))
                                                            (rule "lenOfSeqDef" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "0,1"))
                                                            (rule "mul_literals" (formula "15") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "15") (term "0,1"))
                                                            (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "22"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "a.length >= 1 + l_0 FALSE"
                                                         (rule "inEqSimp_geqRight" (formula "22"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "19") (term "0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0"))
                                                         (rule "add_zero_right" (formula "7") (term "0"))
                                                         (rule "leq_literals" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "seqPermSym" (formula "21") (userinteraction))
                                                (rule "seqPermSym" (formula "9") (userinteraction))
                                                (rule "seqPermFromSwap" (formula "21") (inst "iv=iv") (inst "jv=jv") (ifseqformula "9") (userinteraction))
                                                (rule "narrowSelectArrayType" (formula "21") (term "2,1,0") (ifseqformula "14") (ifseqformula "20") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "exRightHide" (formula "21") (inst "t=add(j_0, Z(1(#)))") (userinteraction))
                                                (rule "exRightHide" (formula "21") (inst "t=j_0") (userinteraction))
                                                (rule "eqSymm" (formula "21") (term "1"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "1,0,1"))
                                                (rule "lenOfSeqDef" (formula "21") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "21") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "21") (term "1,1,1,0"))
                                                (rule "lenOfSeqDef" (formula "21") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "eqSeqDef" (formula "20") (term "1") (inst "iv=iv"))
                                                (rule "getOfSeqDef" (formula "20") (term "1,1,0,1,1"))
                                                (rule "castDel" (formula "20") (term "2,1,1,0,1,1"))
                                                (rule "castDel" (formula "20") (term "1,1,1,0,1,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0,1,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,0,1,1,0,1,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0,1,1"))
                                                (rule "lenOfSwap" (formula "20") (term "0,0,1"))
                                                (rule "lenOfSwap" (formula "20") (term "1,1,0,0,1,1"))
                                                (rule "lenOfSeqDef" (formula "20") (term "1,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,1"))
                                                (rule "lenOfSeqDef" (formula "20") (term "0,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1"))
                                                (rule "times_zero_2" (formula "20") (term "1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "lenOfSeqDef" (formula "20") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,0,1"))
                                                (rule "times_zero_2" (formula "20") (term "1,1,1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,1,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,1,0,0,1"))
                                                (rule "getOfSwap" (formula "20") (term "0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "20") (term "1,2,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "2,1,2,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "1,1,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,2,1,1,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,0,1,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,1,2,0,1,0,1"))
                                                (rule "lenOfSeqDef" (formula "20") (term "1,1,0,0,0,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,1,0,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,1,0,0,0,0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "20") (term "1,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "2,1,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "1,1,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,2,1,1,2,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,2,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,0,1,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,1,2,2,0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "20") (term "2,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "2,2,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "1,2,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,2,1,2,2,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,0,2,2,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,0,2,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,2,2,2,0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "20") (term "1,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "1,1,0,1,0,1"))
                                                (rule "castDel" (formula "20") (term "2,1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,2,1,1,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,0,1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,1,0,1,0,1"))
                                                (rule "lenOfSeqDef" (formula "20") (term "1,1,0,0,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,1,1,1,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,2,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,2,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,1,1,0,0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,2,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,2,2,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,2,2,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,2,2,0,1,0,1"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,2,2,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,2,2,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,2,2,2,0,1,0,1"))
                                                (rule "ifthenelse_negated" (formula "20") (term "0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,1,0,1"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,1,1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,1,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,2,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,2,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,2,2,1,0,1,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,1,2,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,1,2,1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,1,2,1,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,2,2,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,2,2,1,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,1,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,2,1,0,1,0,1"))
                                                (rule "replace_known_left" (formula "20") (term "1,0,1,2,1,0,1,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,1,2,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,0,1,2,1,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,2,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (term "1,0,1,1,0,1,0,1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,1,1,0,1,0,1"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,1,0,1,1,0,1,0,1"))
                                                (rule "qeq_literals" (formula "20") (term "0,1,0,1,1,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "pullOutSelect" (formula "20") (term "1,1,1,0,1,0,1") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                (rule "equal_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "21") (term "1,1,1,0,1,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "20") (term "1,1,2,1,0,1,0,1") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "21") (term "1,1,2,1,0,1,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_or_subsumption6" (formula "4"))
                                                (rule "greater_literals" (formula "4") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "20") (term "1,0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "4")) (ifInst ""  (formula "4")))
                                                (rule "inEqSimp_subsumption1" (formula "20") (term "0,1,2,1,0,1,0,1") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "20") (term "0,0,1,2,1,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (term "0,0,0,0,1,0,1") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "20") (term "0,0,0,0,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (term "0,0,0") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "20") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "nnf_imp2or" (formula "5") (term "0"))
                                                (rule "nnf_imp2or" (formula "17") (term "0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0"))
                                                (rule "nnf_imp2or" (formula "6") (term "0"))
                                                (rule "nnf_imp2or" (formula "7") (term "0"))
                                                (rule "nnf_imp2or" (formula "20") (term "0,1"))
                                                (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1"))
                                                (rule "commute_and" (formula "20") (term "0"))
                                                (rule "inEqSimp_and_subsumption2" (formula "20") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "commute_or" (formula "5") (term "0,0"))
                                                (rule "commute_or" (formula "17") (term "0,0"))
                                                (rule "commute_or" (formula "11") (term "0,0"))
                                                (rule "commute_or_2" (formula "7") (term "0"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "commute_or_2" (formula "7") (term "0"))
                                                (rule "commute_and" (formula "7") (term "0,1,0,0,0"))
                                                (rule "commute_and" (formula "7") (term "0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left" (formula "7") (term "0,0,0"))
                                                (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,1,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "7") (term "0,0,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,1,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "7") (term "1,0,1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,1,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,1,0,1,1,0,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,1,0,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "commute_or_2" (formula "7") (term "0"))
                                                (rule "commute_or_2" (formula "7") (term "0,1,0"))
                                                (rule "commute_or" (formula "7") (term "1,1,0"))
                                                (rule "commute_or" (formula "7") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "7") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "7") (term "0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "7") (term "1,1,0"))
                                                (rule "commute_or_2" (formula "7") (term "0,1,1,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "7") (term "1,1,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "7") (term "1,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "shift_paren_or" (formula "7") (term "1,1,0"))
                                                (rule "commute_or" (formula "7") (term "0,1,1,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "7") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "1,1,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1,1,1,0"))
                                                (rule "add_literals" (formula "7") (term "1,0,1,1,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "0,1,1,1,0"))
                                                (rule "leq_literals" (formula "7") (term "1,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or_2" (formula "7") (term "0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                                                (rule "commute_or" (formula "7") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "ifthenelse_split" (formula "20") (term "0,0"))
                                                (branch "a.length >= 1 TRUE"
                                                   (rule "replace_known_left" (formula "8") (term "0,1,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "21") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
                                                   (rule "allRight" (formula "21") (inst "sk=iv_0"))
                                                   (rule "orRight" (formula "21"))
                                                   (rule "orRight" (formula "21"))
                                                   (rule "eqSymm" (formula "23") (term "0,2,1,0"))
                                                   (rule "polySimp_homoEq" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0"))
                                                   (rule "inEqSimp_leqRight" (formula "21"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "23") (term "0,0,2,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                   (rule "inEqSimp_geqRight" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "0,2,2,1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,2,2,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,2,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,2,2,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,2,2,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,2,2,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,2,2,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,2,2,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,2,2,1,0"))
                                                   (rule "replace_known_left" (formula "23") (term "0,2,2,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1"))
                                                   (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,2,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,2,0"))
                                                   (rule "replace_known_left" (formula "23") (term "0,2,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "3"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=arr_6"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "22") (term "1") (ifseqformula "12") (ifseqformula "21"))
                                                   (rule "pullOutSelect" (formula "22") (term "2,2,0") (inst "selectSK=arr_7"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replaceKnownSelect_taclet01000000000000101_15" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01000000000000101_16" (formula "1") (term "2,0"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "14") (ifseqformula "23"))
                                                   (rule "ifthenelse_to_or_left" (formula "12") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                                                   (rule "commute_or" (formula "12") (term "0,0"))
                                                   (rule "commute_or_2" (formula "12") (term "0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,1,0"))
                                                   (rule "commute_or" (formula "12") (term "1,1,0"))
                                                   (rule "commute_or" (formula "12") (term "0,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "12") (term "0"))
                                                   (rule "distr_forallAnd" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "commute_or" (formula "13") (term "0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0"))
                                                   (rule "commute_or_2" (formula "12") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "commute_or" (formula "13") (term "1,1,0"))
                                                   (rule "shift_paren_or" (formula "12") (term "0,0"))
                                                   (rule "commute_or" (formula "12") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "cnf_rightDist" (formula "13") (term "0"))
                                                   (rule "distr_forallAnd" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "commute_or_2" (formula "13") (term "0"))
                                                   (rule "shift_paren_or" (formula "14") (term "0"))
                                                   (rule "commute_or_2" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,0"))
                                                   (rule "add_literals" (formula "14") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "14") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "14") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "shift_paren_or" (formula "13") (term "0,0"))
                                                   (rule "commute_or" (formula "13") (term "0,0,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "13") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "j_0 = iv_0 TRUE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_left" (formula "24") (term "0,2,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "applyEqRigid" (formula "11") (term "1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "7") (term "1,0,2,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "equal_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "0,2,2,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "orRight" (formula "22"))
                                                      (rule "notRight" (formula "22"))
                                                      (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "polySimp_homoEq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "equal_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "j_0 = iv_0 FALSE"
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "24") (term "0,2,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), j_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "allLeft" (formula "21") (inst "t=iv_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "21") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "22") (inst "t=j_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "22") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "22") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "9") (inst "t=add(Z(1(#)), j_0)"))
                                                      (rule "replaceKnownSelect_taclet0000101_6" (formula "9") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "allLeft" (formula "11") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet000101_4" (formula "11") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "11") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "allLeft" (formula "11") (inst "t=iv_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "11"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
                                                      (rule "hideAuxiliaryEq" (formula "11"))
                                                      (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_10"))
                                                      (rule "simplifySelectOfAnon" (formula "18"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                      (rule "hideAuxiliaryEq" (formula "18"))
                                                      (rule "allLeft" (formula "19") (inst "t=j_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_11"))
                                                      (rule "simplifySelectOfAnon" (formula "19"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                      (rule "hideAuxiliaryEq" (formula "19"))
                                                      (rule "allLeft" (formula "20") (inst "t=iv_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_12"))
                                                      (rule "simplifySelectOfAnon" (formula "20"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                                      (rule "hideAuxiliaryEq" (formula "20"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "j_0 = -1 + iv_0 TRUE"
                                                         (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "applyEqRigid" (formula "18") (term "1,0,2,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,2,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,2,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0,2,0"))
                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                         (rule "polySimp_homoEq" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0"))
                                                         (rule "equal_literals" (formula "29"))
                                                         (rule "false_right" (formula "29"))
                                                         (rule "applyEqRigid" (formula "27") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                                         (rule "add_literals" (formula "7") (term "0,1"))
                                                         (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,2,1,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "30") (term "1,0,2,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,2,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,2,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,2,0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "closeTrue" (formula "30"))
                                                      )
                                                      (branch "j_0 = -1 + iv_0 FALSE"
                                                         (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                                                         (rule "closeTrue" (formula "34"))
                                                      )
                                                   )
                                                )
                                                (branch "a.length >= 1 FALSE"
                                                   (rule "replace_known_right" (formula "7") (term "0,1,1,0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "21") (term "0,1,1,0,0,1") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
                                                   (rule "inEqSimp_geqRight" (formula "20"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "1,0,0,0,0,1,0,1"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "1,0,1,0,0,1,0,1"))
                                                   (rule "add_zero_right" (formula "21") (term "0,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0"))
                                                   (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                                   (rule "mul_literals" (formula "21") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "21") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "17"))
                                                   (rule "seqDef_lower_equals_upper" (formula "9") (term "1"))
                                                   (rule "seqPermEmpty2" (formula "9"))
                                                   (rule "eqSymm" (formula "9"))
                                                   (rule "eqSeqEmpty" (formula "9"))
                                                   (rule "lenOfSeqDef" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "polySimp_elimSub" (formula "9") (term "0,1"))
                                                   (rule "mul_literals" (formula "9") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,1"))
                                                   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "7") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "15"))
                                                   (rule "add_zero_right" (formula "7") (term "1,1,0,0,0,0,0,0"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "15"))
                                                   (rule "seqDef_lower_equals_upper" (formula "9") (term "1"))
                                                   (rule "seqPermEmpty2" (formula "9"))
                                                   (rule "eqSymm" (formula "9"))
                                                   (rule "eqSeqEmpty" (formula "9"))
                                                   (rule "lenOfSeqDef" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "polySimp_elimSub" (formula "9") (term "0,1"))
                                                   (rule "mul_literals" (formula "9") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,1"))
                                                   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "15"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "21") (inst "sk=f_0"))
                                             (rule "allRight" (formula "21") (inst "sk=o_0"))
                                             (rule "orRight" (formula "21"))
                                             (rule "orRight" (formula "21"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                             (rule "eqSymm" (formula "8") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                             (rule "eqSymm" (formula "8") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
                                             (rule "eqSymm" (formula "8") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0"))
                                             (rule "eqSymm" (formula "8") (term "1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=f_0_0"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                             (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "23")))
                                             (rule "replaceKnownSelect_taclet100000000000101_8" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeTrue" (formula "24"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0"))
                                          (rule "precOfInt" (formula "21"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                          (rule "eqSymm" (formula "8") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                          (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,1"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                          (rule "add_literals" (formula "21") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "21") (term "0,1"))
                                          (rule "leq_literals" (formula "21") (term "1"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                          (rule "eqSymm" (formula "8") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "21"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                          (rule "eqSymm" (formula "9") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
                                          (rule "eqSymm" (formula "9") (term "1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1,0,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch "if sorted false"
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0,1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "assignment" (formula "23") (term "1"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "blockEmpty" (formula "23") (term "1"))
                                       (rule "postincrement" (formula "23") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=x_4"))
                                       (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_16"))
                                       (rule "remove_parentheses_right" (formula "23") (term "1"))
                                       (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                       (rule "assignment" (formula "23") (term "1"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "blockEmpty" (formula "23") (term "1"))
                                       (rule "lsContinue" (formula "23") (term "1"))
                                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "8")))
                                       (rule "andRight" (formula "23"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "23"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "23"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "23"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "23"))
                                                   (branch "Case 1"
                                                      (rule "orRight" (formula "23"))
                                                      (rule "andRight" (formula "23"))
                                                      (branch "Case 1"
                                                         (rule "inEqSimp_geqRight" (formula "23"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "24"))
                                                         (rule "mul_literals" (formula "24") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradEq3" (formula "5") (term "1") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                         (rule "qeq_literals" (formula "5") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0"))
                                                         (rule "qeq_literals" (formula "24") (term "0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "false_right" (formula "24"))
                                                         (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                         (rule "qeq_literals" (formula "4") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "inEqSimp_ltRight" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "24"))
                                                         (rule "mul_literals" (formula "24") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_literals" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "23") (inst "sk=i_0"))
                                                      (rule "impRight" (formula "23"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_geqRight" (formula "25"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                                      (rule "inEqSimp_gtToGeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_4"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_or_subsumption6" (formula "8"))
                                                      (rule "greater_literals" (formula "8") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "nnf_imp2or" (formula "23") (term "0"))
                                                      (rule "nnf_imp2or" (formula "17") (term "0"))
                                                      (rule "nnf_imp2or" (formula "9") (term "0"))
                                                      (rule "nnf_imp2or" (formula "13") (term "0"))
                                                      (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "23") (term "0,0"))
                                                      (rule "commute_or" (formula "17") (term "0,0"))
                                                      (rule "commute_or" (formula "9") (term "0,0"))
                                                      (rule "commute_or" (formula "13") (term "0,0"))
                                                      (rule "commute_and" (formula "13") (term "0,0,0,1,0"))
                                                      (rule "ifthenelse_split" (formula "11") (term "0,0"))
                                                      (branch "a.length >= 1 + diff_0 TRUE"
                                                         (rule "castDel" (formula "12") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                         (rule "mul_literals" (formula "12") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "j_0 = i_0 TRUE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "6") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                            (rule "equal_literals" (formula "2") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "1"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "applyEq" (formula "2") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0"))
                                                            (rule "qeq_literals" (formula "4") (term "0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "allLeft" (formula "15") (inst "t=i_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "15"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                                                            (rule "hideAuxiliaryEq" (formula "15"))
                                                            (rule "allLeft" (formula "22") (inst "t=diff_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "22") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "allLeft" (formula "16") (inst "t=diff_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "16") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_8"))
                                                            (rule "simplifySelectOfAnon" (formula "16"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                                            (rule "hideAuxiliaryEq" (formula "16"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "24") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "allLeft" (formula "6") (inst "t=diff_0"))
                                                            (rule "replaceKnownSelect_taclet101_0" (formula "6") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "6") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "6") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
                                                            (rule "mul_literals" (formula "6") (term "0,0"))
                                                            (rule "add_zero_left" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "6"))
                                                            (rule "leq_literals" (formula "18") (term "0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet100001000000000101_10" (formula "8") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001000000000101_11" (formula "8") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "8") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "allLeft" (formula "9") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_9"))
                                                            (rule "simplifySelectOfAnon" (formula "9"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "9"))
                                                            (rule "hideAuxiliaryEq" (formula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "9"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "j_0 = i_0 FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "allLeft" (formula "8") (inst "t=diff_0"))
                                                            (rule "replaceKnownSelect_taclet101_0" (formula "8") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "8") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "8") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                                                            (rule "mul_literals" (formula "8") (term "0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "mul_literals" (formula "8") (term "1"))
                                                            (rule "allLeft" (formula "19") (inst "t=diff_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "19") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfAnon" (formula "19"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                            (rule "hideAuxiliaryEq" (formula "19"))
                                                            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "8"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), j_0)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "19") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_8"))
                                                            (rule "simplifySelectOfAnon" (formula "19"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                                            (rule "hideAuxiliaryEq" (formula "19"))
                                                            (rule "allLeft" (formula "26") (inst "t=diff_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "26") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "allLeft" (formula "27") (inst "t=j_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "27") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), j_0)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "28") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "28") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "allLeft" (formula "29") (inst "t=i_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "29") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "29") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "allLeft" (formula "10") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet000101_4" (formula "10") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "10") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "10") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "allLeft" (formula "21") (inst "t=j_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "21") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_9"))
                                                            (rule "simplifySelectOfAnon" (formula "21"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                                            (rule "hideAuxiliaryEq" (formula "21"))
                                                            (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "22") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "22") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_10"))
                                                            (rule "simplifySelectOfAnon" (formula "22"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
                                                            (rule "hideAuxiliaryEq" (formula "22"))
                                                            (rule "allLeft" (formula "11") (inst "t=add(Z(1(#)), j_0)"))
                                                            (rule "replaceKnownSelect_taclet0000101_6" (formula "11") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "11") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "11") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "11") (term "0,0"))
                                                            (rule "add_zero_left" (formula "11") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                            (rule "mul_literals" (formula "11") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "allLeft" (formula "12") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet100001000000000101_10" (formula "12") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet100001000000000101_11" (formula "12") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch "j_0 = -1 + i_0 TRUE"
                                                               (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "10") (term "0,2,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                               (rule "add_literals" (formula "6") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                                               (rule "polySimp_homoEq" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0"))
                                                               (rule "add_zero_right" (formula "35") (term "0"))
                                                               (rule "equal_literals" (formula "35"))
                                                               (rule "false_right" (formula "35"))
                                                               (rule "applyEqRigid" (formula "32") (term "1,0,2,0") (ifseqformula "1"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,2,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,2,0"))
                                                               (rule "add_zero_left" (formula "32") (term "0,2,0"))
                                                               (rule "applyEqRigid" (formula "5") (term "1,0,2,0") (ifseqformula "1"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,2,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,2,0"))
                                                               (rule "add_zero_left" (formula "5") (term "0,2,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                               (rule "applyEqRigid" (formula "31") (term "0,2,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0,0"))
                                                               (rule "applyEq" (formula "21") (term "1,0,2,0") (ifseqformula "1"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,2,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,2,0"))
                                                               (rule "add_zero_left" (formula "21") (term "0,2,0"))
                                                               (rule "applyEqRigid" (formula "10") (term "1,0,2,0") (ifseqformula "1"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,2,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,2,0"))
                                                               (rule "add_zero_left" (formula "10") (term "0,2,0"))
                                                               (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "closeFalse" (formula "9"))
                                                            )
                                                            (branch "j_0 = -1 + i_0 FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "closeFalse" (formula "11"))
                                                            )
                                                         )
                                                      )
                                                      (branch "a.length >= 1 + diff_0 FALSE"
                                                         (rule "inEqSimp_geqRight" (formula "24"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "13"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0"))
                                                         (rule "leq_literals" (formula "9"))
                                                         (rule "closeFalse" (formula "9"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "23"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "23"))
                                                      (branch "Case 1"
                                                         (rule "getOfSeqDef" (formula "23") (term "1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,2,0,1,1"))
                                                         (rule "replaceKnownSelect_taclet101_2" (formula "23") (term "0,1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "23") (term "0,1,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "1,1,0,1"))
                                                         (rule "narrowSelectArrayType" (formula "23") (term "0,1,1") (ifseqformula "14") (ifseqformula "22"))
                                                         (rule "castDel" (formula "23") (term "1,1"))
                                                         (rule "inEqSimp_ltRight" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,0,1,0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "5") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=arr_4"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "7"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet101_0" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "1") (term "2,0"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "7"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "inEqSimp_or_subsumption6" (formula "4"))
                                                         (rule "greater_literals" (formula "4") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "nnf_imp2or" (formula "13") (term "0"))
                                                         (rule "nnf_imp2or" (formula "19") (term "0"))
                                                         (rule "nnf_imp2or" (formula "9") (term "0"))
                                                         (rule "nnf_imp2or" (formula "5") (term "0"))
                                                         (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "commute_or" (formula "13") (term "0,0"))
                                                         (rule "commute_or" (formula "19") (term "0,0"))
                                                         (rule "commute_or" (formula "9") (term "0,0"))
                                                         (rule "commute_or" (formula "5") (term "0,0"))
                                                         (rule "commute_and" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "ifthenelse_split" (formula "7") (term "0,0"))
                                                         (branch "a.length >= 1 + diff_0 TRUE"
                                                            (rule "castDel" (formula "8") (term "0"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "a.length >= 1 + diff_0 FALSE"
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_geqRight" (formula "20"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "8"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "inEqSimp_ltRight" (formula "23"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "23") (inst "sk=l_0"))
                                                      (rule "impRight" (formula "23"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "getOfSeqDef" (formula "25") (term "0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,2,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_4"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "24") (term "0,1,0") (ifseqformula "15") (ifseqformula "23"))
                                                      (rule "castDel" (formula "24") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "2") (term "0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_or_subsumption6" (formula "8"))
                                                      (rule "greater_literals" (formula "8") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "nnf_imp2or" (formula "22") (term "0"))
                                                      (rule "nnf_imp2or" (formula "9") (term "0"))
                                                      (rule "nnf_imp2or" (formula "16") (term "0"))
                                                      (rule "nnf_imp2or" (formula "12") (term "0"))
                                                      (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                      (rule "commute_or" (formula "22") (term "0,0"))
                                                      (rule "commute_or" (formula "9") (term "0,0"))
                                                      (rule "commute_or" (formula "16") (term "0,0"))
                                                      (rule "commute_or" (formula "12") (term "0,0"))
                                                      (rule "commute_and" (formula "12") (term "0,0,0,1,0"))
                                                      (rule "ifthenelse_split" (formula "11") (term "0,0"))
                                                      (branch "a.length >= 1 + diff_0 TRUE"
                                                         (rule "castDel" (formula "12") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                         (rule "mul_literals" (formula "12") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                         (rule "ifthenelse_split" (formula "27") (term "0"))
                                                         (branch "a.length >= 1 + l_0 TRUE"
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "l_0 = j_0 TRUE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "2"))
                                                               (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                               (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                               (rule "equal_literals" (formula "3") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "eqSymm" (formula "26"))
                                                               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0"))
                                                               (rule "add_zero_right" (formula "8") (term "0"))
                                                               (rule "leq_literals" (formula "8"))
                                                               (rule "closeFalse" (formula "8"))
                                                            )
                                                            (branch "l_0 = j_0 FALSE"
                                                               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "allLeft" (formula "17") (inst "t=l_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "17") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_8"))
                                                               (rule "simplifySelectOfAnon" (formula "17"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                                               (rule "hideAuxiliaryEq" (formula "17"))
                                                               (rule "allLeft" (formula "18") (inst "t=diff_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "18") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_9"))
                                                               (rule "simplifySelectOfAnon" (formula "18"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                               (rule "hideAuxiliaryEq" (formula "18"))
                                                               (rule "allLeft" (formula "9") (inst "t=diff_0"))
                                                               (rule "replaceKnownSelect_taclet101_0" (formula "9") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "9") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "9") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "9") (term "0,0"))
                                                               (rule "add_zero_left" (formula "9") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                               (rule "mul_literals" (formula "9") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "allLeft" (formula "11") (inst "t=add(Z(1(#)), j_0)"))
                                                               (rule "replaceKnownSelect_taclet0000101_6" (formula "11") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "11") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "11") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                                               (rule "times_zero_1" (formula "11") (term "0,0"))
                                                               (rule "add_zero_left" (formula "11") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "mul_literals" (formula "11") (term "1"))
                                                               (rule "allLeft" (formula "22") (inst "t=j_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "22") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "22"))
                                                               (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "22") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "22"))
                                                               (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_10"))
                                                               (rule "simplifySelectOfAnon" (formula "22"))
                                                                (builtin "One Step Simplification" (formula "22"))
                                                               (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
                                                               (rule "hideAuxiliaryEq" (formula "22"))
                                                               (rule "allLeft" (formula "17") (inst "t=l_0"))
                                                               (rule "replaceKnownSelect_taclet110001000000000101_12" (formula "17") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110001000000000101_13" (formula "17") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet110001000000000101_8" (formula "17") (term "1,0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110001000000000101_9" (formula "17") (term "1,0,0,1"))
                                                               (rule "replace_known_left" (formula "17") (term "0,0,0,0,1") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "narrowSelectArrayType" (formula "17") (term "1,0,0,1") (ifseqformula "25") (ifseqformula "34"))
                                                               (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1"))
                                                               (rule "replace_known_left" (formula "17") (term "0,0,0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "castDel" (formula "17") (term "0,1"))
                                                               (rule "eqSymm" (formula "17") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "17") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "17"))
                                                               (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), j_0)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "24") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_11"))
                                                               (rule "simplifySelectOfAnon" (formula "24"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                                               (rule "hideAuxiliaryEq" (formula "24"))
                                                               (rule "allLeft" (formula "13") (inst "t=l_0"))
                                                               (rule "replaceKnownSelect_taclet110001000000000101_12" (formula "13") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110001000000000101_13" (formula "13") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                               (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "18"))
                                                               (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "23"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "allLeft" (formula "13") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet000101_4" (formula "13") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "13") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "13") (term "1") (ifseqformula "11"))
                                                               (rule "leq_literals" (formula "13") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "allLeft" (formula "31") (inst "t=l_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "31") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "31") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "32") (inst "t=diff_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "33") (inst "t=j_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "33") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "33") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), j_0)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "8"))
                                                               (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch "l_0 = 1 + j_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "2"))
                                                                  (rule "applyEqRigid" (formula "31") (term "0,2,0") (ifseqformula "2"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "2"))
                                                                  (rule "polySimp_homoEq" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0"))
                                                                  (rule "add_literals" (formula "34") (term "0"))
                                                                  (rule "equal_literals" (formula "34"))
                                                                  (rule "false_right" (formula "34"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "2"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                  (rule "add_literals" (formula "1") (term "0,1"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "16"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                                                  (rule "applyEq" (formula "16") (term "0,2,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "11") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "35") (term "0,2,1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0,2,0,1,0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "35") (term "0,0"))
                                                                  (rule "leq_literals" (formula "35") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "false_right" (formula "35"))
                                                                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                                                  (rule "leq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "3"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                  (rule "add_literals" (formula "11") (term "0"))
                                                                  (rule "leq_literals" (formula "11"))
                                                                  (rule "closeFalse" (formula "11"))
                                                               )
                                                               (branch "l_0 = 1 + j_0 FALSE"
                                                                  (rule "close" (formula "41") (ifseqformula "2"))
                                                               )
                                                            )
                                                         )
                                                         (branch "a.length >= 1 + l_0 FALSE"
                                                            (rule "inEqSimp_geqRight" (formula "27"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "8"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "7"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                            (rule "mul_literals" (formula "11") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0"))
                                                            (rule "add_zero_right" (formula "11") (term "0"))
                                                            (rule "leq_literals" (formula "11"))
                                                            (rule "closeFalse" (formula "11"))
                                                         )
                                                      )
                                                      (branch "a.length >= 1 + diff_0 FALSE"
                                                         (rule "inEqSimp_geqRight" (formula "23"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "12"))
                                                         (rule "andLeft" (formula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0"))
                                                         (rule "add_literals" (formula "8") (term "0"))
                                                         (rule "leq_literals" (formula "8"))
                                                         (rule "closeFalse" (formula "8"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "narrowSelectArrayType" (formula "23") (term "2,0") (ifseqformula "15") (ifseqformula "22") (userinteraction))
                                                (rule "seqPermSym" (formula "10") (userinteraction))
                                                (rule "seqPermSym" (formula "23") (userinteraction))
                                                (rule "seqPermFromSwap" (formula "23") (inst "iv=iv") (inst "jv=jv") (ifseqformula "10") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "exRightHide" (formula "23") (inst "t=j_0") (userinteraction))
                                                (rule "exRightHide" (formula "23") (inst "t=add(j_0, Z(1(#)))") (userinteraction))
                                                (rule "eqSymm" (formula "23") (term "1"))
                                                (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "2,0,1"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0"))
                                                (rule "times_zero_2" (formula "23") (term "1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "eqSeqDef" (formula "22") (term "1") (inst "iv=iv"))
                                                (rule "getOfSeqDef" (formula "22") (term "1,1,0,1,1"))
                                                (rule "castDel" (formula "22") (term "2,1,1,0,1,1"))
                                                (rule "castDel" (formula "22") (term "1,1,1,0,1,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,1,1,0,1,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1"))
                                                (rule "lenOfSeqDef" (formula "22") (term "1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,1"))
                                                (rule "lenOfSwap" (formula "22") (term "0,0,1"))
                                                (rule "lenOfSwap" (formula "22") (term "1,1,0,0,1,1"))
                                                (rule "lenOfSeqDef" (formula "22") (term "0,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                                                (rule "getOfSwap" (formula "22") (term "0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "22") (term "1,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "2,1,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "1,1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,2,1,1,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,1,0,1,0,1"))
                                                (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,0,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,0,0,1,0,1"))
                                                (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,0,0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "22") (term "2,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "1,2,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "2,2,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,2,1,2,2,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,2,2,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,2,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,2,2,2,0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "22") (term "1,2,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "2,1,2,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "1,1,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,2,1,1,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,1,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,1,2,0,1,0,1"))
                                                (rule "getOfSeqDef" (formula "22") (term "1,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "2,1,2,2,0,1,0,1"))
                                                (rule "castDel" (formula "22") (term "1,1,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,2,1,1,2,2,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,2,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,0,1,2,2,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,0,1,2,2,0,1,0,1"))
                                                (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,0,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,1,1,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,2,2,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,2,2,2,0,1,0,1"))
                                                (rule "ifthenelse_negated" (formula "22") (term "0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,1,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,1,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,2,1,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0,1,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,2,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,2,1,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,2,2,1,0,1,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,0,1,0,0,0,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,1,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,1,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1,0,1,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,0,1,1,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,2,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,2,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,2,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,2,2,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,2,2,1,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,2,2,1,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,1,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,0,1"))
                                                (rule "replace_known_left" (formula "22") (term "1,0,1,1,0,1,0,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,2,1,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,0,1,1,0,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,0,1,0,1"))
                                                (rule "inEqSimp_subsumption1" (formula "22") (term "1,0,1,2,1,0,1,0,1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,1,0,1,2,1,0,1,0,1"))
                                                (rule "qeq_literals" (formula "22") (term "0,1,0,1,2,1,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "pullOutSelect" (formula "22") (term "1,1,2,1,0,1,0,1") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                (rule "equal_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "23") (term "1,1,2,1,0,1,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "22") (term "1,1,1,0,1,0,1") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "23") (term "1,1,1,0,1,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_or_subsumption6" (formula "3"))
                                                (rule "greater_literals" (formula "3") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "22") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,0,0,1,0,1") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "22") (term "0,0,0,0,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_subsumption1" (formula "22") (term "0,1,1,0,1,0,1") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "22") (term "0,0,1,1,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_and_subsumption2" (formula "22") (term "0,0,1,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0,1,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0,1,0,1"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,0,1"))
                                                (rule "qeq_literals" (formula "22") (term "0,0,0,0,1,0,1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_and_subsumption2" (formula "22") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "nnf_imp2or" (formula "4") (term "0"))
                                                (rule "nnf_imp2or" (formula "18") (term "0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0"))
                                                (rule "nnf_imp2or" (formula "12") (term "0"))
                                                (rule "nnf_imp2or" (formula "22") (term "0,1"))
                                                (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                                                (rule "ifthenelse_split" (formula "6") (term "0,0"))
                                                (branch "a.length >= 1 + diff_0 TRUE"
                                                   (rule "castDel" (formula "7") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                   (rule "commute_or" (formula "4") (term "0,0"))
                                                   (rule "commute_or" (formula "19") (term "0,0"))
                                                   (rule "commute_or" (formula "9") (term "0,0"))
                                                   (rule "commute_or" (formula "13") (term "0,0"))
                                                   (rule "commute_and" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "ifthenelse_split" (formula "23") (term "0,0"))
                                                   (branch "a.length >= 1 TRUE"
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0,0,1,0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")) (ifInst ""  (formula "1")) (ifInst ""  (formula "3")))
                                                      (rule "allRight" (formula "24") (inst "sk=iv_0"))
                                                      (rule "orRight" (formula "24"))
                                                      (rule "orRight" (formula "24"))
                                                      (rule "eqSymm" (formula "26") (term "0,0"))
                                                      (rule "polySimp_homoEq" (formula "26") (term "0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,2,0"))
                                                      (rule "inEqSimp_leqRight" (formula "24"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
                                                      (rule "inEqSimp_geqRight" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,2,2,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,2,2,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26") (term "0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,2,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,2,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,2,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,2,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1"))
                                                      (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,2,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,2,2,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,2,2,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,2,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,2,2,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,2,2,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,2,2,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "pullOutSelect" (formula "25") (term "1") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "25") (term "1") (ifseqformula "14") (ifseqformula "24"))
                                                      (rule "pullOutSelect" (formula "25") (term "2,2,0") (inst "selectSK=arr_7"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replaceKnownSelect_taclet001001000000000101_15" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001001000000000101_16" (formula "1") (term "2,0"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "16") (ifseqformula "26"))
                                                      (rule "allLeft" (formula "18") (inst "t=j_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "18"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                      (rule "hideAuxiliaryEq" (formula "18"))
                                                      (rule "allLeft" (formula "9") (inst "t=add(Z(1(#)), j_0)"))
                                                      (rule "replaceKnownSelect_taclet0000101_6" (formula "9") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0000101_7" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "mul_literals" (formula "9") (term "1"))
                                                      (rule "allLeft" (formula "11") (inst "t=diff_0"))
                                                      (rule "replaceKnownSelect_taclet101_0" (formula "11") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "11") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
                                                      (rule "mul_literals" (formula "11") (term "0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "allLeft" (formula "13") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet000101_4" (formula "13") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000101_5" (formula "13") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (term "1") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "13") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), j_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "23") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_10"))
                                                      (rule "simplifySelectOfAnon" (formula "23"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                                                      (rule "hideAuxiliaryEq" (formula "23"))
                                                      (rule "allLeft" (formula "24") (inst "t=iv_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_11"))
                                                      (rule "simplifySelectOfAnon" (formula "24"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                                      (rule "hideAuxiliaryEq" (formula "24"))
                                                      (rule "allLeft" (formula "25") (inst "t=diff_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "17"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "15"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_12"))
                                                      (rule "simplifySelectOfAnon" (formula "25"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                                      (rule "hideAuxiliaryEq" (formula "25"))
                                                      (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "allLeft" (formula "30") (inst "t=j_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), j_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "allLeft" (formula "32") (inst "t=iv_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "allLeft" (formula "13") (inst "t=iv_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=arr_13"))
                                                      (rule "simplifySelectOfAnon" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                                                      (rule "hideAuxiliaryEq" (formula "13"))
                                                      (rule "allLeft" (formula "34") (inst "t=diff_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "34") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "j_0 = iv_0 TRUE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "31") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "29") (term "1,0,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "9") (term "1,0,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "35") (term "0,2,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "closeTrue" (formula "35"))
                                                      )
                                                      (branch "j_0 = iv_0 FALSE"
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "allLeft" (formula "18") (inst "t=iv_0"))
                                                         (rule "replaceKnownSelect_taclet001001000000000101_27" (formula "18") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet001001000000000101_28" (formula "18") (term "1,1"))
                                                         (rule "replace_known_left" (formula "18") (term "0,0,0,0,1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1"))
                                                         (rule "replace_known_left" (formula "18") (term "0,0,0,1") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "pullOutSelect" (formula "18") (term "0,0,1") (inst "selectSK=arr_14"))
                                                         (rule "simplifySelectOfAnon" (formula "18"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "applyEqReverse" (formula "19") (term "0,0,1") (ifseqformula "18"))
                                                         (rule "hideAuxiliaryEq" (formula "18"))
                                                         (rule "narrowSelectArrayType" (formula "18") (term "0,0,1") (ifseqformula "27") (ifseqformula "39"))
                                                         (rule "castDel" (formula "18") (term "0,1"))
                                                         (rule "eqSymm" (formula "18") (term "1"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "j_0 = -1 + iv_0 TRUE"
                                                            (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,2,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,2,0"))
                                                            (rule "add_zero_left" (formula "32") (term "0,2,0"))
                                                            (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                                            (rule "polySimp_homoEq" (formula "35"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0"))
                                                            (rule "add_literals" (formula "35") (term "0"))
                                                            (rule "equal_literals" (formula "35"))
                                                            (rule "false_right" (formula "35"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "9") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,2,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,2,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0,2,0"))
                                                            (rule "applyEq" (formula "23") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,2,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,2,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0,2,0"))
                                                            (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                            (rule "add_literals" (formula "6") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "21") (term "0,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,2,1,1") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "5") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,2,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,2,0"))
                                                            (rule "add_zero_left" (formula "5") (term "0,2,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,0,2,0") (ifseqformula "1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,2,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,2,0"))
                                                            (rule "add_zero_left" (formula "35") (term "0,2,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "closeTrue" (formula "35"))
                                                         )
                                                         (branch "j_0 = -1 + iv_0 FALSE"
                                                            (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "36")))
                                                            (rule "closeTrue" (formula "41"))
                                                         )
                                                      )
                                                   )
                                                   (branch "a.length >= 1 FALSE"
                                                      (rule "replace_known_right" (formula "24") (term "0,1,1,0,0,1") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                                      (rule "inEqSimp_geqRight" (formula "23"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0"))
                                                      (rule "mul_literals" (formula "24") (term "1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,1,0,1") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0,0,1,0,1"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "false_right" (formula "24"))
                                                      (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "18"))
                                                      (rule "seqDef_lower_equals_upper" (formula "12") (term "1"))
                                                      (rule "seqPermEmpty2" (formula "12"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSeqEmpty" (formula "12"))
                                                      (rule "lenOfSeqDef" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                                                      (rule "mul_literals" (formula "12") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "12") (term "0,1"))
                                                      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "17"))
                                                      (rule "seqDef_lower_equals_upper" (formula "10") (term "0"))
                                                      (rule "seqPermEmpty1" (formula "10"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "eqSeqEmpty" (formula "10"))
                                                      (rule "lenOfSeqDef" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "10") (term "0,1"))
                                                      (rule "mul_literals" (formula "10") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "10") (term "0,1"))
                                                      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "9") (term "1,1,1,0,0,0,1,0") (ifseqformula "16"))
                                                      (rule "add_zero_right" (formula "9") (term "1,1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "16"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "a.length >= 1 + diff_0 FALSE"
                                                   (rule "inEqSimp_geqRight" (formula "19"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "18") (term "0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "7"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "23") (inst "sk=f_0"))
                                             (rule "allRight" (formula "23") (inst "sk=o_0"))
                                             (rule "orRight" (formula "23"))
                                             (rule "orRight" (formula "23"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=f_0_0"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                             (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_0_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                                             (rule "replaceKnownSelect_taclet101000000000101_8" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "closeTrue" (formula "26"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "precOfInt" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                                          (rule "add_literals" (formula "23") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "0,1"))
                                          (rule "leq_literals" (formula "23") (term "1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "23"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Null Reference (x_arr_3 = null)"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_3 != null, but x_15 Out of Bounds!)"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "false_right" (formula "22"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0,1"))
                                    (rule "eqSymm" (formula "8") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                                    (rule "eqSymm" (formula "8") (term "1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,1,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "4") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradEq3" (formula "5") (term "1") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "5") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Null Reference (x_arr_1 = null)"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_1 != null, but x_12 Out of Bounds!)"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "false_right" (formula "22"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0,1"))
                                 (rule "eqSymm" (formula "8") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                                 (rule "eqSymm" (formula "8") (term "1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1"))
                                 (rule "eqSymm" (formula "8") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,1,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0,1"))
                                 (rule "eqSymm" (formula "8") (term "1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                 (rule "qeq_literals" (formula "4") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "Null Reference (x_arr_2 = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_2 != null, but x_14 Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "false_right" (formula "22"))
                              (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0,1"))
                              (rule "eqSymm" (formula "8") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0,1"))
                              (rule "eqSymm" (formula "8") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0,1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,1,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1"))
                              (rule "eqSymm" (formula "8") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,1"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,1,1,0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,1,0,0,0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "0,0,1,1,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0,1"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0,1"))
                              (rule "eqSymm" (formula "8") (term "1,0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "1"))
                              (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "4") (term "0,0,1"))
                              (rule "qeq_literals" (formula "4") (term "0,1"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradEq3" (formula "5") (term "1") (ifseqformula "1"))
                              (rule "mul_literals" (formula "5") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "5") (term "0,0,1"))
                              (rule "qeq_literals" (formula "5") (term "0,1"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (_a = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_a != null, but j Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "false_right" (formula "22"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0,1"))
                           (rule "eqSymm" (formula "8") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0,1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0,1"))
                           (rule "eqSymm" (formula "8") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1,0,1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,1,0,0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "0,0,0,1,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1"))
                           (rule "eqSymm" (formula "8") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0,1"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0,1"))
                           (rule "eqSymm" (formula "8") (term "1,0,1"))
                           (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "1"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,0,1"))
                           (rule "qeq_literals" (formula "4") (term "0,1"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                     (branch "if x_8 false"
                         (builtin "One Step Simplification" (formula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "blockEmpty" (formula "21") (term "1"))
                        (rule "postincrement" (formula "21") (term "1"))
                        (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=x_4"))
                        (rule "variableDeclarationAssign" (formula "21") (term "1"))
                        (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_12"))
                        (rule "remove_parentheses_right" (formula "21") (term "1"))
                        (rule "assignmentAdditionInt" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "21") (term "1"))
                        (rule "assignment" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "blockEmpty" (formula "21") (term "1"))
                        (rule "lsContinue" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "andRight" (formula "21"))
                        (branch "Case 1"
                           (rule "andRight" (formula "21"))
                           (branch "Case 1"
                              (rule "andRight" (formula "21"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "21"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "21"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "21"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "21"))
                                          (branch "Case 1"
                                             (rule "orRight" (formula "21"))
                                             (rule "andRight" (formula "21"))
                                             (branch "Case 1"
                                                 (builtin "SMTRule")
                                             )
                                             (branch "Case 2"
                                                 (builtin "SMTRule")
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "SMTRule")
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "impRight" (formula "21"))
                                           (builtin "SMTRule")
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "impRight" (formula "21"))
                                       (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_gtRight" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                       (rule "eqSymm" (formula "8") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,1,0"))
                                       (rule "eqSymm" (formula "8") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "eqSeqDef" (formula "20") (inst "iv=iv"))
                                       (rule "lenOfSeqDef" (formula "20") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "1,1,0"))
                                       (rule "lenOfSeqDef" (formula "20") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "20") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "20") (term "1,1,1,1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "1,1,1,0,0,1"))
                                       (rule "lenOfSeqDef" (formula "20") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "allRight" (formula "20") (inst "sk=iv_0"))
                                       (rule "impRight" (formula "20"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "getOfSeqDef" (formula "22") (term "1"))
                                       (rule "castDel" (formula "22") (term "2,1"))
                                       (rule "castDel" (formula "22") (term "1,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,2,1,1"))
                                       (rule "replace_known_left" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "polySimp_elimSub" (formula "22") (term "1,0,1"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "1,0,1"))
                                       (rule "getOfSeqDef" (formula "22") (term "0"))
                                       (rule "castDel" (formula "22") (term "2,0"))
                                       (rule "castDel" (formula "22") (term "1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,2,1,0"))
                                       (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "22") (term "1,0") (inst "selectSK=arr_4"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "narrowSelectArrayType" (formula "22") (term "1,1") (ifseqformula "11") (ifseqformula "21"))
                                       (rule "pullOutSelect" (formula "22") (term "1,0") (inst "selectSK=arr_5"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "22") (term "1,0") (ifseqformula "14") (ifseqformula "21"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "inEqSimp_or_subsumption6" (formula "6"))
                                       (rule "greater_literals" (formula "6") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "nnf_imp2or" (formula "7") (term "0"))
                                       (rule "nnf_imp2or" (formula "8") (term "0"))
                                       (rule "nnf_imp2or" (formula "9") (term "0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "commute_or" (formula "13") (term "0,0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "commute_or" (formula "8") (term "0,0"))
                                       (rule "commute_or" (formula "9") (term "0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "commute_and" (formula "9") (term "0,1,0,0,0"))
                                       (rule "commute_and" (formula "9") (term "0,0,0,0,0"))
                                       (rule "ifthenelse_to_or_left" (formula "9") (term "0,0,0"))
                                       (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "9") (term "0,1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "9") (term "0,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,0,0,1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "9") (term "1,0,1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                       (rule "commute_or" (formula "9") (term "0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                       (rule "commute_or" (formula "9") (term "1,1,0"))
                                       (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "9") (term "0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "9") (term "1,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "shift_paren_or" (formula "9") (term "1,1,0"))
                                       (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "9") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "1,1,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,1,1,0"))
                                       (rule "add_literals" (formula "9") (term "1,0,1,1,1,0"))
                                       (rule "times_zero_1" (formula "9") (term "0,1,1,1,0"))
                                       (rule "leq_literals" (formula "9") (term "1,1,1,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "shift_paren_or" (formula "9") (term "0,0"))
                                       (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                       (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "a.length >= 1 TRUE"
                                          (rule "replace_known_left" (formula "10") (term "0,1,1,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "3")))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0"))
                                          (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                          (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                          (rule "commute_or" (formula "10") (term "0,0"))
                                          (rule "commute_or_2" (formula "10") (term "0"))
                                          (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                          (rule "commute_or" (formula "10") (term "1,1,0"))
                                          (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "10") (term "0"))
                                          (rule "distr_forallAnd" (formula "10"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "commute_or" (formula "11") (term "0"))
                                          (rule "shift_paren_or" (formula "10") (term "0"))
                                          (rule "commute_or_2" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "commute_or" (formula "11") (term "1,1,0"))
                                          (rule "shift_paren_or" (formula "10") (term "0,0"))
                                          (rule "commute_or" (formula "10") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "cnf_rightDist" (formula "11") (term "0"))
                                          (rule "distr_forallAnd" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "commute_or_2" (formula "11") (term "0"))
                                          (rule "shift_paren_or" (formula "12") (term "0"))
                                          (rule "commute_or_2" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,0"))
                                          (rule "add_literals" (formula "12") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "12") (term "0,1,0"))
                                          (rule "leq_literals" (formula "12") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "shift_paren_or" (formula "11") (term "0,0"))
                                          (rule "commute_or" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0"))
                                          (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "11") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "allLeft" (formula "10") (inst "t=iv_0"))
                                          (rule "replaceKnownSelect_taclet1000010000101_8" (formula "10") (term "0,0,0"))
                                          (rule "replaceKnownSelect_taclet1000010000101_10" (formula "10") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1000010000101_9" (formula "10") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1000010000101_11" (formula "10") (term "1,0,0"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "1,0,0") (ifseqformula "16") (ifseqformula "22"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "0,0,0") (ifseqformula "13") (ifseqformula "22"))
                                          (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1"))
                                          (rule "leq_literals" (formula "10") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "a.length >= 1 FALSE"
                                          (rule "replace_known_right" (formula "9") (term "0,1,1,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_geqRight" (formula "20"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "impRight" (formula "21"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "andRight" (formula "22"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "22"))
                                       (branch "Case 1"
                                          (rule "replaceKnownSelect_taclet101_0" (formula "22") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "22") (term "0"))
                                          (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0,1") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "getOfSeqDef" (formula "23") (term "1"))
                                          (rule "add_zero_right" (formula "23") (term "0,2,0,1,1"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "23") (term "0,1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "23") (term "0,1,1"))
                                          (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1"))
                                          (rule "times_zero_2" (formula "23") (term "1,1,1,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "1,1,0,1"))
                                          (rule "inEqSimp_gtRight" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "narrowSelectArrayType" (formula "23") (term "0,1,1") (ifseqformula "14") (ifseqformula "22"))
                                          (rule "castDel" (formula "23") (term "1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1"))
                                          (rule "inEqSimp_ltRight" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,1,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_or_subsumption6" (formula "4"))
                                          (rule "greater_literals" (formula "4") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "nnf_imp2or" (formula "5") (term "0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "nnf_imp2or" (formula "19") (term "0"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "commute_or" (formula "5") (term "0,0"))
                                          (rule "commute_or" (formula "13") (term "0,0"))
                                          (rule "commute_or" (formula "19") (term "0,0"))
                                          (rule "commute_or" (formula "9") (term "0,0"))
                                          (rule "commute_and" (formula "9") (term "0,0,0,1,0"))
                                          (rule "ifthenelse_split" (formula "7") (term "0,0"))
                                          (branch "a.length >= 1 + diff_0 TRUE"
                                             (rule "castDel" (formula "8") (term "0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "a.length >= 1 + diff_0 FALSE"
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_geqRight" (formula "20"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "8"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "22"))
                                          (branch "Case 1"
                                              (builtin "SMTRule")
                                          )
                                          (branch "Case 2"
                                              (builtin "SMTRule")
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "22") (inst "sk=l_0"))
                                       (rule "impRight" (formula "22"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0,1") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "getOfSeqDef" (formula "25") (term "0"))
                                       (rule "add_zero_right" (formula "25") (term "0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                       (rule "inEqSimp_gtRight" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_4"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "24") (term "0,1,0") (ifseqformula "15") (ifseqformula "23"))
                                       (rule "castDel" (formula "24") (term "1,0"))
                                       (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=arr_5"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_or_subsumption6" (formula "6"))
                                       (rule "greater_literals" (formula "6") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "nnf_imp2or" (formula "7") (term "0"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "nnf_imp2or" (formula "20") (term "0"))
                                       (rule "nnf_imp2or" (formula "10") (term "0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "commute_or" (formula "7") (term "0,0"))
                                       (rule "commute_or" (formula "14") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "10") (term "0,0"))
                                       (rule "commute_and" (formula "10") (term "0,0,0,1,0"))
                                       (rule "ifthenelse_split" (formula "9") (term "0,0"))
                                       (branch "a.length >= 1 + diff_0 TRUE"
                                          (rule "castDel" (formula "10") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1"))
                                          (rule "mul_literals" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "a.length >= 1 + l_0 TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "allLeft" (formula "16") (inst "t=l_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "leq_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_6"))
                                             (rule "simplifySelectOfAnon" (formula "16"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "allLeft" (formula "17") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_7"))
                                             (rule "simplifySelectOfAnon" (formula "17"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                             (rule "hideAuxiliaryEq" (formula "17"))
                                             (rule "allLeft" (formula "8") (inst "t=l_0"))
                                             (rule "replaceKnownSelect_taclet1100010000101_10" (formula "8") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1100010000101_11" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "allLeft" (formula "9") (inst "t=diff_0"))
                                             (rule "replaceKnownSelect_taclet101_0" (formula "9") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                             (rule "leq_literals" (formula "9") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                             (rule "times_zero_1" (formula "9") (term "0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "allLeft" (formula "27") (inst "t=l_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "27") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "27") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "allLeft" (formula "28") (inst "t=diff_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "28") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "28") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "allLeft" (formula "21") (inst "t=diff_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                             (rule "leq_literals" (formula "21") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_8"))
                                             (rule "simplifySelectOfAnon" (formula "21"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "29") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "29") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "29") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "allLeft" (formula "15") (inst "t=l_0"))
                                             (rule "replaceKnownSelect_taclet1100010000101_10" (formula "15") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1100010000101_11" (formula "15") (term "1,1"))
                                             (rule "replaceKnownSelect_taclet1100010000101_8" (formula "15") (term "1,0,0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1100010000101_9" (formula "15") (term "1,0,0,1"))
                                             (rule "replace_known_left" (formula "15") (term "0,0,0,0,1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "narrowSelectArrayType" (formula "15") (term "1,0,0,1") (ifseqformula "23") (ifseqformula "34"))
                                             (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1"))
                                             (rule "replace_known_left" (formula "15") (term "0,0,0,1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "castDel" (formula "15") (term "0,1"))
                                             (rule "eqSymm" (formula "15") (term "1"))
                                             (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                             (rule "leq_literals" (formula "15") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "closeFalse" (formula "15"))
                                          )
                                          (branch "a.length >= 1 + l_0 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "25"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                             (rule "mul_literals" (formula "10") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "10"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_literals" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                       (branch "a.length >= 1 + diff_0 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "21"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "6"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0"))
                                          (rule "add_literals" (formula "10") (term "0"))
                                          (rule "leq_literals" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "narrowSelectArrayType" (formula "21") (term "2,0") (ifseqformula "13") (ifseqformula "20"))
                                 (rule "close" (formula "21") (ifseqformula "8"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "SMTRule")
                           )
                        )
                        (branch "Case 2"
                            (builtin "SMTRule")
                        )
                     )
                  )
                  (branch "Null Reference (x_arr = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr != null, but x_11 Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "false_right" (formula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,1"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,0,1"))
                     (rule "eqSymm" (formula "7") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,1,0,1"))
                     (rule "eqSymm" (formula "7") (term "1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1,0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,1,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1"))
                     (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1,0,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,1,0,1"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1,0,1"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "0,0,1,1,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,1,0,0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradEq3" (formula "3") (term "1") (ifseqformula "1"))
                     (rule "mul_literals" (formula "3") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1"))
                     (rule "qeq_literals" (formula "3") (term "0,1"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "1"))
                     (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "4") (term "0,0,1"))
                     (rule "qeq_literals" (formula "4") (term "0,1"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_a = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (_a != null, but j Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "false_right" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,0,1"))
                  (rule "eqSymm" (formula "7") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,0,0,0,1"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,0,1"))
                  (rule "eqSymm" (formula "7") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,0,1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1,0,1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0,1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1"))
                  (rule "eqSymm" (formula "7") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,1,0,1"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,0,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1,0,1"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1,0,1"))
                  (rule "eqSymm" (formula "7") (term "1,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0,1,1,0,0,0,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "4") (term "0,0,1"))
                  (rule "qeq_literals" (formula "4") (term "0,1"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_contradEq3" (formula "3") (term "1") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "3") (term "0,0,1"))
                  (rule "qeq_literals" (formula "3") (term "0,1"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "if x_4 false"
                (builtin "One Step Simplification" (formula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "elim_double_block_2" (formula "20") (term "1"))
               (rule "blockBreak" (formula "20") (term "1"))
               (rule "lsBreak" (formula "20") (term "1"))
               (rule "assignment" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "lsContinue" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "andRight" (formula "20"))
               (branch "Case 1"
                  (rule "andRight" (formula "20"))
                  (branch "Case 1"
                     (rule "andRight" (formula "20"))
                     (branch "Case 1"
                        (rule "andRight" (formula "20"))
                        (branch "Case 1"
                           (rule "narrowSelectArrayType" (formula "20") (term "2,0") (ifseqformula "12") (ifseqformula "19") (userinteraction))
                           (rule "close" (formula "20") (ifseqformula "7") (userinteraction))
                        )
                        (branch "Case 2"
                            (builtin "SMTRule")
                        )
                     )
                     (branch "Case 2"
                        (rule "impRight" (formula "20"))
                         (builtin "SMTRule")
                     )
                  )
                  (branch "Case 2"
                      (builtin "SMTRule")
                  )
               )
               (branch "Case 2"
                  (rule "ifthenelse_split" (formula "20") (term "0,0") (userinteraction))
                  (branch "sorted_1 = TRUE TRUE"
                     (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "precOfPair" (formula "20"))
                     (rule "equal_literals" (formula "20") (term "0,1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltRight" (formula "17"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "precOfInt" (formula "20"))
                     (rule "leq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "less_literals" (formula "20"))
                     (rule "closeTrue" (formula "20"))
                  )
                  (branch "sorted_1 = TRUE FALSE"
                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "20") (userinteraction))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "precOfPair" (formula "21") (userinteraction))
                     (rule "orRight" (formula "21") (userinteraction))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "precOfSeq" (formula "22") (inst "iv=iv") (inst "jv=jv") (userinteraction))
                     (rule "orRight" (formula "22") (userinteraction))
                     (rule "andRight" (formula "22") (userinteraction))
                     (branch "Case 1"
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0,1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "lenOfSeqDef" (formula "23") (term "1"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                        (rule "times_zero_2" (formula "23") (term "1,1,1"))
                        (rule "add_zero_right" (formula "23") (term "1,1"))
                        (rule "lenOfSeqDef" (formula "24") (term "0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,0"))
                        (rule "precOfInt" (formula "22"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "less_literals" (formula "22"))
                        (rule "false_right" (formula "22"))
                        (rule "lenOfSeqDef" (formula "22") (term "0"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,0"))
                        (rule "times_zero_2" (formula "22") (term "1,1,0"))
                        (rule "add_zero_right" (formula "22") (term "1,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "closeTrue" (formula "22"))
                     )
                     (branch "Case 2"
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0,1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "precOfInt" (formula "22"))
                        (rule "leq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "less_literals" (formula "22"))
                        (rule "false_right" (formula "22"))
                        (rule "getOfSeqDef" (formula "22") (term "0,1,0,0"))
                        (rule "castDel" (formula "22") (term "2,0,1,0,0"))
                        (rule "castDel" (formula "22") (term "1,0,1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,0"))
                        (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,0"))
                        (rule "getOfSeqDef" (formula "22") (term "1,1,0,1,0"))
                        (rule "castDel" (formula "22") (term "2,1,1,0,1,0"))
                        (rule "castDel" (formula "22") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,0"))
                        (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,0"))
                        (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,0"))
                        (rule "castDel" (formula "22") (term "2,0,1,0,1,0"))
                        (rule "castDel" (formula "22") (term "1,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,1,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "1"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                        (rule "times_zero_2" (formula "23") (term "1,1,1"))
                        (rule "add_zero_right" (formula "23") (term "1,1"))
                        (rule "getOfSeqDef" (formula "22") (term "1,1,0,0"))
                        (rule "castDel" (formula "22") (term "2,1,1,0,0"))
                        (rule "castDel" (formula "22") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,0"))
                        (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,0"))
                        (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,0"))
                        (rule "times_zero_2" (formula "23") (term "1,1,0"))
                        (rule "add_zero_right" (formula "23") (term "1,0"))
                        (rule "inEqSimp_ltRight" (formula "18"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,0"))
                        (rule "eqSymm" (formula "22") (term "1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,0"))
                        (rule "eqSymm" (formula "22") (term "1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,0"))
                        (rule "inEqSimp_ltRight" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1,1,0,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "17") (term "0,0"))
                        (rule "add_zero_left" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_or_subsumption6" (formula "2"))
                        (rule "greater_literals" (formula "2") (term "0,1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "2"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "nnf_imp2or" (formula "12") (term "0"))
                        (rule "nnf_ex2all" (formula "22"))
                        (rule "nnf_imp2or" (formula "5") (term "0"))
                        (rule "nnf_imp2or" (formula "9") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "19") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "5") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "9") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "nnf_notAll" (formula "1") (term "1,0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                        (rule "nnf_imp2or" (formula "1") (term "0,0,1,0"))
                        (rule "nnf_notOr" (formula "1") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "4"))
                        (rule "commute_or" (formula "19") (term "0,0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commute_or" (formula "5") (term "0,0"))
                        (rule "commute_or" (formula "9") (term "0,0"))
                        (rule "commute_or_2" (formula "1") (term "0,0"))
                        (rule "commute_and" (formula "9") (term "0,0,0,1,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,1,0"))
                        (rule "commute_and" (formula "1") (term "0,0,1,0"))
                        (rule "ifthenelse_split" (formula "7") (term "0,0"))
                        (branch "a.length >= 1 + diff_0 TRUE"
                           (rule "castDel" (formula "8") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "mul_literals" (formula "8") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0"))
                           (rule "add_zero_left" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "qeq_literals" (formula "7") (term "0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,0"))
                           (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,1,0"))
                           (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,1,0"))
                           (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "1,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_or" (formula "1") (term "0,1,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "1") (term "1,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "1") (term "1,0,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,1,0"))
                           (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "1,0,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_or" (formula "1") (term "1,1,0,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,1,0,0,0,1,0"))
                           (rule "commute_or" (formula "1") (term "1,0,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "1") (term "0,0,1,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "1,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,1,0,0,0,1,0"))
                           (rule "allLeft" (formula "14") (inst "t=diff_0"))
                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "14") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "14") (term "0,0"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_2"))
                           (rule "simplifySelectOfAnon" (formula "14"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                           (rule "hideAuxiliaryEq" (formula "14"))
                           (rule "allLeft" (formula "21") (inst "t=diff_0"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "21") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0"))
                           (rule "leq_literals" (formula "21") (term "0,0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "allLeft" (formula "5") (inst "t=diff_0"))
                           (rule "replaceKnownSelect_taclet101_0" (formula "5") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "5") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "5") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0"))
                           (rule "leq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "9"))
                           (rule "mul_literals" (formula "5") (term "0,0"))
                           (rule "add_zero_left" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "5"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "shift_paren_and" (formula "1") (term "0,0,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "1") (term "0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,1,0"))
                           (rule "cut_direct" (formula "4") (term "1"))
                           (branch "CUT: a.length >= 1 + j_0 TRUE"
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "applyEq" (formula "13") (term "1,1,1,0,0,0,1,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,1,1,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "13") (term "1,1,0,0,0,1,0"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,0,0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0,0,0,1,0"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "1") (term "1,1,1,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,1,0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,1,1,1,0,0,1,0") (ifseqformula "3"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,1,0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,1,0,0,1,0"))
                              (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,1,1,1,0,0,0,0,1,0") (ifseqformula "3"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,1,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,0,0,0,0,1,0,1,0") (ifseqformula "3"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,0,0,0,0,0,1,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,0,0,0,0,0,1,0,1,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0,0,1,0,1,0"))
                              (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0"))
                              (rule "add_zero_left" (formula "8") (term "0,0"))
                              (rule "inEqSimp_invertInEq0" (formula "1") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                              (rule "mul_literals" (formula "20") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "2"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "seqDef_induction_upper_concrete" (formula "11") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,1"))
                              (rule "replace_known_left" (formula "11") (term "0,1,1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "seqDef_induction_upper_concrete" (formula "13") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,1"))
                              (rule "replace_known_left" (formula "13") (term "0,1,1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "seqDef_induction_upper_concrete" (formula "11") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,0"))
                              (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "seqDef_induction_upper_concrete" (formula "13") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
                              (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "pullOutSelect" (formula "11") (term "0,1,1") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnon" (formula "11"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "applyEqReverse" (formula "12") (term "0,1,1") (ifseqformula "11"))
                              (rule "hideAuxiliaryEq" (formula "11"))
                              (rule "narrowSelectArrayType" (formula "11") (term "0,1,1") (ifseqformula "12") (ifseqformula "22"))
                              (rule "pullOutSelect" (formula "13") (term "0,1,1") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfAnon" (formula "13"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "applyEqReverse" (formula "14") (term "0,1,1") (ifseqformula "13"))
                              (rule "hideAuxiliaryEq" (formula "13"))
                              (rule "narrowSelectArrayType" (formula "13") (term "0,1,1") (ifseqformula "15") (ifseqformula "22"))
                              (rule "ex_pull_out3" (formula "1") (term "0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0"))
                              (rule "commute_or" (formula "1") (term "0,0,0,1,0,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "0,0,0,1,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "1,0,0,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "1,0,0,0,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                              (rule "commute_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "allLeft" (formula "20") (inst "t=j_0"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "20") (term "0,1,0"))
                              (rule "leq_literals" (formula "20") (term "1,0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "20") (term "0,0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0,0,0,0,1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,1,1,0,0,0,0,1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,1,0,0,0,0,1,0,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0,1,0,0,0,0,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,1,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,1,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0,0,0,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,0,0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                              (rule "commute_or" (formula "1") (term "1,1,1,0,0"))
                              (rule "commute_or" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                              (rule "commute_or" (formula "1") (term "1,1,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_or" (formula "1") (term "1,1,1,1,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "cnf_rightDist" (formula "1") (term "1,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,1,1,1,1,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "1,1,1,1,1,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "1") (term "1,0,1,1,1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "0,1,1,1,1,0,0"))
                              (rule "leq_literals" (formula "1") (term "1,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0"))
                              (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0,0"))
                              (rule "qeq_literals" (formula "1") (term "1,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "allLeft" (formula "6") (inst "t=diff_0"))
                              (rule "replaceKnownSelect_taclet101_0" (formula "6") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet101_1" (formula "6") (term "0,1"))
                              (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "allLeft" (formula "6") (inst "t=j_0"))
                              (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,1,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "6") (term "0,1,0"))
                              (rule "leq_literals" (formula "6") (term "1,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "6") (term "0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_5"))
                              (rule "simplifySelectOfAnon" (formula "6"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "allLeft" (formula "15") (inst "t=diff_0"))
                              (rule "replaceKnownSelect_taclet011110101_4" (formula "15") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet011110101_5" (formula "15") (term "0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "15") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0"))
                              (rule "leq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "4"))
                              (rule "leq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "allLeft" (formula "15") (inst "t=j_0"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,1,0"))
                              (rule "leq_literals" (formula "15") (term "1,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_6"))
                              (rule "simplifySelectOfAnon" (formula "15"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "hideAuxiliaryEq" (formula "15"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "allLeft" (formula "1") (inst "t=j_0"))
                              (rule "replaceKnownSelect_taclet0011110101_6" (formula "1") (term "1,0,0,0,0,0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_6" (formula "1") (term "1,0,0,0,0,0,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0011110101_8" (formula "1") (term "1,1,0,0,0,0,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0011110101_8" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_7" (formula "1") (term "1,0,0,0,0,0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_7" (formula "1") (term "1,0,0,0,0,0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_9" (formula "1") (term "1,1,0,0,0,0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_9" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_6" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_8" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_7" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_6" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_8" (formula "1") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_9" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_6" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_8" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_6" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_8" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_6" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet0011110101_8" (formula "1") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_7" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_9" (formula "1") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_7" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_9" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_7" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_9" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_7" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0011110101_9" (formula "1") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                              (rule "exLeft" (formula "1") (inst "sk=jv_0"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "9")))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                              (rule "replace_known_left" (formula "6") (term "0,0,0,0,0,0,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "9")))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "9")) (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "0,0,1,0,0,0,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "8")))
                              (rule "replace_known_left" (formula "6") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "19") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "3") (term "1,0,0,0,0,0") (ifseqformula "19") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "19") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "2") (term "1,1,0,0,0,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,1,0,0,0,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "5") (term "1,0,0,0,0,0,0") (ifseqformula "19") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "5") (term "1,1,0,0,0,0,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "4") (term "1,1,0,0,0,0,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "6") (term "1,1,0,0,0,0,0,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "6") (term "1,0,0,0,0,0,0,0") (ifseqformula "19") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "4") (term "1,0,0,0,0,0,0") (ifseqformula "19") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,0,0"))
                              (rule "qeq_literals" (formula "3") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "0,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "2") (term "0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,1,0"))
                              (rule "add_literals" (formula "1") (term "0,1,0"))
                              (rule "leq_literals" (formula "1") (term "1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "5") (term "0,0,1,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "4") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "4") (term "0,0,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "4") (term "0,0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,1,0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,1,0,0"))
                              (rule "leq_literals" (formula "6") (term "1,0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "3") (term "0,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "3") (term "0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "precOfInt" (formula "3") (term "0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                              (rule "add_literals" (formula "2") (term "0,1,0"))
                              (rule "leq_literals" (formula "2") (term "1,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "1") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,1,0"))
                              (rule "add_literals" (formula "5") (term "0,1,0"))
                              (rule "leq_literals" (formula "5") (term "1,0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "4") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "4") (term "0,0,1,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "precOfInt" (formula "4") (term "0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0,0,0"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "6") (term "0,0,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,1,0"))
                              (rule "add_literals" (formula "3") (term "0,1,0"))
                              (rule "leq_literals" (formula "3") (term "1,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "2") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "precOfInt" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "qeq_literals" (formula "1") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "precOfInt" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "5") (term "0,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "5") (term "0,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "precOfInt" (formula "5") (term "0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,1,0"))
                              (rule "add_literals" (formula "4") (term "0,1,0"))
                              (rule "leq_literals" (formula "4") (term "1,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "6") (term "0,0,1,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "precOfInt" (formula "6") (term "0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "4") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "1") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "2") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "3") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "5") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "pullOutSelect" (formula "4") (term "0,0,1,0") (inst "selectSK=arr_7"))
                              (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "7") (term "1,0,1,0,0") (ifseqformula "4"))
                              (rule "simplifySelectOfAnon" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "0,0,1,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "6") (term "0,0,1,0") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "7") (term "1,0,1,0,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "narrowSelectArrayType" (formula "6") (term "1,0,1,0,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "narrowSelectArrayType" (formula "4") (term "0,0,1,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "eqSymm" (formula "4") (term "0,1,0"))
                              (rule "narrowSelectArrayType" (formula "5") (term "0,0,1,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "eqSymm" (formula "5") (term "0,1,0"))
                              (rule "pullOutSelect" (formula "6") (term "0,0,1,0,0") (inst "selectSK=arr_8"))
                              (rule "simplifySelectOfAnon" (formula "6"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "0,0,1,0,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0,0") (ifseqformula "19") (ifseqformula "31"))
                              (rule "inEqSimp_notLeq" (formula "4") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "4") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                              (rule "inEqSimp_notLeq" (formula "2") (term "0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                              (rule "inEqSimp_notLeq" (formula "3") (term "0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                              (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "5") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "5") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                              (rule "commute_or" (formula "1"))
                              (rule "commute_or" (formula "2"))
                              (rule "commute_or" (formula "4") (term "0"))
                              (rule "commute_or" (formula "3"))
                              (rule "commute_or_2" (formula "4"))
                              (rule "commute_or_2" (formula "6") (term "0"))
                              (rule "commute_or_2" (formula "6"))
                              (rule "commute_or" (formula "5") (term "0"))
                              (rule "commute_or_2" (formula "5"))
                              (rule "commute_or" (formula "6") (term "0,0"))
                              (rule "commute_or_2" (formula "6") (term "0"))
                              (rule "cut_direct" (formula "1") (term "0"))
                              (branch "CUT: jv_0 >= 0 TRUE"
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "cut_direct" (formula "2") (term "0"))
                                 (branch "CUT: jv_0 <= j_0 TRUE"
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "4") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "allLeft" (formula "20") (inst "t=jv_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "20") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_9"))
                                    (rule "simplifySelectOfAnon" (formula "20"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
                                    (rule "hideAuxiliaryEq" (formula "20"))
                                    (rule "allLeft" (formula "28") (inst "t=jv_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "allLeft" (formula "11") (inst "t=jv_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "11") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "11") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_10"))
                                    (rule "simplifySelectOfAnon" (formula "11"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "cut_direct" (formula "3") (term "0"))
                                    (branch "CUT: jv_0 <= -1 + j_0 TRUE"
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "allLeft" (formula "15") (inst "t=jv_0"))
                                       (rule "replaceKnownSelect_taclet000011110101_20" (formula "15") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000011110101_21" (formula "15") (term "1,1"))
                                       (rule "replaceKnownSelect_taclet0011110101_14" (formula "15") (term "1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0011110101_15" (formula "15") (term "1,0,0,1"))
                                       (rule "replace_known_left" (formula "15") (term "0,0,0,0,1") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "narrowSelectArrayType" (formula "15") (term "1,0,0,1") (ifseqformula "23") (ifseqformula "32"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_subsumption0" (formula "15") (term "0,0,0,1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,1"))
                                       (rule "qeq_literals" (formula "15") (term "0,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "castDel" (formula "15") (term "0,1"))
                                       (rule "eqSymm" (formula "15") (term "1"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: jv_0 >= diff_0 TRUE"
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1"))
                                          (rule "mul_literals" (formula "15") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                          (rule "allLeft" (formula "5") (inst "t=diff_0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "5") (term "1,1,0,0,0,0,0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "5") (term "1,1,0,0,0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "5") (term "1,1,0,0,0,0,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "5") (term "1,1,0,0,0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "5") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "5") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "5") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "5") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "5") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "5") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "exLeft" (formula "5") (inst "sk=jv_1"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,1,0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "21")))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "21")))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0,0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "21")))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0,0,0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "21")))
                                          (rule "replace_known_left" (formula "10") (term "0,0,0,0,0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "21")))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0,0,0,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "21")) (ifInst ""  (formula "5")))
                                          (rule "true_left" (formula "8"))
                                          (rule "replace_known_left" (formula "10") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "20")))
                                          (rule "narrowSelectArrayType" (formula "5") (term "1,1,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "8") (term "1,1,0,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "7") (term "1,1,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "9") (term "1,1,0,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "1,1,0,0,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "6") (term "1,1,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "6") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "10") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (term "0,1,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (term "0,1,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (term "0,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "5") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (term "0,1,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (term "0,1,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (term "0,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (term "0,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "6") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (term "0,1,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "pullOutSelect" (formula "7") (term "0,0,0") (inst "selectSK=arr_11"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "10") (term "0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "11") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "9") (term "0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "7"))
                                          (rule "simplifySelectOfAnon" (formula "7"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "10") (term "0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "11") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "9") (term "0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "narrowSelectArrayType" (formula "7") (term "0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "5") (term "0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "9") (term "0,0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "0,0,0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "6") (term "0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "8") (term "0,0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "precOfInt" (formula "7") (term "0,0"))
                                          (rule "precOfInt" (formula "5") (term "0,0"))
                                          (rule "precOfInt" (formula "9") (term "0,0,0"))
                                          (rule "precOfInt" (formula "10") (term "0,0,0,0"))
                                          (rule "precOfInt" (formula "6") (term "0,0"))
                                          (rule "precOfInt" (formula "8") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "10") (term "0,0,0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq0" (formula "8") (term "1") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "8") (term "0,0,1"))
                                          (rule "leq_literals" (formula "8") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "notLeft" (formula "8"))
                                          (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=arr_12"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "34") (term "1") (ifseqformula "26") (ifseqformula "36"))
                                          (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_13"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "34") (term "0") (ifseqformula "21") (ifseqformula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "allLeft" (formula "25") (inst "t=jv_1"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_14"))
                                          (rule "simplifySelectOfAnon" (formula "25"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                          (rule "hideAuxiliaryEq" (formula "25"))
                                          (rule "allLeft" (formula "19") (inst "t=jv_1"))
                                          (rule "replaceKnownSelect_taclet00000011110101_24" (formula "19") (term "1,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000011110101_25" (formula "19") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "19") (term "0,0,0,0,1") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "7")))
                                          (rule "narrowSelectArrayType" (formula "19") (term "0,0,1") (ifseqformula "28") (ifseqformula "38"))
                                          (rule "castDel" (formula "19") (term "0,1"))
                                          (rule "eqSymm" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "19"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "close" (formula "37") (ifseqformula "20"))
                                       )
                                       (branch "CUT: jv_0 >= diff_0 FALSE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_geqRight" (formula "31"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "7") (inst "t=diff_0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "7") (term "1,1,0,0,0,0,0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "7") (term "1,1,0,0,0,0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "7") (term "1,1,0,0,0,0,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "7") (term "1,1,0,0,0,0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "7") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "7") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "7") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "7") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "7") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "7") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "7") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet101_2" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "7") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                          (rule "exLeft" (formula "7") (inst "sk=jv_1"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "narrowSelectArrayType" (formula "11") (term "1,1,0,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "12") (term "1,1,0,0,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "1,1,0,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "9") (term "1,1,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "8") (term "1,1,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "7") (term "1,1,0,0,0,0") (ifseqformula "29") (ifseqformula "38"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,1,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (term "1,0,0,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (term "1,0,1,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,1,0,1,0,0,0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0,1,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1,0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,0,1,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "12") (term "0,1,0,1,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (term "1,0,1,0,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1,0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,1,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0,1,0,1,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (term "1,0,0,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (term "1,0,1,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "8") (term "0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,1,0,1,0,0,0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0,1,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,1,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "11") (term "0,0,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (term "0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "12") (term "0,0,1,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (term "1,0,0,0,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (term "1,0,0,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0,1,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1,0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (term "1,0,1,0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0,1,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0,1,0,0,0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0,1,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "7") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (term "0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "8") (term "0,0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "12") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "11") (term "0,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (term "0,1,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "9") (term "0,0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "7") (term "0,0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "12") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (term "0,1,0,0,0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0,0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (term "0,1,0,0,0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "10") (term "0,0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "9") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_11"))
                                          (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "11") (term "0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "13") (term "0,0,0,0,0") (ifseqformula "8"))
                                          (rule "simplifySelectOfAnon" (formula "8"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                          (rule "applyEqReverse" (formula "12") (term "0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEqReverse" (formula "11") (term "0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEqReverse" (formula "10") (term "0,0,0") (ifseqformula "8"))
                                          (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "8"))
                                          (rule "applyEqReverse" (formula "13") (term "0,0,0,0,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "narrowSelectArrayType" (formula "11") (term "0,0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "8") (term "0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "12") (term "0,0,0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "9") (term "0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "7") (term "0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "narrowSelectArrayType" (formula "10") (term "0,0,0,0") (ifseqformula "24") (ifseqformula "38"))
                                          (rule "precOfInt" (formula "11") (term "0,0,0"))
                                          (rule "precOfInt" (formula "8") (term "0,0"))
                                          (rule "precOfInt" (formula "12") (term "0,0,0,0"))
                                          (rule "precOfInt" (formula "9") (term "0,0"))
                                          (rule "precOfInt" (formula "7") (term "0,0"))
                                          (rule "precOfInt" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "12") (term "0,0,0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "10") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "10") (term "0,0,1"))
                                          (rule "leq_literals" (formula "10") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "notLeft" (formula "10"))
                                          (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_12"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "narrowSelectArrayType" (formula "34") (term "1") (ifseqformula "21") (ifseqformula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_13"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "34") (term "0") (ifseqformula "26") (ifseqformula "36"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "allLeft" (formula "19") (inst "t=jv_1"))
                                          (rule "replaceKnownSelect_taclet10000011110101_26" (formula "19") (term "1,0,0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000011110101_27" (formula "19") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "19") (term "1,0,0,0,1") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "7")))
                                          (rule "narrowSelectArrayType" (formula "19") (term "0,0,1") (ifseqformula "27") (ifseqformula "37"))
                                          (rule "castDel" (formula "19") (term "0,1"))
                                          (rule "eqSymm" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_14"))
                                          (rule "simplifySelectOfAnon" (formula "19"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "close" (formula "36") (ifseqformula "20"))
                                       )
                                    )
                                    (branch "CUT: jv_0 <= -1 + j_0 FALSE"
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_leqRight" (formula "30"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "10") (term "0,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEqRigid" (formula "26") (term "0,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "18") (term "0,2,0") (ifseqformula "1"))
                                       (rule "allLeft" (formula "3") (inst "t=diff_0"))
                                       (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "exLeft" (formula "3") (inst "sk=jv_1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,1,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "19")))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "19")))
                                       (rule "replace_known_left" (formula "8") (term "0,0,1,0,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "19")))
                                       (rule "replace_known_left" (formula "7") (term "0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "19")))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
                                       (rule "true_left" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "18")))
                                       (rule "narrowSelectArrayType" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "5") (term "1,1,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "6") (term "1,1,0,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "8") (term "1,1,0,0,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "7") (term "1,1,0,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                       (rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "4") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "6") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0,0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "8") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "4") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "3") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (term "0,1,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (term "0,1,0,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (term "0,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (term "0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (term "0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "5") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (term "0,1,0,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "7") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=arr_11"))
                                       (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "9") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                       (rule "simplifySelectOfAnon" (formula "3"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "5") (term "0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "7") (term "0,0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "4") (term "0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "8") (term "0,0,0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                       (rule "narrowSelectArrayType" (formula "6") (term "0,0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                       (rule "precOfInt" (formula "5") (term "0,0"))
                                       (rule "precOfInt" (formula "7") (term "0,0,0"))
                                       (rule "precOfInt" (formula "3") (term "0,0"))
                                       (rule "precOfInt" (formula "4") (term "0,0"))
                                       (rule "precOfInt" (formula "8") (term "0,0,0,0"))
                                       (rule "precOfInt" (formula "6") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                       (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                       (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                       (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "6") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq0" (formula "6") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,1"))
                                       (rule "leq_literals" (formula "6") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "notLeft" (formula "6"))
                                       (rule "pullOutSelect" (formula "29") (term "1") (inst "selectSK=arr_12"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "29") (term "1") (ifseqformula "22") (ifseqformula "31"))
                                       (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_13"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "29") (term "0") (ifseqformula "18") (ifseqformula "31"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "4") (term "0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0"))
                                       (rule "allLeft" (formula "16") (inst "t=jv_1"))
                                       (rule "replaceKnownSelect_taclet1000011110101_24" (formula "16") (term "1,0,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1000011110101_25" (formula "16") (term "1,0,0,1"))
                                       (rule "replace_known_left" (formula "16") (term "0,0,0,0,1") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "5")))
                                       (rule "narrowSelectArrayType" (formula "16") (term "0,0,1") (ifseqformula "23") (ifseqformula "32"))
                                       (rule "castDel" (formula "16") (term "0,1"))
                                       (rule "eqSymm" (formula "16") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "16") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_14"))
                                       (rule "simplifySelectOfAnon" (formula "16"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                       (rule "close" (formula "31") (ifseqformula "17"))
                                    )
                                 )
                                 (branch "CUT: jv_0 <= j_0 FALSE"
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "4") (inst "t=diff_0"))
                                    (rule "replaceKnownSelect_taclet101_2" (formula "4") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet101_2" (formula "4") (term "1,1,0,0,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "4") (term "1,1,0,0,0,0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "4") (term "1,1,0,0,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet101_2" (formula "4") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "4") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet101_2" (formula "4") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet101_2" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "4") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet101_2" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet101_2" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "exLeft" (formula "4") (inst "sk=jv_1"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,1,0,0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "20")))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0,0,0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                                    (rule "replace_known_left" (formula "9") (term "0,0,0,0,0,0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "20")))
                                    (rule "replace_known_left" (formula "8") (term "0,0,0,0,0,0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "20")))
                                    (rule "replace_known_left" (formula "7") (term "0,0,1,0,0,0,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
                                    (rule "true_left" (formula "7"))
                                    (rule "replace_known_left" (formula "9") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "19")))
                                    (rule "narrowSelectArrayType" (formula "6") (term "1,1,0,0,0,0") (ifseqformula "26") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "26") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "5") (term "1,1,0,0,0,0") (ifseqformula "26") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "9") (term "1,1,0,0,0,0,0,0") (ifseqformula "26") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "7") (term "1,1,0,0,0,0,0") (ifseqformula "26") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "8") (term "1,1,0,0,0,0,0") (ifseqformula "26") (ifseqformula "34"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "4") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (term "0,0,0,0,0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "6") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "8") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (term "0,1,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0,0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "7") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0,0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (term "0,0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "4") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (term "0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (term "0,1,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0,0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "5") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (term "0,1,0,0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (term "0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (term "0,1,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "0,0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (term "0,1,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=arr_9"))
                                    (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "10") (term "0,0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "9") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                    (rule "simplifySelectOfAnon" (formula "4"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "9") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "narrowSelectArrayType" (formula "9") (term "0,0,0,0,0") (ifseqformula "22") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "5") (term "0,0,0") (ifseqformula "22") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "8") (term "0,0,0,0") (ifseqformula "22") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "6") (term "0,0,0") (ifseqformula "22") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "4") (term "0,0,0") (ifseqformula "22") (ifseqformula "34"))
                                    (rule "narrowSelectArrayType" (formula "7") (term "0,0,0,0") (ifseqformula "22") (ifseqformula "34"))
                                    (rule "precOfInt" (formula "9") (term "0,0,0,0"))
                                    (rule "precOfInt" (formula "5") (term "0,0"))
                                    (rule "precOfInt" (formula "8") (term "0,0,0"))
                                    (rule "precOfInt" (formula "6") (term "0,0"))
                                    (rule "precOfInt" (formula "4") (term "0,0"))
                                    (rule "precOfInt" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "9") (term "0,0,0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                    (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                    (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,0,1"))
                                    (rule "leq_literals" (formula "7") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "7") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "notLeft" (formula "7"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_10"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "narrowSelectArrayType" (formula "30") (term "1") (ifseqformula "19") (ifseqformula "32"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                    (rule "mul_literals" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_11"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "30") (term "0") (ifseqformula "23") (ifseqformula "32"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "allLeft" (formula "14") (inst "t=jv_1"))
                                    (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "14") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_12"))
                                    (rule "simplifySelectOfAnon" (formula "14"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "allLeft" (formula "18") (inst "t=jv_1"))
                                    (rule "replaceKnownSelect_taclet100011110101_24" (formula "18") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100011110101_25" (formula "18") (term "1,1"))
                                    (rule "replaceKnownSelect_taclet100011110101_22" (formula "18") (term "1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100011110101_23" (formula "18") (term "1,0,0,1"))
                                    (rule "replace_known_left" (formula "18") (term "1,0,0,0,1") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "5")))
                                    (rule "narrowSelectArrayType" (formula "18") (term "0,0,1") (ifseqformula "25") (ifseqformula "34"))
                                    (rule "castDel" (formula "18") (term "0,1"))
                                    (rule "eqSymm" (formula "18") (term "1"))
                                    (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                              (branch "CUT: jv_0 >= 0 FALSE"
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                                 (rule "true_left" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_geqRight" (formula "25"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "3") (inst "t=diff_0"))
                                 (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,1,0,0"))
                                 (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                 (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet101_2" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet101_3" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "exLeft" (formula "3") (inst "sk=jv_1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,1,0,0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "19")))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "19")))
                                 (rule "replace_known_left" (formula "7") (term "0,0,1,0,0,0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "19")))
                                 (rule "replace_known_left" (formula "6") (term "0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
                                 (rule "true_left" (formula "6"))
                                 (rule "replace_known_left" (formula "7") (term "0,0,1,0,0,0,0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "18")))
                                 (rule "replace_known_left" (formula "8") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "18")))
                                 (rule "narrowSelectArrayType" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "8") (term "1,1,0,0,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "7") (term "1,1,0,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "5") (term "1,1,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "6") (term "1,1,0,0,0,0,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "5") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (term "0,0,0,0,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "5") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "3") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "8") (term "0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (term "0,1,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0,0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (term "0,1,0,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "4") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (term "0,1,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (term "0,0,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "6") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "4") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (term "0,0,0,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "pullOutSelect" (formula "7") (term "0,0,1,0") (inst "selectSK=arr_9"))
                                 (rule "applyEq" (formula "9") (term "1,0,1,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                                 (rule "simplifySelectOfAnon" (formula "7"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "8") (term "0,0,1,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "9") (term "1,0,1,0,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "6") (term "0,0,1,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "eqSymm" (formula "7") (term "0,1,0"))
                                 (rule "narrowSelectArrayType" (formula "8") (term "1,0,1,0,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "25") (ifseqformula "33"))
                                 (rule "eqSymm" (formula "6") (term "0,1,0"))
                                 (rule "pullOutSelect" (formula "7") (term "0,0,0,0") (inst "selectSK=arr_10"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "9") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                 (rule "simplifySelectOfAnon" (formula "7"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "narrowSelectArrayType" (formula "7") (term "0,0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "5") (term "0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "8") (term "0,0,0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "4") (term "0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                 (rule "narrowSelectArrayType" (formula "6") (term "0,0,0,0") (ifseqformula "21") (ifseqformula "33"))
                                 (rule "precOfInt" (formula "7") (term "0,0,0"))
                                 (rule "precOfInt" (formula "5") (term "0,0"))
                                 (rule "precOfInt" (formula "8") (term "0,0,0,0"))
                                 (rule "precOfInt" (formula "3") (term "0,0"))
                                 (rule "precOfInt" (formula "4") (term "0,0"))
                                 (rule "precOfInt" (formula "6") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0"))
                                 (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                 (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                 (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                 (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "6") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "0,0,1"))
                                 (rule "leq_literals" (formula "6") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "notLeft" (formula "6"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "29") (term "0") (ifseqformula "18") (ifseqformula "31"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "3") (term "0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "4") (term "0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0"))
                                 (rule "allLeft" (formula "13") (inst "t=jv_1"))
                                 (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfAnon" (formula "13"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                                 (rule "hideAuxiliaryEq" (formula "13"))
                                 (rule "allLeft" (formula "22") (inst "t=jv_1"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnon" (formula "22"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
                                 (rule "hideAuxiliaryEq" (formula "22"))
                                 (rule "allLeft" (formula "30") (inst "t=jv_1"))
                                 (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "30") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "allLeft" (formula "17") (inst "t=jv_1"))
                                 (rule "replaceKnownSelect_taclet10011110101_24" (formula "17") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10011110101_25" (formula "17") (term "1,1"))
                                 (rule "replaceKnownSelect_taclet10011110101_18" (formula "17") (term "1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10011110101_19" (formula "17") (term "1,0,0,1"))
                                 (rule "replace_known_left" (formula "17") (term "1,0,0,0,1") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "4")))
                                 (rule "narrowSelectArrayType" (formula "17") (term "0,0,1") (ifseqformula "25") (ifseqformula "35"))
                                 (rule "castDel" (formula "17") (term "0,1"))
                                 (rule "eqSymm" (formula "17") (term "1"))
                                 (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "17") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "17"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                           (branch "CUT: a.length >= 1 + j_0 FALSE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "5"))
                              (rule "add_zero_right" (formula "3") (term "1"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1,0"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "4"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "closeFalse" (formula "11"))
                           )
                        )
                        (branch "a.length >= 1 + diff_0 FALSE"
                           (rule "inEqSimp_geqRight" (formula "20"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "19") (term "0,0"))
                           (rule "add_zero_left" (formula "19") (term "0"))
                           (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,1,0"))
                           (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,1,0"))
                           (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,1,0"))
                           (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "1,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "2") (term "0,1,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "2") (term "1,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "2") (term "1,0,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,1,0"))
                           (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "1,0,1,0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "2") (term "1,1,0,1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,0,0,1,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "2") (term "0,0,1,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "1,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,1,0,0,0,1,0"))
                           (rule "shift_paren_and" (formula "2") (term "0,0,1,0,0,0,1,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,0,1,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,1,0"))
                           (rule "ex_pull_out3" (formula "2") (term "0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0"))
                           (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,1,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,1,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (branch "a.length >= 1 TRUE"
                              (rule "replace_known_left" (formula "3") (term "0,1,1,0,1,0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "2"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                              (rule "mul_literals" (formula "3") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "add_zero_left" (formula "3") (term "0"))
                              (rule "cnf_rightDist" (formula "4") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "commute_or_2" (formula "4") (term "1,0,0,0,0,0,0,0,0,0"))
                              (rule "commute_or" (formula "4") (term "0,1,0,0,0,0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "7") (term "1"))
                              (branch "CUT: a.length >= 1 + j_0 TRUE"
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "5"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,0"))
                                 (rule "times_zero_1" (formula "5") (term "0"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,0"))
                                 (rule "times_zero_1" (formula "7") (term "0"))
                                 (rule "leq_literals" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,0,1,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,1,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,1,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,1,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,1,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,1,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,1,0,0,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,1,0,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,1,0,0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,1,0,0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "10") (term "1,1,1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "0,1,1,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "10") (term "1,1,0,0,0,1,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,1,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,1,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,1,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,1,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,1,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,1,0,0,0,0,0,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "6"))
                                 (rule "inEqSimp_invertInEq0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "times_zero_2" (formula "3") (term "1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "leq_literals" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                              (branch "CUT: a.length >= 1 + j_0 FALSE"
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_geqRight" (formula "21"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "7"))
                                 (rule "add_zero_right" (formula "6") (term "1"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "9"))
                                 (rule "times_zero_2" (formula "9") (term "1,0"))
                                 (rule "add_zero_right" (formula "9") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                 (rule "times_zero_2" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "closeFalse" (formula "9"))
                              )
                           )
                           (branch "a.length >= 1 FALSE"
                              (rule "replace_known_right" (formula "2") (term "0,1,1,0,1,0,0,0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                              (rule "inEqSimp_geqRight" (formula "21"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "3") (term "1,1,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "20"))
                              (rule "seqDef_lower_equals_upper" (formula "14") (term "1"))
                              (rule "seqPermEmpty2" (formula "14"))
                              (rule "eqSymm" (formula "14"))
                              (rule "eqSeqEmpty" (formula "14"))
                              (rule "lenOfSeqDef" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                              (rule "times_zero_2" (formula "14") (term "1,0,1"))
                              (rule "add_zero_right" (formula "14") (term "0,1"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "19"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "times_zero_2" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "19"))
                              (rule "seqDef_lower_equals_upper" (formula "12") (term "1"))
                              (rule "seqPermEmpty2" (formula "12"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSeqEmpty" (formula "12"))
                              (rule "lenOfSeqDef" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                              (rule "times_zero_2" (formula "12") (term "1,0,1"))
                              (rule "add_zero_right" (formula "12") (term "0,1"))
                              (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "3") (term "1,1,1,1,0,0,0,0,0,0,0") (ifseqformula "18"))
                              (rule "add_zero_right" (formula "3") (term "1,1,1,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "18"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "3") (term "1,1,1,1,0,0,0,0,0") (ifseqformula "18"))
                              (rule "add_zero_right" (formula "3") (term "1,1,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                              (rule "times_zero_2" (formula "6") (term "1,0,1"))
                              (rule "add_zero_right" (formula "6") (term "0,1"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "18"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "18"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,1,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "18"))
                              (rule "add_zero_right" (formula "3") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "10") (term "1,1,1,0,0,0,1,0") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "10") (term "1,1,0,0,0,1,0"))
                              (rule "applyEq" (formula "2") (term "1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "2") (term "1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "2") (term "1,1,1,0,1,0,0,0,0,0,0,1,0,0") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,0,0,0,0,0,1,0,0"))
                              (rule "applyEq" (formula "2") (term "1,1,1,0,1,0,0,0,0,0,1,0,0,0") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,0,0,0,0,1,0,0,0"))
                              (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "2") (term "1,1,1,1,0,0,0") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "2") (term "1,1,1,0,0,0"))
                              (rule "applyEq" (formula "2") (term "1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "17"))
                              (rule "add_zero_right" (formula "2") (term "1,1,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,0,0,1,0,0,0,0,1,0,0") (ifseqformula "16"))
                              (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,1,0,0,0,0,1,0,0"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "16"))
                              (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "16"))
                              (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "3") (term "0,1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "times_zero_2" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Null Reference (_a = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if x_2 false"
       (builtin "One Step Simplification" (formula "11"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "11") (term "0,0,0,1,1,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "applyEqRigid" (formula "11") (term "0,1,0,0,1,0") (ifseqformula "1"))
      (rule "blockBreak" (formula "11") (term "1"))
      (rule "lsBreak" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (rule "tryEmpty" (formula "11") (term "1"))
      (rule "emptyModality" (formula "11") (term "1"))
      (rule "andRight" (formula "11"))
      (branch
         (rule "impRight" (formula "11"))
         (rule "andRight" (formula "12"))
         (branch
            (rule "andRight" (formula "12"))
            (branch
               (rule "andRight" (formula "12"))
               (branch
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "1"))
                  (rule "allRight" (formula "11") (inst "sk=i_0"))
                  (rule "impRight" (formula "11"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "nnf_imp2or" (formula "6") (term "0"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_notAnd" (formula "6") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                  (rule "commute_or" (formula "6") (term "0,0"))
                  (rule "commute_or" (formula "7") (term "0,0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "arrayLengthNotNegative" (formula "5") (term "1,1"))
                  (rule "arrayLengthIsAShort" (formula "6") (term "1,1"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "allLeft" (formula "7") (inst "t=add(Z(1(#)), i_0)"))
                  (rule "replaceKnownSelect_taclet000011_0" (formula "7") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000011_1" (formula "7") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "7") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,0"))
                  (rule "leq_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "7") (term "0,0"))
                  (rule "add_zero_left" (formula "7") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "allLeft" (formula "9") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet000011_2" (formula "9") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000011_3" (formula "9") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                  (rule "inEqSimp_subsumption1" (formula "9") (term "1") (ifseqformula "7"))
                  (rule "leq_literals" (formula "9") (term "0,1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "allLeft" (formula "10") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet000011_2" (formula "10") (term "1,1"))
                  (rule "replaceKnownSelect_taclet000011_0" (formula "10") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000011_3" (formula "10") (term "1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000011_1" (formula "10") (term "0,1"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "10") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0"))
                  (rule "leq_literals" (formula "10") (term "0,0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                  (rule "andLeft" (formula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,1,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0"))
                  (rule "add_zero_right" (formula "10") (term "0"))
                  (rule "leq_literals" (formula "10"))
                  (rule "closeFalse" (formula "10"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "1"))
                  (rule "narrowSelectArrayType" (formula "11") (term "2,0") (ifseqformula "6") (ifseqformula "10"))
                  (rule "close" (formula "11") (ifseqformula "2"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "closeTrue" (formula "12"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "1"))
            (rule "allRight" (formula "11") (inst "sk=f_0"))
            (rule "allRight" (formula "11") (inst "sk=o_0"))
            (rule "orRight" (formula "11"))
            (rule "orRight" (formula "11"))
            (rule "eqSymm" (formula "13"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
            (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
            (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")))
            (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "closeTrue" (formula "14"))
         )
      )
      (branch
         (rule "impRight" (formula "11"))
         (rule "andRight" (formula "12"))
         (branch
            (rule "andRight" (formula "12"))
            (branch
               (rule "andRight" (formula "12"))
               (branch
                  (rule "andRight" (formula "12"))
                  (branch
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch
                  (rule "impRight" (formula "12"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
)
}
