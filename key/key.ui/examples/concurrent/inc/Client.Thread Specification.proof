\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 21 14:28:18 CEST 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , moreSeqRules-moreSeqRules\\:off , concurrency-concurrency\\:RG , permissions-permissions\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Jul 21 14:28:18 CEST 2015
threadSpec=JML Thread Specification for Client
name=Client.Thread Specification
class=de.uka.ilkd.key.proof.init.GuaranteePO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "490180974")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
(builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0,0,1"))
(rule "polySimp_pullOutFactor1" (formula "7") (term "0,0,0,0,0,1"))
(rule "add_literals" (formula "7") (term "1,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "7") (term "0,0,0,0,0,1"))
(rule "leq_literals" (formula "7") (term "0,0,0,0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "nnf_imp2or" (formula "7") (term "0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0,1"))
(rule "andRight" (formula "7"))
(branch "Case 1"
   (rule "impRight" (formula "7"))
   (rule "methodCallUnfoldTarget" (formula "8") (inst "#v0=r"))
   (rule "variableDeclaration" (formula "8") (newnames "r"))
   (rule "assignment_read_final_attribute" (formula "8"))
   (branch "Normal Execution (thread != null)"
      (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "6")))
      (rule "true_left" (formula "5"))
      (rule "methodCall" (formula "8"))
      (branch "Normal Execution (r != null )"
         (rule "ifElseSplit" (formula "8"))
         (branch "if r instanceof Client true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "2")))
            (rule "true_left" (formula "1"))
            (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_run,savedHeapBefore_run"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "methodCallWithinClass" (formula "8") (term "1"))
            (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_check,savedHeapBefore_check"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "variableDeclarationAssign" (formula "8") (term "1"))
            (rule "variableDeclaration" (formula "8") (term "1") (newnames "m"))
            (rule "activeUseStaticFieldReadAccess" (formula "8") (term "1"))
            (rule "Rely_Inc_assignmentReadStaticAttributeWithVariablePrefixUpdate" (formula "8"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "pullOutSelect" (formula "8") (term "0,1,1,0") (inst "selectSK=Inc_X_3"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "variableDeclarationAssign" (formula "9") (term "1"))
            (rule "variableDeclaration" (formula "9") (term "1") (newnames "n"))
            (rule "activeUseStaticFieldReadAccess" (formula "9") (term "1"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "9") (term "0,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "Rely_Inc_assignmentReadStaticAttributeWithVariablePrefix" (formula "8"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "pullOutSelect" (formula "8") (term "0,1,1,0") (inst "selectSK=Inc_X_4"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "1") (term "2,0"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "9") (term "0,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "8") (term "1"))
            (rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
            (rule "less_equal_than_comparison_simple" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0"))
            (rule "qeq_literals" (formula "8") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "methodCallReturnIgnoreResult" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "methodCallEmpty" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "tryEmpty" (formula "8") (term "1"))
            (rule "methodCallEmpty" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "Rely_Client_EmptyModality" (formula "8") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "closeTrue" (formula "9"))
         )
         (branch "if r instanceof Client false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "2")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (r = null)"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (thread = null)"
      (rule "close" (formula "7") (ifseqformula "1"))
   )
)
(branch "Case 2"
   (rule "allRight" (formula "7") (inst "sk=heap_2_0"))
   (rule "allRight" (formula "7") (inst "sk=heap_1_0"))
   (rule "allRight" (formula "7") (inst "sk=heap_0_0"))
   (rule "orRight" (formula "7"))
   (rule "orRight" (formula "7"))
   (rule "inEqSimp_geqRight" (formula "9"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "inEqSimp_leqRight" (formula "9"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "inEqSimp_leqRight" (formula "9"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1"))
   (rule "polySimp_rightDist" (formula "3") (term "1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
   (rule "mul_literals" (formula "3") (term "0,1"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1"))
   (rule "polySimp_elimOne" (formula "2") (term "1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
   (rule "polySimp_elimOne" (formula "1") (term "1"))
   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Inc_X_0"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
   (rule "inEqSimp_commuteGeq" (formula "2"))
   (rule "inEqSimp_homoInEq0" (formula "4"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1"))
   (rule "polySimp_rightDist" (formula "4") (term "1"))
   (rule "mul_literals" (formula "4") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Inc_X_1"))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
   (rule "inEqSimp_commuteGeq" (formula "2"))
   (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Inc_X_2"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
   (rule "mul_literals" (formula "6") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
   (rule "polySimp_mulComm0" (formula "6") (term "1"))
   (rule "polySimp_rightDist" (formula "6") (term "1"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
   (rule "mul_literals" (formula "6") (term "0,1"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
   (rule "andLeft" (formula "6"))
   (rule "inEqSimp_homoInEq1" (formula "6"))
   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
   (rule "add_literals" (formula "6") (term "1,1,0"))
   (rule "times_zero_1" (formula "6") (term "1,0"))
   (rule "add_zero_right" (formula "6") (term "0"))
   (rule "leq_literals" (formula "6"))
   (rule "closeFalse" (formula "6"))
)
)

}
