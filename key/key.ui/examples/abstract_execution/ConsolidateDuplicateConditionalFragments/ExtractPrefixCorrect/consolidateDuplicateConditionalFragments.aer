<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:aeRelationalModel xmlns:ns2="http://www.key-project.org/abstractexecution" preCondition="" postCondition="\result_1==\result_2">
    <programOne>/*@ ae_constraint \disjoint(frameE, footprintP) &amp;&amp;
  @               \disjoint(frameP, footprintE) &amp;&amp;
  @               \disjoint(frameP, frameE) &amp;&amp;
  @               \disjoint(frameE, relevant) &amp;&amp;
  @               \disjoint(frameP, relevant) &amp;&amp;
  @               \mutex(throwsExcE(\value(footprintE)),
  @                      throwsExcP(\value(footprintP)),
  @                      returnsP(\value(footprintP)));
  @*/








if (
    /*@ assignable frameE;
      @ accessible footprintE;
      @ exceptional_behavior requires throwsExcE(\value(footprintE));
      @*/
    \abstract_expression boolean e
) {
    /*@ assignable frameP;
      @ accessible footprintP;
      @ exceptional_behavior requires throwsExcP(\value(footprintP));
      @ return_behavior requires returnsP(\value(footprintP));
      @*/
    \abstract_statement P;
    
    //@ assignable frameQ1;
    //@ accessible footprintQ1;
    \abstract_statement Q1;
}
else {
    /*@ assignable frameP;
      @ accessible footprintP;
      @ exceptional_behavior requires throwsExcP(\value(footprintP));
      @ return_behavior requires returnsP(\value(footprintP));
      @*/
    \abstract_statement P;
    
    //@ assignable frameQ2;
    //@ accessible footprintQ2;
    \abstract_statement Q2;
}</programOne>
    <programTwo>/*@ ae_constraint \disjoint(frameE, footprintP) &amp;&amp;
  @               \disjoint(frameP, footprintE) &amp;&amp;
  @               \disjoint(frameP, frameE) &amp;&amp;
  @               \disjoint(frameE, relevant) &amp;&amp;
  @               \disjoint(frameP, relevant) &amp;&amp;
  @               \mutex(throwsExcE(\value(footprintE)),
  @                      throwsExcP(\value(footprintP)),
  @                      returnsP(\value(footprintP)));
  @*/

/*@ assignable frameP;
  @ accessible footprintP;
  @ exceptional_behavior requires throwsExcP(\value(footprintP));
  @ return_behavior requires returnsP(\value(footprintP));
  @*/
\abstract_statement P;

if (
    /*@ assignable frameE;
      @ accessible footprintE;
      @ exceptional_behavior requires throwsExcE(\value(footprintE));
      @*/
    \abstract_expression boolean e
) {






    
    //@ assignable frameQ1;
    //@ accessible footprintQ1;
    \abstract_statement Q1;
}
else {






    
    //@ assignable frameQ2;
    //@ accessible footprintQ2;
    \abstract_statement Q2;
}</programTwo>
    <methodLevelContext></methodLevelContext>
    <locationSets>
        <locationSet funcName="relevant">
            <relevantOne>0</relevantOne>
            <relevantTwo>0</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="frameP">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="footprintP">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="frameE">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="footprintE">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="frameQ1">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="footprintQ1">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="frameQ2">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
        <locationSet funcName="footprintQ2">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        <resultSortName>LocSet</resultSortName></locationSet>
    </locationSets>
    <functions/>
    <predicates>
        <predicate predName="throwsExcP">
            <argSort>any</argSort>
        </predicate>
        <predicate predName="throwsExcE">
            <argSort>any</argSort>
        </predicate>
        <predicate predName="returnsP">
            <argSort>any</argSort>
        </predicate>
    </predicates>
    <programVariables/>
</ns2:aeRelationalModel>
