<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:aeRelationalModel xmlns:ns2="http://www.key-project.org/abstractexecution" postCondition="\result_1=\result_2">
    <programOne>/*@ ae_constraint \disjoint(frameE, footprintP) &amp;&amp;
  @               \disjoint(frameP, footprintE) &amp;&amp;
  @               \disjoint(frameP, frameE) &amp;&amp;
  @               \disjoint(frameE, relevant) &amp;&amp;
  @               \disjoint(frameP, relevant) &amp;&amp;
  @               \mutex(throwsExcE(\value(footprintE)),
  @                      throwsExcP(\value(footprintP)),
  @                      returnsP(\value(footprintP)));
  @*/
{ ; }

if (
    /*@ assignable frameE;
      @ accessible footprintE;
      @ exceptional_behavior requires throwsExcE(\value(footprintE));
      @*/
    \abstract_expression boolean e
) {
    /*@ assignable frameP;
      @ accessible footprintP;
      @ exceptional_behavior requires throwsExcP(\value(footprintP));
      @ return_behavior requires returnsP(\value(footprintP));
      @*/
    \abstract_statement P;
    
    //@ assignable frameQ1;
    //@ accessible footprintQ1;
    \abstract_statement Q1;
}
else {
    /*@ assignable frameP;
      @ accessible footprintP;
      @ exceptional_behavior requires throwsExcP(\value(footprintP));
      @ return_behavior requires returnsP(\value(footprintP));
      @*/
    \abstract_statement P;
    
    //@ assignable frameQ2;
    //@ accessible footprintQ2;
    \abstract_statement Q2;
}

return result;</programOne>
    <programTwo>/*@ ae_constraint \disjoint(frameE, footprintP) &amp;&amp;
  @               \disjoint(frameP, footprintE) &amp;&amp;
  @               \disjoint(frameP, frameE) &amp;&amp;
  @               \disjoint(frameE, relevant) &amp;&amp;
  @               \disjoint(frameP, relevant) &amp;&amp;
  @               \mutex(throwsExcE(\value(footprintE)),
  @                      throwsExcP(\value(footprintP)),
  @                      returnsP(\value(footprintP)));
  @*/
{ ; }

/*@ assignable frameP;
  @ accessible footprintP;
  @ exceptional_behavior requires throwsExcP(\value(footprintP));
  @ return_behavior requires returnsP(\value(footprintP));
  @*/
\abstract_statement P;

if (
    /*@ assignable frameE;
      @ accessible footprintE;
      @ exceptional_behavior requires throwsExcE(\value(footprintE));
      @*/
    \abstract_expression boolean e
) {
    //@ assignable frameQ1;
    //@ accessible footprintQ1;
    \abstract_statement Q1;
}
else {
    //@ assignable frameQ2;
    //@ accessible footprintQ2;
    \abstract_statement Q2;
}

return result;</programTwo>
    <locationSets>
        <locationSet locsetName="relevant"/>
        <locationSet locsetName="frameP"/>
        <locationSet locsetName="footprintP"/>
        <locationSet locsetName="frameE"/>
        <locationSet locsetName="footprintE"/>
        <locationSet locsetName="frameQ1"/>
        <locationSet locsetName="footprintQ1"/>
        <locationSet locsetName="frameQ2"/>
        <locationSet locsetName="footprintQ2"/>
    </locationSets>
    <predicates>
        <predicate predName="Post">
            <argSort>any</argSort>
        </predicate>
        <predicate predName="throwsExcP">
            <argSort>any</argSort>
        </predicate>
        <predicate predName="throwsExcE">
            <argSort>any</argSort>
        </predicate>
        <predicate predName="returnsP">
            <argSort>any</argSort>
        </predicate>
    </predicates>
    <programVariables>
        <programVariable typeName="java.lang.Object" varName="result"/>
    </programVariables>
    <relevantVarsOne>
        <locationSet locsetName="relevant"/>
    </relevantVarsOne>
    <relevantVarsTwo>
        <locationSet locsetName="relevant"/>
    </relevantVarsTwo>
</ns2:aeRelationalModel>
