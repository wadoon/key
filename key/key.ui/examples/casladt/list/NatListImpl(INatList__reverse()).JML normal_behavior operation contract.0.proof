\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Mar 10 15:47:40 CET 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , floatRules-floatRules\\:strictfpOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=1000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\include "reverse.key",  "additional-proofs.key";

\proofObligation "#Proof Obligation Settings
#Thu Mar 10 15:47:40 CET 2022
contract=NatListImpl[INatList\\:\\:reverse()].JML normal_behavior operation contract.0
name=NatListImpl[INatList\\:\\:reverse()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "hannes" ) (keyVersion "6bf67feba6"))
(keyLog "1" (keyUser "hannes" ) (keyVersion "6bf67feba6"))

(autoModeTime "10059")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "Class_invariant_axiom_for_NatListImpl" (formula "5") (inst "x=x") (inst "x_0=x_0") (ifseqformula "3"))
 (builtin "One Step Simplification" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "7") (term "1,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
(rule "nonNull" (formula "5") (inst "i=i"))
(rule "sub_literals" (formula "5") (term "2,1,0,1,1"))
 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "10")))
(rule "greater_literals" (formula "5") (term "0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "narrowSelectArrayType" (formula "5") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "commute_and" (formula "7") (term "0,0"))
(rule "commute_and" (formula "6") (term "0,0"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_reverse,savedHeapBefore_reverse"))
 (builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "a_"))
(rule "arrayCreation" (formula "11") (term "1") (inst "#v0=n_arr"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "n_arr"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "dim0"))
(rule "eval_order_array_access6" (formula "11") (term "1") (inst "#v0=n_arr_1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "n_arr_1"))
(rule "assignment_read_attribute_this" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "assignment_read_length" (formula "11"))
(branch "Normal Execution (n_arr_1 != null)"
    (builtin "One Step Simplification" (formula "11"))
   (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "ifSplit" (formula "11"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "blockThrow" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "throwUnfold" (formula "12") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "n"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "1"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "2"))
      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "instanceCreationAssignment" (formula "13") (term "1") (inst "#v0=n_1"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "n_1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=n_2"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "n_2"))
      (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "__NEW__"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=n_3"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "n_3"))
      (rule "allocateInstance" (formula "13"))
       (builtin "One Step Simplification" (formula "14"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "2"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "16") (term "1"))
      (rule "assignment" (formula "16") (term "1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "assignment_write_attribute_this" (formula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallWithinClass" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "blockEmpty" (formula "16") (term "1"))
      (rule "assignment_write_attribute_this" (formula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "assignment_write_attribute_this" (formula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "blockEmpty" (formula "16") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "16") (term "1"))
      (rule "methodCallReturn" (formula "16") (term "1"))
      (rule "assignment" (formula "16") (term "1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "blockEmpty" (formula "16") (term "1"))
      (rule "assignment" (formula "16") (term "1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallSuper" (formula "16") (term "1"))
      (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "blockEmpty" (formula "16") (term "1"))
      (rule "assignment_write_attribute_this" (formula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "assignment_write_attribute_this" (formula "16"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "blockEmpty" (formula "16") (term "1"))
      (rule "assignment_write_attribute" (formula "16"))
      (branch "Normal Execution (n_1 != null)"
          (builtin "One Step Simplification" (formula "16"))
         (rule "assignment" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallThrow" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "tryCatchThrow" (formula "16") (term "1"))
         (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_1"))
         (rule "equality_comparison_simple" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "ifElseSplit" (formula "16"))
         (branch "if x_1 true"
             (builtin "One Step Simplification" (formula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
             (builtin "One Step Simplification" (formula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "elim_double_block" (formula "16") (term "1"))
            (rule "ifElseSplit" (formula "16"))
            (branch "if n instanceof java.lang.Throwable true"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "e"))
               (rule "delete_unnecessary_cast" (formula "16") (term "1"))
                (builtin "One Step Simplification" (formula "17"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "16") (term "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "emptyModality" (formula "16") (term "1"))
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "andRight" (formula "16"))
                  (branch "Case 1"
                     (rule "andRight" (formula "16"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")))
                     (rule "false_right" (formula "16"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "allRight" (formula "16") (inst "sk=f_0"))
                  (rule "allRight" (formula "16") (inst "sk=o_0"))
                  (rule "orRight" (formula "16"))
                  (rule "orRight" (formula "16"))
                  (rule "eqSymm" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "if n instanceof java.lang.Throwable false"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (n_1 = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "12"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,1") (ifseqformula "1"))
      (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=n_arr_1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "n_arr_2"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=n_arr_3"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "n_arr_3"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "allocateInstanceWithLength" (formula "13"))
       (builtin "One Step Simplification" (formula "14"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "eqSymm" (formula "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "8") (term "1,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "1"))
      (rule "arrayLengthIsAnInt" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCall" (formula "17"))
      (branch "Normal Execution (newObject != null )"
         (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "assignment_write_attribute_this" (formula "17"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "methodCallWithinClass" (formula "17") (term "1"))
         (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "arrayInitialisation" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "polySimp_elimSub" (formula "17") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "17") (term "2,1,0,1,0"))
         (rule "methodCallEmpty" (formula "17") (term "1"))
         (rule "blockEmpty" (formula "17") (term "1"))
         (rule "assignment_write_attribute_this" (formula "17"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "methodCallReturnIgnoreResult" (formula "17") (term "1"))
         (rule "blockEmpty" (formula "17") (term "1"))
         (rule "methodCallReturn" (formula "17") (term "1"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "methodCallEmpty" (formula "17") (term "1"))
         (rule "blockEmpty" (formula "17") (term "1"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "blockEmpty" (formula "17") (term "1"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "for_to_while" (formula "17") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "elim_double_block_3" (formula "17") (term "1"))
          (builtin "Loop Invariant" (formula "17") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (rule "andRight" (formula "17"))
            (branch "Case 1"
               (rule "andRight" (formula "17"))
               (branch "Case 1"
                  (rule "andRight" (formula "17"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "leq_literals" (formula "17"))
                     (rule "closeTrue" (formula "17"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                     (rule "inEqSimp_ltRight" (formula "14"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "16"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=NatListImpl_a_0"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                     (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "translateJavaSubInt" (formula "17") (term "0,2,1,1,0"))
                  (rule "translateJavaSubInt" (formula "17") (term "0,0,2,1,1,0"))
                  (rule "allRight" (formula "17") (inst "sk=l_0"))
                  (rule "impRight" (formula "17"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_elimSub" (formula "19") (term "0,2,1"))
                  (rule "mul_literals" (formula "19") (term "1,0,2,1"))
                  (rule "polySimp_elimSub" (formula "19") (term "0,0,2,1"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,2,1"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0,2,1"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,2,1"))
                  (rule "dismissNonSelectedField" (formula "19") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "16"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1"))
                  (rule "applyEq" (formula "18") (term "1,0,2,1") (ifseqformula "3"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "17"))
               (rule "wellFormedStorePrimitive" (formula "17"))
               (rule "inEqSimp_ltRight" (formula "14"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
               (rule "wellFormedMemsetArrayObject" (formula "16"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "wellFormedStorePrimitive" (formula "16"))
               (rule "wellFormedStorePrimitive" (formula "16"))
               (rule "wellFormedStorePrimitive" (formula "16"))
               (rule "wellFormedCreate" (formula "16"))
               (rule "close" (formula "16") (ifseqformula "3"))
            )
         )
         (branch "Body Preserves Invariant"
             (builtin "One Step Simplification" (formula "13"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "translateJavaSubInt" (formula "13") (term "0,2,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "19") (term "0,2,1,1,0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "13") (term "0,0,2,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "19") (term "0,0,2,1,1,0,1,0,0,1,1,0,1,1"))
            (rule "andLeft" (formula "13"))
            (rule "impRight" (formula "20"))
            (rule "andLeft" (formula "14"))
            (rule "eqSymm" (formula "16") (term "1,0"))
            (rule "eqSymm" (formula "22") (term "1,0,1,0,0,1,1,0,1"))
            (rule "eqSymm" (formula "22") (term "1,0,0,1,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "16") (term "0,2,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,2,0,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "0,2,0,1,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "22") (term "1,0,2,0,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "16") (term "0,0,2,0,1,0"))
            (rule "polySimp_elimSub" (formula "22") (term "0,0,2,0,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "16") (term "0,2,0,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,2,0,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "16") (term "0,0,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "22") (term "0,0,2,0,1,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "14"))
            (rule "inEqSimp_commuteLeq" (formula "15"))
            (rule "pullOutSelect" (formula "22") (term "0,1,0,1,1,1,0") (inst "selectSK=NatListImpl_a_0"))
            (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "variableDeclarationAssign" (formula "2") (term "1"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "2") (term "1") (newnames "b_1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "exc_25"))
            (rule "assignment" (formula "23") (term "1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "thrownExc"))
            (rule "applyEq" (formula "17") (term "1,0,0,2,0,1,0") (ifseqformula "3"))
            (rule "blockThrow" (formula "23") (term "1,0,0,1"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=NatListImpl_a_1"))
            (rule "simplifySelectOfMemset" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "23") (term "0,1,0,1,1,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "applyEq" (formula "22") (term "1,0,1,1,1,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
            (rule "boxToDiamond" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "commute_and" (formula "15") (term "0,0"))
            (rule "compound_less_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_2"))
            (rule "assignment" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_1"))
            (rule "eval_order_access2" (formula "16") (term "1") (inst "#v0=n_arr"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "n_arr_4"))
            (rule "assignment_read_attribute_this" (formula "16"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "replaceKnownSelect_taclet1010_0" (formula "16") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_10" (formula "16") (term "0,1,0"))
            (rule "assignment_read_length" (formula "16"))
            (branch "Normal Execution (n_arr_4 != null)"
                (builtin "One Step Simplification" (formula "16"))
               (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
               (rule "less_than_comparison_simple" (formula "16") (term "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "methodCallEmpty" (formula "16") (term "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "emptyModality" (formula "16") (term "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "notRight" (formula "16"))
               (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_3"))
               (rule "compound_less_than_comparison_2" (formula "22") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_4"))
               (rule "assignment" (formula "22") (term "1"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_5"))
               (rule "eval_order_array_access6" (formula "22") (term "1") (inst "#v0=n_arr"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "n_arr_5"))
               (rule "assignment_read_attribute_this" (formula "22"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "replaceKnownSelect_taclet1010_0" (formula "22") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1010_10" (formula "22") (term "0,1,0"))
               (rule "assignment_read_length" (formula "22"))
               (branch "Normal Execution (n_arr_5 != null)"
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "2"))
                  (rule "less_than_comparison_simple" (formula "22") (term "1"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "ifSplit" (formula "22"))
                  (branch "if x_3 true"
                      (builtin "One Step Simplification" (formula "23"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "eval_order_array_access3" (formula "22") (term "1") (inst "#v1=n") (inst "#v2=x") (inst "#v0=n_arr"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "n_arr_6"))
                     (rule "assignment" (formula "22") (term "1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_6"))
                     (rule "assignment" (formula "22") (term "1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "n"))
                     (rule "eval_order_array_access4" (formula "22") (term "1") (inst "#v0=n_arr_7"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "n_arr_7"))
                     (rule "assignment_read_attribute_this" (formula "22"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "replaceKnownSelect_taclet1010_0" (formula "22") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_10" (formula "22") (term "0,1,0"))
                     (rule "eval_order_array_access5" (formula "22") (term "1") (inst "#v1=x_7") (inst "#ar1=n_arr_8"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "n_arr_8"))
                     (rule "assignment" (formula "22") (term "1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_7"))
                     (rule "compound_subtraction_1" (formula "22") (term "1") (inst "#v=x_8"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_8"))
                     (rule "compound_subtraction_1" (formula "22") (term "1") (inst "#v=x_9"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_9"))
                     (rule "eval_order_array_access6" (formula "22") (term "1") (inst "#v0=n_arr_9"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "n_arr_9"))
                     (rule "assignment_read_attribute_this" (formula "22"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "replaceKnownSelect_taclet1010_0" (formula "22") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1010_10" (formula "22") (term "0,1,0"))
                     (rule "assignment_read_length" (formula "22"))
                     (branch "Normal Execution (n_arr_9 != null)"
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "2"))
                        (rule "assignmentSubtractionInt" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaSubInt" (formula "22") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                        (rule "assignmentSubtractionInt" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaSubInt" (formula "22") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "22") (term "0,1,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                        (rule "assignment_array2" (formula "22"))
                        (branch "Normal Execution (n_arr_8 != null)"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "assignment_to_reference_array_component" (formula "23"))
                           (branch "Normal Execution (n_arr_6 != null)"
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "blockEmpty" (formula "23") (term "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "postincrement" (formula "24") (term "1"))
                              (rule "compound_int_cast_expression" (formula "24") (term "1") (inst "#v=x"))
                              (rule "variableDeclarationAssign" (formula "24") (term "1"))
                              (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_10"))
                              (rule "remove_parentheses_right" (formula "24") (term "1"))
                              (rule "assignmentAdditionInt" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "translateJavaAddInt" (formula "24") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "24") (term "1"))
                              (rule "assignment" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "tryEmpty" (formula "24") (term "1"))
                              (rule "methodCallEmpty" (formula "24") (term "1"))
                              (rule "emptyModality" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "andRight" (formula "24"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "24"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "24"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "24"))
                                       (branch "Case 1"
                                          (rule "inEqSimp_geqRight" (formula "24"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltRight" (formula "22"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                          (rule "times_zero_2" (formula "2") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0"))
                                          (rule "qeq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "dismissNonSelectedField" (formula "24") (term "0,0"))
                                          (rule "replaceKnownSelect_taclet1010_0" (formula "24") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1010_10" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_ltRight" (formula "21"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "23"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0"))
                                          (rule "qeq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "24") (inst "sk=l_0"))
                                       (rule "impRight" (formula "24"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "26"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,2,1"))
                                       (rule "inEqSimp_ltRight" (formula "23"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1,0,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0,1,0,0"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "25") (term "1,0,2,1") (ifseqformula "6"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "25"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                       (rule "times_zero_1" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "nnf_imp2or" (formula "20") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "14") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "commute_or" (formula "15") (term "0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "self.a = n_arr_3 TRUE"
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "22") (ifseqformula "4") (ifseqformula "23"))
                                          (rule "close" (formula "22") (ifseqformula "10"))
                                       )
                                       (branch "self.a = n_arr_3 FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "allLeft" (formula "13") (inst "t=add(add(Z(neglit(1(#))), mul(i_0, Z(neglit(1(#))))),
    length(n_arr_3))"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
                                          (rule "mul_literals" (formula "13") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "13") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "13") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "notLeft" (formula "13"))
                                          (rule "allLeft" (formula "12") (inst "t=add(add(Z(neglit(1(#))), mul(i_0, Z(neglit(1(#))))),
    length(n_arr_3))"))
                                          (rule "eqSymm" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1"))
                                          (rule "mul_literals" (formula "12") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "12") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "12") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "l_0 = i_0 TRUE"
                                             (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "24") (term "0,1,0,0,2,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "closeTrue" (formula "24"))
                                          )
                                          (branch "l_0 = i_0 FALSE"
                                             (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "19"))
                                             (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "18") (inst "t=l_0"))
                                             (rule "replaceKnownSelect_taclet1000000001010_22" (formula "18") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1000000001010_23" (formula "18") (term "1,0,0"))
                                             (rule "eqSymm" (formula "18") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,2,1,0,0"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "18") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "3"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "inEqSimp_homoInEq1" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0"))
                                             (rule "leq_literals" (formula "18"))
                                             (rule "closeFalse" (formula "18"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "24") (inst "sk=f_0"))
                                    (rule "allRight" (formula "24") (inst "sk=o_0"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "24"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "dismissNonSelectedField" (formula "25") (term "0,0,1"))
                                    (rule "inEqSimp_ltRight" (formula "21"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "25"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet1010_0" (formula "24") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1010_10" (formula "24") (term "0,1,0"))
                                 (rule "precOfInt" (formula "24"))
                                 (rule "inEqSimp_ltRight" (formula "21"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                 (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "23") (term "1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "23") (term "0,0,0,1"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0"))
                                 (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "4"))
                                 (rule "polySimp_pullOutFactor2" (formula "23") (term "0,1"))
                                 (rule "add_literals" (formula "23") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "23") (term "0,1"))
                                 (rule "leq_literals" (formula "23") (term "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "22"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_literals" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch "Null Reference (n_arr_6 = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (n_arr_6 != null, but x_6 Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "inEqSimp_ltRight" (formula "21"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "qeq_literals" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "Array Store Exception (incompatible dynamic element type of n_arr_6 and n)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "notLeft" (formula "1"))
                              (rule "array_store_known_dynamic_array_type" (formula "18") (ifseqformula "4"))
                              (rule "typeEqDerived2" (formula "18") (term "0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "closeTrue" (formula "18"))
                           )
                        )
                        (branch "Null Reference (n_arr_8 = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (n_arr_8 != null, but x_7 Out of Bounds!)"
                           (rule "false_right" (formula "23"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "inEqSimp_ltRight" (formula "20"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                     )
                     (branch "Null Reference (n_arr_9 = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_3 false"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (n_arr_5 = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (n_arr_4 = null)"
               (rule "false_right" (formula "17"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
             (builtin "One Step Simplification" (formula "13"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "translateJavaSubInt" (formula "13") (term "0,0,2,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "13") (term "0,2,1,1,0,1"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "eqSymm" (formula "15") (term "1,0"))
            (rule "polySimp_elimSub" (formula "15") (term "0,2,0,1,0"))
            (rule "mul_literals" (formula "15") (term "1,0,2,0,1,0"))
            (rule "polySimp_elimSub" (formula "15") (term "0,0,2,0,1,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,2,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13"))
            (rule "inEqSimp_commuteLeq" (formula "14"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "b_1"))
            (rule "applyEq" (formula "15") (term "1,0,0,2,0,1,0") (ifseqformula "1"))
            (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=NatListImpl_a_0"))
            (rule "simplifySelectOfAnon" (formula "14"))
             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "21")))
            (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "14") (term "0,0,0"))
            (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")))
            (rule "ifthenelse_negated" (formula "14") (term "0"))
            (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
            (rule "pullOutSelect" (formula "14") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "14"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "simplifySelectOfStore" (formula "14"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "simplifySelectOfStore" (formula "14"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "simplifySelectOfStore" (formula "14"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "simplifySelectOfCreate" (formula "14"))
             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")))
            (rule "castDel" (formula "14") (term "1,0"))
            (rule "eqSymm" (formula "14") (term "0,0"))
            (rule "sortsDisjointModuloNull" (formula "14") (term "0,0"))
            (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")))
            (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "14"))
            (rule "hideAuxiliaryEq" (formula "14"))
            (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "simplifySelectOfMemset" (formula "14"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "dismissNonSelectedField" (formula "14") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "2,0"))
            (rule "elementOfArrayRange" (formula "14") (term "0,0") (inst "iv=iv"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "simplifySelectOfCreate" (formula "14"))
             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")))
            (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "14"))
            (rule "hideAuxiliaryEq" (formula "14"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
            (rule "commute_and" (formula "15") (term "0,0"))
            (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_2"))
            (rule "assignment" (formula "21") (term "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_1"))
            (rule "eval_order_access2" (formula "21") (term "1") (inst "#v0=n_arr"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "n_arr_4"))
            (rule "assignment_read_attribute_this" (formula "21"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "replaceKnownSelect_taclet2010_0" (formula "21") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2010_9" (formula "21") (term "0,1,0"))
            (rule "assignment_read_length" (formula "21"))
            (branch "Normal Execution (n_arr_4 != null)"
                (builtin "One Step Simplification" (formula "21"))
               (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "1"))
               (rule "less_than_comparison_simple" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "methodCallEmpty" (formula "21") (term "1"))
               (rule "emptyModality" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "impRight" (formula "21"))
               (rule "notLeft" (formula "1"))
               (rule "assignment_write_attribute_this" (formula "22"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "pullOutSelect" (formula "22") (term "0,3,0,1,0") (inst "selectSK=NatListImpl_impl_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet2010_1" (formula "1") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2010_6" (formula "1") (term "0,0,1,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "simplifySelectOfMemset" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "assignment_write_attribute_this" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "applyEqReverse" (formula "23") (term "0,3,0,0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "methodCallEmpty" (formula "22") (term "1"))
               (rule "tryEmpty" (formula "22") (term "1"))
               (rule "emptyModality" (formula "22") (term "1"))
               (rule "andRight" (formula "22"))
               (branch "Case 1"
                  (rule "andRight" (formula "22"))
                  (branch "Case 1"
                     (rule "andRight" (formula "22"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "eqSymm" (formula "22"))
                        (rule "inEqSimp_ltRight" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "19"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                        (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "14"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,0"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "leq_literals" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "7") (term "1,1,0,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "10") (term "1") (ifseqformula "13"))
                        (rule "applyEq" (formula "14") (term "1,0,0,2,0,1,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                        (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "13"))
                        (rule "nnf_imp2or" (formula "8") (term "0"))
                        (rule "nnf_imp2or" (formula "7") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_notAnd" (formula "8") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "7") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "8") (term "0"))
                        (rule "JML_represents_clause_for_INatList_nlist" (formula "19") (term "0,1") (ifseqformula "5"))
                        (rule "JML_represents_clause_for_INatList_nlist" (formula "19") (term "0") (ifseqformula "5"))
                        (rule "dismissNonSelectedField" (formula "19") (term "0"))
                        (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=NatListImpl_impl_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "closeTrue" (formula "20"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "Class_invariant_axiom_for_NatListImpl" (formula "22") (inst "x=x_3") (inst "x_0=x_0") (ifseqformula "5") (userinteraction))
                        (rule "andRight" (formula "22"))
                        (branch "Case 1"
                           (rule "andRight" (formula "22"))
                           (branch "Case 1"
                              (rule "andRight" (formula "22"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "22"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "22"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "22"))
                                       (branch "Case 1"
                                          (rule "inEqSimp_ltRight" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "19"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "nonNull" (formula "21") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "greater_literals" (formula "21") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                          (rule "inEqSimp_homoInEq1" (formula "16"))
                                          (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "1,0"))
                                          (rule "times_zero_1" (formula "16") (term "0"))
                                          (rule "leq_literals" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,0,1,0,0,1,0,1") (ifseqformula "14"))
                                          (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,0,0,1,1,1,0,0,1") (ifseqformula "14"))
                                          (rule "applyEq" (formula "20") (term "1,2,1,0,0,0,0,0,1,0,1") (ifseqformula "14"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "10") (term "1") (ifseqformula "13"))
                                          (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "14") (term "1,0,0,2,0,1,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                                          (rule "pullOutSelect" (formula "19") (term "0,0,0") (inst "selectSK=NatListImpl_a_1"))
                                          (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "20") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "allRight" (formula "19") (inst "sk=i_1_0"))
                                          (rule "impRight" (formula "19"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notRight" (formula "21"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "16"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "14") (ifseqformula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "11") (term "0"))
                                          (rule "commute_or_2" (formula "12") (term "0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "11") (term "0,0"))
                                          (rule "commute_or_2" (formula "11") (term "0"))
                                          (rule "commute_or" (formula "12") (term "0,0"))
                                          (rule "commute_or_2" (formula "12") (term "0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                          (rule "leq_literals" (formula "12") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "12") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "allLeft" (formula "11") (inst "t=i_1_0"))
                                          (rule "eqSymm" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                          (rule "leq_literals" (formula "11") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "11") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                          (rule "eqSymm" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfAnon" (formula "18"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                          (rule "hideAuxiliaryEq" (formula "18"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "allLeft" (formula "13") (inst "t=add(add(Z(neglit(1(#))), i_0),
    mul(i_1_0, Z(neglit(1(#)))))"))
                                          (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
                                          (rule "mul_literals" (formula "13") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "13") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0"))
                                          (rule "leq_literals" (formula "13") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "closeFalse" (formula "13"))
                                       )
                                       (branch "Case 2"
                                          (rule "notRight" (formula "22"))
                                          (rule "inEqSimp_ltRight" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "20"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=NatListImpl_a_1"))
                                          (rule "simplifySelectOfStore" (formula "2"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0"))
                                          (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "close" (formula "20") (ifseqformula "3"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "inEqSimp_ltRight" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "22"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltRight" (formula "20"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "2"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,0"))
                                       (rule "times_zero_1" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,0,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "8") (term "1,1,0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "15") (term "1,0,0,2,0,1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "2") (term "1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "11") (term "1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "14"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=NatListImpl_a_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "allRight" (formula "22") (inst "sk=x_0_0"))
                                    (rule "impRight" (formula "22"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "24") (term "0,0"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "dismissNonSelectedField" (formula "24") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "24") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "21"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=NatListImpl_impl_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_0"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,1,1,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,1,2,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "1") (term "1,2,1,0,2,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,0"))
                                    (rule "times_zero_1" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,1,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,0,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,2,0,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "16"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=NatListImpl_a_1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                                    (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_imp2or" (formula "10") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "commute_or_2" (formula "11") (term "0"))
                                    (rule "commute_or_2" (formula "10") (term "0"))
                                    (rule "commute_or_2" (formula "16") (term "0"))
                                    (rule "commute_or" (formula "11") (term "0,0"))
                                    (rule "commute_or_2" (formula "11") (term "0"))
                                    (rule "commute_or" (formula "10") (term "0,0"))
                                    (rule "commute_or_2" (formula "10") (term "0"))
                                    (rule "commute_or" (formula "16") (term "0,0"))
                                    (rule "commute_or_2" (formula "16") (term "0"))
                                    (rule "allLeft" (formula "10") (inst "t=x_0_0"))
                                    (rule "eqSymm" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,1"))
                                    (rule "leq_literals" (formula "10") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "10") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "allLeft" (formula "12") (inst "t=x_0_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,1"))
                                    (rule "leq_literals" (formula "12") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "allLeft" (formula "17") (inst "t=x_0_0"))
                                    (rule "eqSymm" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,1"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "17") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfAnon" (formula "17"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                    (rule "hideAuxiliaryEq" (formula "17"))
                                    (rule "applyEq" (formula "24") (term "1") (ifseqformula "17"))
                                    (rule "allLeft" (formula "12") (inst "t=add(add(Z(neglit(1(#))), i_0),
    mul(x_0_0, Z(neglit(1(#)))))"))
                                    (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1"))
                                    (rule "mul_literals" (formula "12") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "12") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,1"))
                                    (rule "leq_literals" (formula "12") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "allLeft" (formula "18") (inst "t=add(add(Z(neglit(1(#))), i_0),
    mul(x_0_0, Z(neglit(1(#)))))"))
                                    (rule "eqSymm" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,2,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,2,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,2,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,2,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,1,0,2,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,1,0,2,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,2,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,2,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,2,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,2,1,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,0,2,1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0,2,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,0,2,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "0,0,2,1,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,2,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                    (rule "mul_literals" (formula "18") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfAnon" (formula "18"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                    (rule "hideAuxiliaryEq" (formula "18"))
                                    (rule "allLeft" (formula "11") (inst "t=add(add(Z(neglit(1(#))), i_0),
    mul(x_0_0, Z(neglit(1(#)))))"))
                                    (rule "eqSymm" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1"))
                                    (rule "mul_literals" (formula "11") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "11") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,1"))
                                    (rule "leq_literals" (formula "11") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1") (ifseqformula "7"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "23"))
                                    (rule "get_reverse" (formula "31") (term "0") (userinteraction))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,1,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "18"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "18"))
                                    (rule "polySimp_addComm1" (formula "33") (term "1,0"))
                                    (rule "close" (formula "33") (ifseqformula "14"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "allRight" (formula "22") (inst "sk=x_3_0"))
                                 (rule "impRight" (formula "22"))
                                 (rule "notRight" (formula "23"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "22"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=NatListImpl_a_1"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                                 (rule "simplifySelectOfStore" (formula "2"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "castDel" (formula "2") (term "0"))
                                 (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "11") (term "1,1,0,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                 (rule "inEqSimp_homoInEq1" (formula "18"))
                                 (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "1,0"))
                                 (rule "times_zero_1" (formula "18") (term "0"))
                                 (rule "leq_literals" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "11") (term "1,1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "16"))
                                 (rule "applyEq" (formula "13") (term "1") (ifseqformula "16"))
                                 (rule "applyEq" (formula "17") (term "1,0,0,2,0,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "2") (term "0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or" (formula "11") (term "0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "commute_or" (formula "12") (term "0,0"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "allLeft" (formula "12") (inst "t=x_3_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                 (rule "leq_literals" (formula "12") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "12") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "allLeft" (formula "11") (inst "t=x_3_0"))
                                 (rule "eqSymm" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                 (rule "leq_literals" (formula "11") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "11") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "allLeft" (formula "18") (inst "t=x_3_0"))
                                 (rule "replaceKnownSelect_taclet10010002010_16" (formula "18") (term "1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10010002010_17" (formula "18") (term "1,0,0"))
                                 (rule "eqSymm" (formula "18") (term "0,0"))
                                 (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "allLeft" (formula "13") (inst "t=add(add(Z(neglit(1(#))), i_0),
    mul(x_3_0, Z(neglit(1(#)))))"))
                                 (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
                                 (rule "mul_literals" (formula "13") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "13") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch "Case 2"
                              (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                              (rule "eqSymm" (formula "22"))
                              (rule "inEqSimp_ltRight" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "19"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                              (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=NatListImpl_impl_1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "21") (term "0,0") (inst "selectSK=NatListImpl_a_1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "21"))
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "16"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "1,0"))
                              (rule "times_zero_1" (formula "16") (term "0"))
                              (rule "leq_literals" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                              (rule "applyEq" (formula "7") (term "1,1,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "14") (term "1,0,0,2,0,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "10") (term "1") (ifseqformula "13"))
                              (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "13"))
                              (rule "applyEq" (formula "19") (term "1") (ifseqformula "13"))
                              (rule "nnf_imp2or" (formula "8") (term "0"))
                              (rule "nnf_imp2or" (formula "7") (term "0"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_notAnd" (formula "8") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "7") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "8") (term "0"))
                              (rule "commute_or_2" (formula "7") (term "0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or" (formula "8") (term "0,0"))
                              (rule "commute_or_2" (formula "8") (term "0"))
                              (rule "commute_or" (formula "7") (term "0,0"))
                              (rule "commute_or_2" (formula "7") (term "0"))
                              (rule "commute_or" (formula "14") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "len_reverse" (formula "19") (term "0") (userinteraction))
                              (rule "close" (formula "19") (ifseqformula "10"))
                           )
                        )
                        (branch "Case 2"
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                           (rule "inEqSimp_ltRight" (formula "19"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "21"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                           (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "2"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,0"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                           (rule "leq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "16"))
                           (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "2") (term "1") (ifseqformula "14"))
                           (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "15") (term "1,0,0,2,0,1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "14"))
                           (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=NatListImpl_impl_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "9") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "8") (term "0"))
                           (rule "commute_or_2" (formula "9") (term "0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or" (formula "8") (term "0,0"))
                           (rule "commute_or_2" (formula "8") (term "0"))
                           (rule "commute_or" (formula "9") (term "0,0"))
                           (rule "commute_or_2" (formula "9") (term "0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "len_reverse" (formula "1") (term "0") (userinteraction))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "closeTrue" (formula "22"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "allRight" (formula "22") (inst "sk=f_0"))
                  (rule "allRight" (formula "22") (inst "sk=o_0"))
                  (rule "orRight" (formula "22"))
                  (rule "orRight" (formula "22"))
                  (rule "eqSymm" (formula "24"))
                  (rule "inEqSimp_ltRight" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "19"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                  (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "2"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "16"))
                  (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "1,0"))
                  (rule "times_zero_1" (formula "16") (term "0"))
                  (rule "leq_literals" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
                  (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,2,0") (ifseqformula "14"))
                  (rule "applyEq" (formula "8") (term "1,1,0,0,0") (ifseqformula "14"))
                  (rule "applyEq" (formula "11") (term "1") (ifseqformula "14"))
                  (rule "applyEq" (formula "15") (term "1,0,0,2,0,1,0") (ifseqformula "14"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "14"))
                  (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "14"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                  (rule "simplifySelectOfMemset" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "eqSymm" (formula "2") (term "0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "24") (term "0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "24") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                  (rule "commute_and" (formula "10") (term "0,0"))
                  (rule "commute_and" (formula "9") (term "0,0"))
                  (rule "commute_or_2" (formula "18") (term "0"))
                  (rule "commute_and" (formula "6") (term "0,0"))
                  (rule "JML_represents_clause_for_INatList_footprint" (formula "29") (term "2") (ifseqformula "15"))
                  (rule "elementOfUnion" (formula "29"))
                  (rule "orRight" (formula "29"))
                  (rule "elementOfSingleton" (formula "30"))
                  (rule "elementOfUnion" (formula "29"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "orRight" (formula "29"))
                  (rule "elementOfSingleton" (formula "29"))
                  (rule "commute_and" (formula "8") (term "0,0,0"))
                  (rule "commute_or_2" (formula "17") (term "0"))
                  (rule "commute_and" (formula "8") (term "1,0,0"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_or_2" (formula "24") (term "0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "commute_or" (formula "18") (term "0,0"))
                  (rule "commute_or_2" (formula "18") (term "0"))
                  (rule "commute_and" (formula "31"))
                  (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                  (rule "hideAuxiliaryEq" (formula "9"))
                  (rule "commute_and" (formula "28"))
                  (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "9"))
                  (rule "hideAuxiliaryEq" (formula "9"))
                  (rule "commute_or" (formula "15") (term "0,0"))
                  (rule "commute_or_2" (formula "15") (term "0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "cnf_rightDist" (formula "8") (term "0,0"))
                  (rule "commute_or" (formula "8") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
                  (rule "commute_or" (formula "8") (term "0,1,0,0"))
                  (rule "commute_or" (formula "8") (term "1,1,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                  (rule "commute_or" (formula "8") (term "1,0,0,0"))
                  (rule "shift_paren_and" (formula "8") (term "0,0"))
                  (rule "cut_direct" (formula "30") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "replace_known_left" (formula "9") (term "0,1,1,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
                     (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "9") (term "1,0,0"))
                     (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "9"))
                     (rule "hideAuxiliaryEq" (formula "9"))
                     (rule "applyEqRigid" (formula "29") (term "0,1") (ifseqformula "1"))
                     (rule "eqSymm" (formula "29") (term "1"))
                     (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "false_right" (formula "29"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "28"))
                     (rule "applyEqRigid" (formula "6") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "5") (term "1,0,0"))
                     (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "1"))
                     (rule "eqSymm" (formula "25") (term "1"))
                     (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "false_right" (formula "25"))
                     (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "5") (term "1,0,0"))
                     (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEqRigid" (formula "5") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "4") (term "1,0,0"))
                     (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "4") (term "0,0"))
                     (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "3") (term "1,0,0"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "notRight" (formula "31"))
                     (rule "replace_known_right" (formula "9") (term "0,1,1,0,0,0") (ifseqformula "31"))
                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "31")))
                     (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "hideAuxiliaryEq" (formula "8"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = n_arr_3 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "2")))
                        (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "3"))
                        (rule "eqSymm" (formula "25") (term "1"))
                        (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                        (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                        (rule "false_right" (formula "25"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "21") (ifseqformula "1"))
                     )
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = n_arr_3 FALSE"
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = n_arr_3 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "eqSymm" (formula "31"))
                           (rule "applyEqRigid" (formula "31") (term "2,1") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "31") (term "1") (ifseqformula "10"))
                           (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "false_right" (formula "22"))
                           (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "false_right" (formula "28"))
                           (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "5") (term "1,0,0,0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "false_right" (formula "22"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "18") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = n_arr_3 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = n_arr_3 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "eqSymm" (formula "30"))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "30") (term "2,1") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "30") (term "1") (ifseqformula "8"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "false_right" (formula "21"))
                              (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "16"))
                              (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "applyEqRigid" (formula "24") (term "0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "3"))
                              (rule "eqSymm" (formula "25") (term "1"))
                              (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                              (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")))
                              (rule "false_right" (formula "25"))
                              (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "18") (ifseqformula "1"))
                           )
                           (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = n_arr_3 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = n_arr_3 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "false_right" (formula "20"))
                                 (rule "applyEqRigid" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "false_right" (formula "24"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "applyEq" (formula "24") (term "2,1") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "24") (term "1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "14"))
                                 (rule "applyEqRigid" (formula "23") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "18") (ifseqformula "1"))
                              )
                              (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = n_arr_3 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "cut_direct" (formula "28") (term "1"))
                                 (branch "CUT: o_0 = self TRUE"
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "19") (term "1"))
                                    (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                    (rule "false_right" (formula "19"))
                                    (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "19") (term "1"))
                                    (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")))
                                    (rule "false_right" (formula "19"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "18") (term "1"))
                                    (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")))
                                    (rule "false_right" (formula "18"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0,0") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "17") (term "1"))
                                    (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
                                    (rule "false_right" (formula "17"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "sortsDisjointModuloNull" (formula "22"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
                                    (rule "false_right" (formula "22"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")) (ifInst ""  (formula "23")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_0 = self FALSE"
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "false_right" (formula "29"))
                                    (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " o_0 = n_arr_3 ∧ ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + i_0) ∧ ¬f_0 = java.lang.Object::<created> TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "20")))
                                       (rule "false_right" (formula "24"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "false_right" (formula "21"))
                                       (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "false_right" (formula "20"))
                                       (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "false_right" (formula "21"))
                                       (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "28") (term "0") (ifseqformula "16") (ifseqformula "22"))
                                       (rule "eqSymm" (formula "28"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "21") (ifseqformula "1"))
                                    )
                                    (branch " o_0 = n_arr_3 ∧ ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + i_0) ∧ ¬f_0 = java.lang.Object::<created> FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "cut_direct" (formula "21") (term "1"))
                                       (branch "CUT: o_0 = n_arr_3 TRUE"
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")))
                                          (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "21")))
                                          (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "27"))
                                          (rule "sortsDisjointModuloNull" (formula "27"))
                                          (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "25"))
                                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "23")))
                                          (rule "false_right" (formula "27"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "22") (ifseqformula "2"))
                                       )
                                       (branch "CUT: o_0 = n_arr_3 FALSE"
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "false_right" (formula "22"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Null Reference (n_arr_4 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (newObject = null)"
         (rule "false_right" (formula "18"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (n_arr_1 = null)"
   (rule "false_right" (formula "12"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
   (rule "closeFalse" (formula "1"))
)
)
}
