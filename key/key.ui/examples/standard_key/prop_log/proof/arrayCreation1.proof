\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jun 05 16:25:27 CEST 2019
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "./classes";

\programVariables {
  int[] a;
}

\problem {
   wellFormed(heap)
-> \<{
       a=new int[20];
     }\> (    int::select(heap, a, arr(Z(0(#))))
            = Z(0(#))
          &   int::select(heap, a, arr(Z(1(#))))
            = Z(0(#))
          &   int::select(heap, a, arr(Z(2(#))))
            = Z(0(#)))

}

\proof {
(keyLog "0" (keyUser "shiva" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "378")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "arrayCreation" (formula "2") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "2") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "2"))
(rule "variableDeclaration" (formula "2") (newnames "dim0"))
(rule "assignment" (formula "2"))
(rule "ifUnfold" (formula "2") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "2") (term "1"))
(rule "sequentialToParallel2" (formula "2"))
(rule "applyOnElementary" (formula "2") (term "1,0"))
(rule "applyOnRigidTerm" (formula "2") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "2") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "2") (term "1,0,1,0"))
(rule "applyOnRigidFormula" (formula "2") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "2") (term "1,0,0,1,0"))
(rule "applyOnPV" (formula "2") (term "0,0,0,1,0"))
(rule "less_literals" (formula "2") (term "0,0,1,0"))
(rule "ifthenelse_false" (formula "2") (term "0,1,0"))
(rule "ifSplit" (formula "2"))
(branch "if x true"
   (rule "simplifyUpdate2" (formula "3"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "boolean_not_equal_2" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (rule "false_to_not_true" (formula "1") (term "1"))
   (rule "simplifyUpdate2" (formula "3"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "2"))
   (rule "simplifyUpdate1" (formula "2") (term "1"))
   (rule "applyOnPV" (formula "2") (term "0"))
   (rule "boolean_not_equal_2" (formula "2"))
   (rule "false_right" (formula "2"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_arr_1"))
   (rule "variableDeclarationAssign" (formula "2") (term "1"))
   (rule "variableDeclaration" (formula "2") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "2") (term "1"))
   (rule "sequentialToParallel2" (formula "2"))
   (rule "simplifyUpdate2" (formula "2"))
   (rule "applyOnElementary" (formula "2") (term "0"))
   (rule "applyOnPV" (formula "2") (term "0,0"))
   (rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
   (rule "simplifyUpdate2" (formula "2") (term "1"))
   (rule "variableDeclaration" (formula "2") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "2") (term "1"))
   (rule "variableDeclaration" (formula "2") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "2") (term "1"))
   (rule "sequentialToParallel2" (formula "2"))
   (rule "simplifyUpdate2" (formula "2"))
   (rule "applyOnElementary" (formula "2") (term "0"))
   (rule "applyOnPV" (formula "2") (term "0,0"))
   (rule "allocateInstanceWithLength" (formula "2"))
   (rule "false_to_not_true" (formula "1") (term "0,1,1,0,1"))
   (rule "simplifyUpdate2" (formula "3"))
   (rule "andLeft" (formula "1"))
   (rule "simplifyUpdate2" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate2" (formula "1") (term "0"))
   (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "3"))
   (rule "concrete_impl_1" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "applyOnPV" (formula "1") (term "1"))
   (rule "simplifyUpdate1" (formula "1") (term "0"))
   (rule "blockEmpty" (formula "6") (term "1"))
   (rule "assignment" (formula "6") (term "1"))
   (rule "sequentialToParallel2" (formula "6"))
   (rule "simplifyUpdate3" (formula "6") (term "1,0"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthIsAShort" (formula "1") (term "0"))
   (rule "inShort" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "methodCall" (formula "6"))
   (branch "Normal Execution (newObject != null )"
      (rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
      (rule "simplifyUpdate2" (formula "6") (term "1"))
      (rule "assignment_write_attribute_this" (formula "6"))
      (rule "sequentialToParallel2" (formula "6"))
      (rule "simplifyUpdate2" (formula "6"))
      (rule "applyOnElementary" (formula "6") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "6") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "0,0,1,0"))
      (rule "methodCallWithinClass" (formula "6") (term "1"))
      (rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (rule "simplifyUpdate2" (formula "6") (term "1"))
      (rule "arrayInitialisation" (formula "6") (term "1"))
      (rule "polySimp_elimSub" (formula "6") (term "2,1,0,0,1"))
      (rule "mul_literals" (formula "6") (term "1,2,1,0,0,1"))
      (rule "sequentialToParallel2" (formula "6"))
      (rule "simplifyUpdate2" (formula "6"))
      (rule "applyOnElementary" (formula "6") (term "1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "2,1,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "6") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "0,0,1,0"))
      (rule "applyOnRigidTerm" (formula "6") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,1,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "0,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "6") (term "2,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "0,2,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "6") (term "1,2,1,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "0,1,2,1,0,1,0"))
      (rule "applyEq" (formula "6") (term "1,2,1,0,1,0") (ifseqformula "1"))
      (rule "add_literals" (formula "6") (term "2,1,0,1,0"))
      (rule "methodCallEmpty" (formula "6") (term "1"))
      (rule "blockEmpty" (formula "6") (term "1"))
      (rule "assignment_write_attribute_this" (formula "6"))
      (rule "sequentialToParallel2" (formula "6"))
      (rule "simplifyUpdate2" (formula "6"))
      (rule "applyOnElementary" (formula "6") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "6") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "0,0,1,0"))
      (rule "methodCallReturnIgnoreResult" (formula "6") (term "1"))
      (rule "blockEmpty" (formula "6") (term "1"))
      (rule "methodCallReturn" (formula "6") (term "1"))
      (rule "assignment" (formula "6") (term "1"))
      (rule "sequentialToParallel2" (formula "6"))
      (rule "simplifyUpdate2" (formula "6"))
      (rule "simplifyUpdate3" (formula "6") (term "1,0"))
      (rule "applyOnElementary" (formula "6") (term "1,0"))
      (rule "applyOnPV" (formula "6") (term "0,1,0"))
      (rule "methodCallEmpty" (formula "6") (term "1"))
      (rule "blockEmpty" (formula "6") (term "1"))
      (rule "assignment" (formula "6") (term "1"))
      (rule "sequentialToParallel2" (formula "6"))
      (rule "simplifyUpdate2" (formula "6"))
      (rule "simplifyUpdate3" (formula "6") (term "1,0"))
      (rule "applyOnElementary" (formula "6") (term "1,0"))
      (rule "applyOnPV" (formula "6") (term "0,1,0"))
      (rule "blockEmpty" (formula "6") (term "1"))
      (rule "assignment" (formula "6") (term "1"))
      (rule "sequentialToParallel2" (formula "6"))
      (rule "simplifyUpdate2" (formula "6"))
      (rule "simplifyUpdate3" (formula "6") (term "1,0"))
      (rule "applyOnElementary" (formula "6") (term "1,0"))
      (rule "applyOnPV" (formula "6") (term "0,1,0"))
      (rule "emptyModality" (formula "6") (term "1"))
      (rule "applyOnRigidFormula" (formula "6"))
      (rule "applyOnRigidFormula" (formula "6") (term "1"))
      (rule "simplifyUpdate1" (formula "6") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "6") (term "0"))
      (rule "applyOnRigidTerm" (formula "6") (term "0,1"))
      (rule "simplifyUpdate1" (formula "6") (term "2,0,1"))
      (rule "simplifyUpdate1" (formula "6") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "6") (term "0,0,1"))
      (rule "applyOnPV" (formula "6") (term "1,0,1"))
      (rule "applyOnPV" (formula "6") (term "0,0,1"))
      (rule "applyOnRigidFormula" (formula "6") (term "1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,1,0"))
      (rule "applyOnRigidFormula" (formula "6") (term "0,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,0,0"))
      (rule "dismissNonSelectedField" (formula "6") (term "0,1"))
      (rule "applyOnRigidTerm" (formula "6") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "6") (term "1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "6") (term "0,0,0"))
      (rule "simplifyUpdate1" (formula "6") (term "0,0,0,0"))
      (rule "simplifyUpdate1" (formula "6") (term "2,0,0,0"))
      (rule "simplifyUpdate1" (formula "6") (term "1,0,0,0"))
      (rule "applyOnPV" (formula "6") (term "0,0,0,0"))
      (rule "applyOnPV" (formula "6") (term "1,0,0,0"))
      (rule "dismissNonSelectedField" (formula "6") (term "0,1,0"))
      (rule "dismissNonSelectedField" (formula "6") (term "0,0,0"))
      (rule "pullOutSelect" (formula "6") (term "0,1") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfMemset" (formula "1"))
      (rule "equalUnique" (formula "1") (term "0,1,0,0"))
      (rule "concrete_not_2" (formula "1") (term "1,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
      (rule "eqClose" (formula "1") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "1,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "ifthenelse_true" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "7") (term "0,1") (ifseqformula "1"))
      (rule "eqClose" (formula "7") (term "1"))
      (rule "concrete_and_3" (formula "7"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "6") (term "0,1") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfMemset" (formula "1"))
      (rule "equalUnique" (formula "1") (term "0,1,0,0"))
      (rule "concrete_not_2" (formula "1") (term "1,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
      (rule "eqClose" (formula "1") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "1,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "ifthenelse_true" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "7") (term "0,1") (ifseqformula "1"))
      (rule "eqClose" (formula "7") (term "1"))
      (rule "concrete_and_3" (formula "7"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=arr_2"))
      (rule "simplifySelectOfMemset" (formula "1"))
      (rule "equalUnique" (formula "1") (term "0,1,0,0"))
      (rule "concrete_not_2" (formula "1") (term "1,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
      (rule "eqClose" (formula "1") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "1,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "ifthenelse_true" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "1"))
      (rule "eqClose" (formula "7"))
      (rule "closeTrue" (formula "7"))
   )
   (branch "Null Reference (newObject = null)"
      (rule "false_right" (formula "7"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "close" (formula "6") (ifseqformula "1"))
   )
)
)
}
