\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Mar 28 19:21:17 CET 2019
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\predicates {
  a;
  b;
  c;
  d;
  e;
}


\problem {
!(  (a | b | c | d | e)
  & (a | b | c | !d | e)
  & (a | b | !c | d | e)
  & (a | b | !c | !d | e)
  & (a | !b | c | d | e)
  & (a | !b | c | !d | e)
  & (a | !b | !c | d | e)
  & (a | !b | !c | !d | e)
  & (!a | b | c | d | e)
  & (!a | b | c | !d | e)
  & (!a | b | !c | d | e)
  & (!a | b | !c | !d | e)
  & (!a | !b | c | d | e)
  & (!a | !b | c | !d | e)
  & (!a | !b | !c | d | e)
  & (!a | !b | !c | !d | e)
  & (a | b | c | d | !e)
  & (a | b | c | !d | !e)
  & (a | b | !c | d | !e)
  & (a | b | !c | !d | !e)
  & (a | !b | c | d | !e)
  & (a | !b | c | !d | !e)
  & (a | !b | !c | d | !e)
  & (a | !b | !c | !d | !e)
  & (!a | b | c | d | !e)
  & (!a | b | c | !d | !e)
  & (!a | b | !c | d | !e)
  & (!a | b | !c | !d | !e)
  & (!a | !b | c | d | !e)
  & (!a | !b | c | !d | !e)
  & (!a | !b | !c | d | !e)
  & (!a | !b | !c | !d | !e))

}

\proof {
(keyLog "0" (keyUser "shiva" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "839")

(branch "dummy ID"
(rule "notRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "cut_direct" (formula "32") (term "0,1,0"))
(branch "CUT: d TRUE"
    (builtin "One Step Simplification" (formula "33"))
   (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "true_left" (formula "23"))
   (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "30"))
   (rule "true_left" (formula "30"))
   (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "true_left" (formula "24"))
   (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "replace_known_left" (formula "6") (term "0,1,0") (ifseqformula "27"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "replace_known_left" (formula "25") (term "1,0") (ifseqformula "27"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "true_left" (formula "25"))
   (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "26"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "26"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "24"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "replace_known_left" (formula "7") (term "0,1,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "20"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "20"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "19"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "19"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "16"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "cut_direct" (formula "17") (term "0,1"))
   (branch "CUT: e TRUE"
       (builtin "One Step Simplification" (formula "18"))
      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "3"))
      (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "replace_known_left" (formula "6") (term "0,1") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "3"))
      (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "13")))
      (rule "true_left" (formula "4"))
      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
      (rule "true_left" (formula "1"))
      (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "8")))
      (rule "true_left" (formula "2"))
      (rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
      (rule "true_left" (formula "1"))
      (rule "cut_direct" (formula "10") (term "0,1,0"))
      (branch "CUT: b TRUE"
          (builtin "One Step Simplification" (formula "11"))
         (rule "replace_known_left" (formula "7") (term "0,1,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "replace_known_left" (formula "3") (term "1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "cut_direct" (formula "7") (term "0,0"))
         (branch "CUT: a TRUE"
             (builtin "One Step Simplification" (formula "8"))
            (rule "notLeft" (formula "8"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "7")))
            (rule "closeFalse" (formula "3"))
         )
         (branch "CUT: a FALSE"
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "notLeft" (formula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "CUT: b FALSE"
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "replace_known_right" (formula "3") (term "0,1,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_right" (formula "3") (term "0,1,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "5") (term "0,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "cut_direct" (formula "1") (term "0"))
         (branch "CUT: a TRUE"
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "5")))
            (rule "closeFalse" (formula "2"))
         )
         (branch "CUT: a FALSE"
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "7")))
            (rule "true_left" (formula "4"))
            (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "6")))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
   (branch "CUT: e FALSE"
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_right" (formula "10") (term "0,1") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "replace_known_right" (formula "10") (term "0,1") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
      (rule "true_left" (formula "10"))
      (rule "replace_known_right" (formula "9") (term "0,1") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "cut_direct" (formula "4") (term "0,0"))
      (branch "CUT: a TRUE"
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "cut_direct" (formula "3") (term "0,1"))
         (branch "CUT: c TRUE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
            (rule "true_left" (formula "2"))
            (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
            (rule "closeFalse" (formula "5"))
         )
         (branch "CUT: c FALSE"
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "5")))
            (rule "closeFalse" (formula "2"))
         )
      )
      (branch "CUT: a FALSE"
          (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "cut_direct" (formula "4") (term "0,0"))
         (branch "CUT: b TRUE"
             (builtin "One Step Simplification" (formula "5"))
            (rule "notLeft" (formula "5"))
            (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "6")))
            (rule "true_left" (formula "2"))
            (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
            (rule "closeFalse" (formula "2"))
         )
         (branch "CUT: b FALSE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
)
(branch "CUT: d FALSE"
    (builtin "One Step Simplification" (formula "32"))
   (rule "true_left" (formula "32"))
   (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "replace_known_right" (formula "12") (term "0,1,0") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "replace_known_right" (formula "17") (term "0,1,0") (ifseqformula "31"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "replace_known_right" (formula "18") (term "0,1,0") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "replace_known_right" (formula "19") (term "0,1,0") (ifseqformula "29"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "true_left" (formula "19"))
   (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "replace_known_right" (formula "6") (term "0,1,0") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "27"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "replace_known_right" (formula "7") (term "0,1,0") (ifseqformula "27"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "26"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "replace_known_right" (formula "18") (term "0,1,0") (ifseqformula "26"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "replace_known_right" (formula "9") (term "1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "replace_known_right" (formula "8") (term "0,1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "replace_known_right" (formula "18") (term "0,1,0") (ifseqformula "24"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "replace_known_right" (formula "19") (term "0,1,0") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "true_left" (formula "19"))
   (rule "replace_known_right" (formula "7") (term "1,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "replace_known_right" (formula "6") (term "1,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "replace_known_right" (formula "4") (term "0,1,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "replace_known_right" (formula "10") (term "1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "replace_known_right" (formula "8") (term "1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "replace_known_right" (formula "9") (term "0,1,0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "replace_known_right" (formula "18") (term "0,1,0") (ifseqformula "20"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "replace_known_right" (formula "2") (term "0,1,0") (ifseqformula "19"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "replace_known_right" (formula "9") (term "0,1,0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "cut_direct" (formula "9") (term "1,0,0"))
   (branch "CUT: b TRUE"
       (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "replace_known_left" (formula "8") (term "0,1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "replace_known_left" (formula "10") (term "0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "replace_known_left" (formula "7") (term "0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "replace_known_left" (formula "8") (term "0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "replace_known_left" (formula "9") (term "0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "cut_direct" (formula "4") (term "0,0,0"))
      (branch "CUT: a TRUE"
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "cut_direct" (formula "3") (term "1"))
         (branch "CUT: e TRUE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
            (rule "true_left" (formula "1"))
            (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
            (rule "closeFalse" (formula "5"))
         )
         (branch "CUT: e FALSE"
             (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "CUT: a FALSE"
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "cut_direct" (formula "2") (term "0,0"))
         (branch "CUT: c TRUE"
             (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
            (rule "true_left" (formula "1"))
            (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
            (rule "closeFalse" (formula "5"))
         )
         (branch "CUT: c FALSE"
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
            (rule "true_left" (formula "4"))
            (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
            (rule "closeFalse" (formula "3"))
         )
      )
   )
   (branch "CUT: b FALSE"
       (builtin "One Step Simplification" (formula "9"))
      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "replace_known_right" (formula "12") (term "0,1,0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "replace_known_right" (formula "15") (term "0,1,0,0") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "replace_known_right" (formula "14") (term "0,1,0,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "replace_known_right" (formula "11") (term "0,1,0,0") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "replace_known_right" (formula "11") (term "1,0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "replace_known_right" (formula "10") (term "1,0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_right" (formula "8") (term "0,1,0,0") (ifseqformula "13"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "cut_direct" (formula "5") (term "0,0"))
      (branch "CUT: a TRUE"
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "cut_direct" (formula "1") (term "0"))
         (branch "CUT: c TRUE"
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
            (rule "closeFalse" (formula "5"))
         )
         (branch "CUT: c FALSE"
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "6")))
            (rule "true_left" (formula "5"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
            (rule "closeFalse" (formula "4"))
         )
      )
      (branch "CUT: a FALSE"
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "cut_direct" (formula "3") (term "0"))
         (branch "CUT: c TRUE"
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "CUT: c FALSE"
             (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
)
}
