\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jul 04 17:43:06 CEST 2019
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_HIGH
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , dependencies-dependencies\\:on
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "src";

\predicates{
  
}

\programVariables {
  WaterTank wt1;
  WaterTank wt2;
  int extractedAmount;
}

\problem {
     !wt1 = null
   & !wt2 = null
   & noW(singleton(wt1, WaterTank::$currentAmount))
   & noRaW(singleton(wt1, WaterTank::$currentAmount))
-> \<{
       wt1.currentAmount=wt1.currentAmount-extractedAmount;
       wt2.currentAmount=wt2.currentAmount+extractedAmount;
     }\> noRaW(singleton(wt1,
                         WaterTank::$currentAmount))

}

\proof {
(keyLog "0" (keyUser "Asma" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "903")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "eval_order_access4" (formula "5") (inst "#v1=x") (inst "#v0=w"))
(rule "variableDeclarationAssign" (formula "5"))
(rule "variableDeclaration" (formula "5") (newnames "w"))
(rule "assignment" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x"))
(rule "compound_subtraction_1" (formula "5") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_1"))
(rule "assignment_read_attribute" (formula "5"))
(branch "Normal Execution (wt1 != null)"
   (rule "sequentialToParallel2" (formula "5"))
   (rule "applyOnParallel" (formula "5") (term "1,0"))
   (rule "applyUpdateOnEvent" (formula "5") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "2,1,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1,1,0"))
   (rule "applyOnElementary" (formula "5") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,0,1,0"))
   (rule "sequentialToParallel2" (formula "5"))
   (rule "applyOnElementary" (formula "5") (term "1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "5") (term "1,0,1,0"))
   (rule "parallelUpdateAssociative" (formula "5") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "5") (term "0,1,0"))
   (rule "elimEventOnRigidTerm1" (formula "5") (term "0,0,1,0"))
   (rule "elimEventOnPV" (formula "5") (term "1,0,1,0"))
   (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0"))
   (rule "assignmentSubtractionInt" (formula "5") (term "1"))
   (rule "translateJavaSubInt" (formula "5") (term "0,0,1"))
   (rule "polySimp_elimSub" (formula "5") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "5"))
   (rule "applyOnElementary" (formula "5") (term "1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "5") (term "1,0,1,0"))
   (rule "shiftEventWithUpdateAtFirstPlace" (formula "5") (term "0"))
   (rule "applyOnRigidTerm" (formula "5") (term "0,1,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,0,1,0,0"))
   (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,1,0,0"))
   (rule "applyOnPV" (formula "5") (term "1,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "5") (term "0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "5") (term "1,0,1,0,0"))
   (rule "elimEventOnRigidTerm1" (formula "5") (term "1,1,0,1,0,0"))
   (rule "elimEventOnPV" (formula "5") (term "0,1,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "5") (term "0,1,0,0"))
   (rule "assignment_write_attribute" (formula "5"))
   (branch "Normal Execution (w != null)"
      (rule "sequentialToParallel2" (formula "5") (term "1"))
      (rule "applyOnElementary" (formula "5") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "5") (term "0,1,0,1"))
      (rule "sequentialToParallel2" (formula "5"))
      (rule "applyOnParallel" (formula "5") (term "1,0"))
      (rule "applyOnElementary" (formula "5") (term "1,1,0"))
      (rule "applyOnParallel" (formula "5") (term "0,1,0"))
      (rule "applyUpdateOnEvent" (formula "5") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "2,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "1,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "0,1,0,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "5") (term "0,1,0,1,0"))
      (rule "applyOnElementary" (formula "5") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "0,0,0,1,0"))
      (rule "sequentialToParallel1" (formula "5") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "0,1,1,0"))
      (rule "applyUpdateOnEvent" (formula "5") (term "1,0,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "0,1,0,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "2,1,0,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "1,1,0,0,1,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "5") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "5") (term "1,0,1,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "2,1,0,1,0"))
      (rule "applyOnPV" (formula "5") (term "2,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "5") (term "1,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "1,1,1,0,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "5") (term "1,1,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "5") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "1,0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "0,0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "3,0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "2,0,0,0,1,0"))
      (rule "elimEventOnPV" (formula "5") (term "0,0,0,0,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "5") (term "2,0,0,0,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "2,1,0,0,1,1,0"))
      (rule "applyOnPV" (formula "5") (term "2,1,0,0,1,1,0"))
      (rule "applyOnRigidTerm" (formula "5") (term "1,1,0,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "1,1,1,0,0,1,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "5") (term "1,1,1,0,0,1,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "0,1,1,0,1,0"))
      (rule "applyOnPV" (formula "5") (term "0,1,1,0,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,0,0,1,0"))
      (rule "applyOnPV" (formula "5") (term "1,0,0,0,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "3,0,0,0,1,0"))
      (rule "applyOnPV" (formula "5") (term "3,0,0,0,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "0,1,1,0,0,1,1,0"))
      (rule "applyOnPV" (formula "5") (term "0,1,1,0,0,1,1,0"))
      (rule "shiftEventWithUpdateAtFirstPlace" (formula "5") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "5") (term "0,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "0,0,1,0,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "5") (term "0,0,1,0,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,1,0,1,0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,1,0,1,0"))
      (rule "applyOnPV" (formula "5") (term "1,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,1,0"))
      (rule "add_literals" (formula "5") (term "0,0,1,0,1,0"))
      (rule "parallelUpdateAssociative" (formula "5") (term "0"))
      (rule "parallelUpdateAssociative" (formula "5") (term "0,0"))
      (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0,0,0"))
      (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0,0"))
      (rule "eval_order_access4" (formula "5") (term "1") (inst "#v1=x") (inst "#v0=w"))
      (rule "variableDeclarationAssign" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "w_1"))
      (rule "assignment" (formula "5") (term "1"))
      (rule "sequentialToParallel2" (formula "5"))
      (rule "applyOnElementary" (formula "5") (term "1,0"))
      (rule "simplifyUpdate1" (formula "5") (term "0,1,0"))
      (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0"))
      (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "0,1,0,0"))
      (rule "elimEventOnPV" (formula "5") (term "0,1,0,0"))
      (rule "shiftEventWithUpdateAtFirstPlace" (formula "5") (term "0,0"))
      (rule "variableDeclarationAssign" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
      (rule "compound_addition_1" (formula "5") (term "1") (inst "#v=x_3"))
      (rule "variableDeclarationAssign" (formula "5") (term "1"))
      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_3"))
      (rule "assignment_read_attribute" (formula "5"))
      (branch "Normal Execution (wt2 != null)"
         (rule "sequentialToParallel2" (formula "5"))
         (rule "applyOnParallel" (formula "5") (term "1,0"))
         (rule "applyOnElementary" (formula "5") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "5") (term "0,0,1,0"))
         (rule "applyUpdateOnEvent" (formula "5") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "5") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "5") (term "2,1,1,0"))
         (rule "simplifyUpdate1" (formula "5") (term "1,1,1,0"))
         (rule "elimEventOnRigidTerm1" (formula "5") (term "0,1,1,0"))
         (rule "sequentialToParallel2" (formula "5"))
         (rule "applyOnElementary" (formula "5") (term "1,0"))
         (rule "simplifyUpdate1" (formula "5") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "5") (term "1,0,1,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "2,1,1,0,0"))
         (rule "applyOnRigidTerm" (formula "5") (term "1,1,1,0,0"))
         (rule "elimEventOnRigidTerm1" (formula "5") (term "1,1,1,1,0,0"))
         (rule "applyOnRigidTerm" (formula "5") (term "0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "5") (term "2,0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "5") (term "1,0,0,1,0,0"))
         (rule "elimEventOnRigidTerm1" (formula "5") (term "2,0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "5") (term "1,1,0,0,1,0"))
         (rule "elimEventOnRigidTerm1" (formula "5") (term "1,1,1,0,0,1,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "2,1,0,0,1,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "2,1,1,0,0"))
         (rule "applyOnPV" (formula "5") (term "2,1,1,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "0,1,1,1,0,0"))
         (rule "elimEventOnPV" (formula "5") (term "0,1,1,1,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "0,0,0,1,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,0,1,0,0"))
         (rule "elimEventOnPV" (formula "5") (term "1,0,0,1,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "0,1,1,0,0,1,0"))
         (rule "elimEventOnPV" (formula "5") (term "0,1,1,0,0,1,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "2,1,0,0,1,0"))
         (rule "applyOnPV" (formula "5") (term "2,1,0,0,1,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "0,0,0,1,0,0"))
         (rule "applyOnPV" (formula "5") (term "0,0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "5") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "5") (term "0,0,1,0"))
         (rule "elimEventOnRigidTerm1" (formula "5") (term "0,0,1,0"))
         (rule "parallelUpdateAssociative" (formula "5") (term "0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,1,0"))
         (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,1,0"))
         (rule "shiftEventWithUpdateAtFirstPlace" (formula "5") (term "0,0,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "5") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "5") (term "1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
         (rule "add_literals" (formula "5") (term "0,0,1,0"))
         (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0"))
         (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0,0"))
         (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "5") (term "0,0,0"))
         (rule "pullOutSelect" (formula "5") (term "0,1,0,0,0,0,0") (inst "selectSK=WaterTank_currentAmount_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "eqClose" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0"))
         (rule "assignmentAdditionInt" (formula "6") (term "1"))
         (rule "translateJavaAddInt" (formula "6") (term "0,0,1"))
         (rule "sequentialToParallel2" (formula "6"))
         (rule "applyOnElementary" (formula "6") (term "1,0"))
         (rule "simplifyUpdate1" (formula "6") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "6") (term "1,0,1,0"))
         (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0"))
         (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "6") (term "0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0,0"))
         (rule "shiftEventWithUpdateAtFirstPlace" (formula "6") (term "0,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0,0,0,0"))
         (rule "elimEventOnPV" (formula "6") (term "1,0,1,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0,0,0"))
         (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0,0,0,0"))
         (rule "applyOnPV" (formula "6") (term "1,0,1,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,1,0,0,0,0"))
         (rule "assignment_write_attribute" (formula "6"))
         (branch "Normal Execution (w_1 != null)"
            (rule "sequentialToParallel2" (formula "6"))
            (rule "applyOnParallel" (formula "6") (term "1,0"))
            (rule "applyOnElementary" (formula "6") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0"))
            (rule "applyUpdateOnEvent" (formula "6") (term "1,1,0"))
            (rule "simplifyUpdate1" (formula "6") (term "1,1,1,0"))
            (rule "simplifyUpdate1" (formula "6") (term "0,1,1,0"))
            (rule "simplifyUpdate1" (formula "6") (term "2,1,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "6") (term "0,1,1,0"))
            (rule "sequentialToParallel2" (formula "6"))
            (rule "applyOnElementary" (formula "6") (term "1,0"))
            (rule "simplifyUpdate1" (formula "6") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "6") (term "1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "6") (term "0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "6") (term "3,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "6") (term "2,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "6") (term "1,0,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "6") (term "0,0,0,1,0,0"))
            (rule "elimEventOnRigidTerm1" (formula "6") (term "2,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "2,1,1,0,0"))
            (rule "applyOnRigidTerm" (formula "6") (term "1,1,1,0,0"))
            (rule "simplifyUpdate1" (formula "6") (term "1,1,1,1,0,0"))
            (rule "elimEventOnRigidTerm1" (formula "6") (term "1,1,1,1,0,0"))
            (rule "applyOnRigidTerm" (formula "6") (term "1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "6") (term "1,1,1,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "6") (term "1,1,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "2,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "3,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "2,1,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,1,1,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,1,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "2,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "3,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "2,1,1,0,0"))
            (rule "applyOnPV" (formula "6") (term "2,1,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,1,1,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,1,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "2,1,0,0,1,0"))
            (rule "applyOnPV" (formula "6") (term "2,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "3,0,0,1,0,0"))
            (rule "applyOnPV" (formula "6") (term "3,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,0,1,0,0"))
            (rule "applyOnPV" (formula "6") (term "1,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,0,0,1,0,0"))
            (rule "applyOnPV" (formula "6") (term "0,0,0,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,1,1,1,0,0"))
            (rule "applyOnPV" (formula "6") (term "0,1,1,1,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "0,1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "6") (term "0,1,1,0,0,1,0"))
            (rule "parallelUpdateAssociative" (formula "6") (term "0,0"))
            (rule "applyOnRigidTerm" (formula "6") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "6") (term "0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "6") (term "0,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0,0,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0,0,0,0,0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0"))
            (rule "shiftEventWithUpdateAtFirstPlace" (formula "6") (term "0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "6") (term "1,0,1,0,0"))
            (rule "applyOnPV" (formula "6") (term "1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0,0,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "6") (term "0,0,0,0"))
            (rule "emptyModality" (formula "6") (term "1"))
            (rule "simplifyUpdate2" (formula "6"))
            (rule "ifthenelse_split" (formula "1") (term "0"))
            (branch "wt2 = wt1 TRUE"
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
               (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "5") (term "0,1,1,0,0") (ifseqformula "1"))
               (rule "updateParallelToWriteEventOnNoRaW" (formula "5") (inst "tempVar=tempVar_0"))
               (rule "eqSymm" (formula "1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0"))
               (rule "elimEventOnRigidTerm1" (formula "1") (term "1,0"))
               (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0,0"))
               (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0,0"))
               (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0,0"))
               (rule "elimEventOnPV" (formula "1") (term "0,0"))
               (rule "eqSymm" (formula "1"))
               (rule "updateParallelToReadEventOnNoRaW" (formula "6") (inst "tempVar=tempVar_1"))
               (branch "Case 1"
                  (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
                  (rule "disjointWithSingleton2" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "applyEqRigid" (formula "8") (term "0,1") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "6") (term "2") (ifseqformula "1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                  (rule "applyEq" (formula "6") (term "2") (ifseqformula "2"))
                  (rule "elementOfSingleton" (formula "6"))
                  (rule "eqClose" (formula "6") (term "0"))
                  (rule "concrete_and_1" (formula "6"))
                  (rule "equalUnique" (formula "6"))
                  (rule "closeTrue" (formula "6"))
               )
               (branch "Case 2"
                  (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "disjointWithSingleton1" (formula "6"))
                  (rule "notRight" (formula "6"))
                  (rule "applyEqRigid" (formula "8") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "1") (term "2") (ifseqformula "2"))
                  (rule "applyEqRigid" (formula "8") (term "0,0,1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                  (rule "applyEq" (formula "1") (term "2") (ifseqformula "3"))
                  (rule "elementOfSingleton" (formula "1"))
                  (rule "eqClose" (formula "1") (term "1"))
                  (rule "concrete_and_3" (formula "1"))
                  (rule "eqClose" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "commute_and" (formula "7"))
                  (rule "andRight" (formula "7"))
                  (branch "Case 1"
                     (rule "updateParallelToWriteEventOnNoRaW" (formula "7") (inst "tempVar=tempVar_2"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyOnRigidTerm" (formula "1") (term "0"))
                     (rule "elimEventOnRigidTerm1" (formula "1") (term "0,0"))
                     (rule "applyOnRigidTerm" (formula "1") (term "1,0"))
                     (rule "elimEventOnRigidTerm1" (formula "1") (term "1,1,0"))
                     (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0,1,0"))
                     (rule "elimEventOnPV" (formula "1") (term "0,1,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "3"))
                     (rule "setMinusItself" (formula "1") (term "1"))
                     (rule "applyEqRigid" (formula "8") (term "0,1") (ifseqformula "1"))
                     (rule "noRaWOnEmptySet" (formula "8") (term "1"))
                     (rule "closeTrue" (formula "8"))
                  )
                  (branch "Case 2"
                     (rule "updateParallelToWriteEventOnNoW" (formula "7") (inst "tempVar=tempVar_2"))
                     (branch "Case 1"
                        (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
                        (rule "disjointWithSingleton2" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "7") (term "2") (ifseqformula "1"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                        (rule "applyEq" (formula "7") (term "2") (ifseqformula "3"))
                        (rule "elementOfSingleton" (formula "7"))
                        (rule "eqClose" (formula "7") (term "1"))
                        (rule "concrete_and_3" (formula "7"))
                        (rule "eqClose" (formula "7"))
                        (rule "closeTrue" (formula "7"))
                     )
                     (branch "Case 2"
                        (rule "false_right" (formula "9"))
                        (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "disjointWithSingleton1" (formula "7"))
                        (rule "notRight" (formula "7"))
                        (rule "applyEq" (formula "1") (term "2") (ifseqformula "2"))
                        (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                        (opengoal "     !wt1 = null    & !wt2 = null    & noW(singleton(wt1, WaterTank::$currentAmount))    & noRaW(singleton(wt1, WaterTank::$currentAmount)) -> \\<{        wt1.currentAmount=wt1.currentAmount-extractedAmount;        wt2.currentAmount=wt2.currentAmount+extractedAmount;      }\\> noRaW(singleton(wt1,                          WaterTank::$currentAmount)) ")
                     )
                  )
               )
            )
            (branch "wt2 = wt1 FALSE"
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "updateParallelToWriteEventOnNoRaW" (formula "6") (inst "tempVar=tempVar_0"))
               (rule "eqSymm" (formula "1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0"))
               (rule "elimEventOnRigidTerm1" (formula "1") (term "1,0"))
               (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0,0"))
               (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0,0"))
               (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0,0"))
               (rule "elimEventOnPV" (formula "1") (term "0,0"))
               (rule "eqSymm" (formula "1"))
               (rule "updateParallelToReadEventOnNoRaW" (formula "7") (inst "tempVar=tempVar_1"))
               (branch "Case 1"
                  (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
                  (rule "disjointWithSingleton2" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "5") (term "2") (ifseqformula "1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                  (rule "applyEq" (formula "5") (term "2") (ifseqformula "2"))
                  (rule "elementOfSingleton" (formula "5"))
                  (rule "eqClose" (formula "5") (term "1"))
                  (rule "concrete_and_3" (formula "5"))
                  (rule "updateParallelToWriteEventOnNoRaW" (formula "8") (inst "tempVar=tempVar_2"))
                  (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
                  (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                  (rule "readEventBeforeNoRaW" (formula "9") (inst "tempVar=tempVar_3"))
                  (branch "Case 1"
                     (rule "elimEventOnRigidTerm1" (formula "1") (term "1,0"))
                     (rule "andLeft" (formula "1"))
                     (rule "disjointWithSingleton2" (formula "2"))
                     (rule "notLeft" (formula "2"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "4"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                     (rule "close" (formula "11") (ifseqformula "6"))
                  )
                  (branch "Case 2"
                     (rule "elimEventOnRigidTerm1" (formula "1") (term "1,0"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "disjointWithSingleton2" (formula "7"))
                     (rule "notRight" (formula "7"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "1") (term "2") (ifseqformula "2"))
                     (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "5"))
                     (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "6"))
                     (rule "concrete_and_1" (formula "11"))
                     (rule "applyEq" (formula "1") (term "2") (ifseqformula "5"))
                     (rule "elementOfSingleton" (formula "1"))
                     (rule "eqClose" (formula "1") (term "1"))
                     (rule "concrete_and_3" (formula "1"))
                     (rule "eqClose" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "4"))
                     (rule "setMinusItself" (formula "10") (term "0"))
                     (rule "noRaWOnEmptySet" (formula "10"))
                     (rule "closeTrue" (formula "10"))
                  )
               )
               (branch "Case 2"
                  (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "disjointWithSingleton1" (formula "5"))
                  (rule "notRight" (formula "5"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                  (rule "applyEq" (formula "1") (term "2") (ifseqformula "2"))
                  (rule "elementOfSingleton" (formula "1"))
                  (rule "eqClose" (formula "1") (term "1"))
                  (rule "concrete_and_3" (formula "1"))
                  (rule "close" (formula "6") (ifseqformula "1"))
               )
            )
         )
         (branch "Null Reference (w_1 = null)"
            (rule "false_right" (formula "7"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
            (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0"))
            (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "close" (formula "5") (ifseqformula "1"))
         )
      )
      (branch "Null Reference (wt2 = null)"
         (rule "false_right" (formula "6"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
         (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0"))
         (rule "elimEventOnPV" (formula "1") (term "0"))
         (rule "close" (formula "4") (ifseqformula "1"))
      )
   )
   (branch "Null Reference (w = null)"
      (rule "false_right" (formula "6"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
      (rule "applyUpdateParallelToEventOnPV" (formula "1") (term "0"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "close" (formula "5") (ifseqformula "1"))
   )
)
(branch "Null Reference (wt1 = null)"
   (rule "false_right" (formula "6"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "close" (formula "5") (ifseqformula "1"))
)
)
}
