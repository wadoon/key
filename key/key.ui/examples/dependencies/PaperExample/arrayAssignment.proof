\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 02 11:32:34 CEST 2019
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_HIGH
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , dependencies-dependencies\\:on
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "src";

\predicates{
  
}

\programVariables {
  int[] array;
  int i;
}


\problem {
     !array = null
   & wellFormed(heap)
   & noR(allFields(array))
   & noW(allFields(array))
-> {i:=Z(0(#))}
     \<{
                         while ( i<array.length ) {
           array[i]=1;
           i++;
         }
       }\> noRaW(allFields(array))

}

\proof {
(keyLog "0" (keyUser "Asma" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "1040")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(builtin "Loop (Scope) Invariant" (formula "5") (newnames "heapBefore_LOOP,iBefore_LOOP,i_0,timestamp_0,heap_After_LOOP,anon_heap_LOOP,anon_MemAcc_LOOP,o,f,variant"))
(branch "Invariant Initially Valid"
   (rule "applyOnRigidFormula" (formula "5"))
   (rule "simplifyUpdate2" (formula "5") (term "1"))
   (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "1"))
   (rule "concrete_and_3" (formula "5"))
   (rule "applyOnRigidFormula" (formula "5"))
   (rule "applyOnRigidFormula" (formula "5") (term "0"))
   (rule "propagateNonEventUpdateONnoR" (formula "5") (term "1"))
   (rule "simplifyUpdate1" (formula "5") (term "0,1"))
   (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "2"))
   (rule "concrete_and_3" (formula "5"))
   (rule "applyOnRigidFormula" (formula "5") (term "1"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1"))
   (rule "applyOnPV" (formula "5") (term "0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0"))
   (rule "applyOnPV" (formula "5") (term "0,0"))
   (rule "qeq_literals" (formula "5") (term "0"))
   (rule "concrete_and_1" (formula "5"))
   (rule "inEqSimp_leqRight" (formula "5"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
   (rule "inInt" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1") (term "0"))
   (rule "concrete_and_2" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Invariant Preserved and Used"
   (rule "false_to_not_true" (formula "7") (term "0,1,0,1,1,1,1"))
   (rule "inInt" (formula "4") (term "1,1,1"))
   (rule "concrete_and_3" (formula "4") (term "1,1"))
   (rule "elementOfAllFields" (formula "7") (term "0,0,0,0,1,0,1,1,0,1,1,1,1"))
   (rule "eqSymm" (formula "7") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "7") (term "0,1,1,1,0,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "7") (term "0,0,1,1,1"))
   (rule "sequentialToParallel2" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "simplifyUpdate2" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "applyOnParallel" (formula "4") (term "0"))
   (rule "applyOnParallel" (formula "5") (term "0"))
   (rule "applyOnParallel" (formula "6") (term "1,0"))
   (rule "applyUpdateOnEventStar" (formula "4") (term "1,0"))
   (rule "simplifyUpdate1" (formula "4") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "4") (term "0,1,0"))
   (rule "applyOnElementary" (formula "4") (term "0,0"))
   (rule "simplifyUpdate1" (formula "4") (term "0,0,0"))
   (rule "applyOnElementary" (formula "5") (term "0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,0,0"))
   (rule "applyUpdateOnEventStar" (formula "5") (term "1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,1,0"))
   (rule "applyOnParallel" (formula "6") (term "0,1,0"))
   (rule "applyUpdateOnEventStar" (formula "6") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "1,1,1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "0,1,1,0"))
   (rule "applyOnElementary" (formula "6") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "0,1,0,1,0"))
   (rule "applyOnParallel" (formula "6") (term "0,0,1,0"))
   (rule "applyOnElementary" (formula "6") (term "1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "0,1,0,0,1,0"))
   (rule "applyOnElementary" (formula "6") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "6") (term "0,0,0,0,1,0"))
   (rule "sequentialToParallel2" (formula "9") (term "1"))
   (rule "applyOnParallel" (formula "9") (term "1,0,1"))
   (rule "applyUpdateOnEventStar" (formula "9") (term "1,1,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "1,1,1,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,1,0,1"))
   (rule "applyOnParallel" (formula "9") (term "0,1,0,1"))
   (rule "applyOnElementary" (formula "9") (term "1,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,1,0,1"))
   (rule "applyOnParallel" (formula "9") (term "0,0,1,0,1"))
   (rule "applyOnElementary" (formula "9") (term "1,0,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,0,1,0,1"))
   (rule "applyOnElementary" (formula "9") (term "0,0,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,0,0,1,0,1"))
   (rule "sequentialToParallel2" (formula "9"))
   (rule "applyOnParallel" (formula "9") (term "1,0"))
   (rule "applyOnParallel" (formula "9") (term "1,1,0"))
   (rule "applyOnParallel" (formula "9") (term "0,1,0"))
   (rule "applyUpdateOnEventStar" (formula "9") (term "1,1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,1,1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,1,1,0"))
   (rule "applyOnParallel" (formula "9") (term "0,1,1,0"))
   (rule "applyOnElementary" (formula "9") (term "1,0,1,0"))
   (rule "applyOnPV" (formula "9") (term "0,1,0,1,0"))
   (rule "applyOnElementary" (formula "9") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,0,1,0"))
   (rule "applyOnElementary" (formula "9") (term "1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,1,1,0"))
   (rule "applyOnParallel" (formula "9") (term "0,0,1,1,0"))
   (rule "applyOnElementary" (formula "9") (term "1,0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,0,1,1,0"))
   (rule "applyOnElementary" (formula "9") (term "0,0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,0,0,1,1,0"))
   (rule "sequentialToParallel2" (formula "9"))
   (rule "applyOnElementary" (formula "9") (term "1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "9") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "4"))
   (rule "simplifyUpdate1" (formula "4") (term "1"))
   (rule "applyUpdateParallelToEventStarOnPV" (formula "4") (term "0"))
   (rule "elimEventOnRigidTerm1" (formula "4") (term "1"))
   (rule "applyOnPV" (formula "4") (term "0"))
   (rule "applyOnRigidFormula" (formula "5"))
   (rule "simplifyUpdate1" (formula "5") (term "1"))
   (rule "applyUpdateParallelToEventStarOnPV" (formula "5") (term "0"))
   (rule "applyOnPV" (formula "5") (term "0"))
   (rule "parallelUpdateAssociative" (formula "6") (term "0"))
   (rule "parallelUpdateAssociative" (formula "9") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
   (rule "applyOnRigidTerm" (formula "5") (term "1"))
   (rule "elimEventStarOnPV" (formula "5") (term "0,1"))
   (rule "parallelUpdateAssociative" (formula "6") (term "0,0"))
   (rule "parallelUpdateAssociative" (formula "9") (term "0,0,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,0,1,0"))
   (rule "elimEventStarOnPV" (formula "9") (term "0,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,1,0,1,0"))
   (rule "applyUpdateParallelToEventStarOnPV" (formula "9") (term "0,1,0,1,0"))
   (rule "elimEventOnRigidTerm1" (formula "9") (term "1,1,0,1,0"))
   (rule "applyOnPV" (formula "9") (term "0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
   (rule "parallelUpdateAssociative" (formula "6") (term "0,0,0"))
   (rule "parallelUpdateAssociative" (formula "9") (term "0,0"))
   (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "9") (term "0"))
   (rule "parallelUpdateAssociative" (formula "9") (term "0,0,0"))
   (rule "parallelUpdateAssociative" (formula "9") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "5"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
   (rule "assignment" (formula "9") (term "1"))
   (rule "sequentialToParallel2" (formula "9") (term "1"))
   (rule "applyOnElementary" (formula "9") (term "1,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,1"))
   (rule "sequentialToParallel2" (formula "9"))
   (rule "applyOnParallel" (formula "9") (term "1,0"))
   (rule "applyOnElementary" (formula "9") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,1,0"))
   (rule "elimEventOnRigidTerm1" (formula "9") (term "0,0,1,0"))
   (rule "applyOnElementary" (formula "9") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,1,1,0"))
   (rule "applyUpdateParallelToEventStarOnPV" (formula "9") (term "1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,1,1,0"))
   (rule "applyOnPV" (formula "9") (term "1,0,1,1,0"))
   (rule "elimEventOnRigidTerm1" (formula "9") (term "0,0,1,1,0"))
   (rule "parallelUpdateAssociative" (formula "9") (term "0"))
   (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "9") (term "0,0"))
   (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "9") (term "0"))
   (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=x_1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
   (rule "compound_less_than_comparison_2" (formula "9") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "9") (term "1"))
   (rule "sequentialToParallel2" (formula "9") (term "1"))
   (rule "applyOnElementary" (formula "9") (term "1,0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,0,1"))
   (rule "sequentialToParallel2" (formula "9"))
   (rule "applyOnParallel" (formula "9") (term "1,0"))
   (rule "applyOnElementary" (formula "9") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,1,0"))
   (rule "applyUpdateParallelToEventStarOnPV" (formula "9") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "9") (term "0,0,1,0"))
   (rule "applyOnElementary" (formula "9") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,1,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "1,0,1,1,0"))
   (rule "parallelUpdateAssociative" (formula "9") (term "0"))
   (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "9") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
   (rule "applyUpdateParallelToEventStarOnPV" (formula "9") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "9") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "9") (term "1,0,1,0"))
   (rule "elimEventOnRigidTerm1" (formula "9") (term "0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,1,0"))
   (rule "add_literals" (formula "9") (term "0,0,1,0"))
   (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "9") (term "0"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3"))
   (rule "assignment_read_length" (formula "9"))
   (branch "Normal Execution (array != null)"
      (rule "sequentialToParallel2" (formula "9"))
      (rule "applyOnElementary" (formula "9") (term "1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,1,0"))
      (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "9") (term "0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,1,0,0"))
      (rule "elimEventStarOnPV" (formula "9") (term "0,0,1,0,0"))
      (rule "less_than_comparison_simple" (formula "9") (term "1"))
      (rule "sequentialToParallel2" (formula "9"))
      (rule "applyOnElementary" (formula "9") (term "1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,1,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "9") (term "2,0,1,0"))
      (rule "elimEventOnRigidTerm1" (formula "9") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,0,0,1,0"))
      (rule "applyUpdateParallelToEventStarOnPV" (formula "9") (term "1,0,0,1,0"))
      (rule "applyUpdateParallelToEventStarOnPV" (formula "9") (term "0,0,0,1,0"))
      (rule "applyOnPV" (formula "9") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,0,1,0"))
      (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "9") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,0"))
      (rule "pullOut" (formula "6") (term "0,1") (inst "sk=allFields_0"))
      (rule "simplifyUpdate2" (formula "6"))
      (rule "eqSymm" (formula "6") (term "1"))
      (rule "applyOnRigidFormula" (formula "6"))
      (rule "elimEventOnRigidTerm1" (formula "6") (term "0"))
      (rule "eqSymm" (formula "6"))
      (rule "applyOnRigidTerm" (formula "6") (term "0"))
      (rule "elimEventStarOnPV" (formula "6") (term "0,0"))
      (rule "eqSymm" (formula "6"))
      (rule "eventStarBeforNoR" (formula "7"))
      (rule "arrayLengthIsAnInt" (formula "5") (term "0"))
      (rule "inInt" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "arrayLengthNotNegative" (formula "5") (term "0"))
      (rule "ifSplit" (formula "11"))
      (branch "if x_1 true"
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyUpdateParallelToEventStarOnPV" (formula "1") (term "0"))
         (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "ifthenelse_concrete3" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "replace_known_left" (formula "12") (term "0,0,1,0,0") (ifseqformula "1"))
         (rule "ifthenelse_true" (formula "12") (term "0,1,0,0"))
         (rule "assignment_to_primitive_array_component" (formula "12"))
         (branch "Normal Execution (array != null)"
            (rule "sequentialToParallel2" (formula "12"))
            (rule "applyOnElementary" (formula "12") (term "1,0"))
            (rule "simplifyUpdate1" (formula "12") (term "0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "12") (term "0"))
            (rule "applyOnRigidTerm" (formula "12") (term "0,1,0,0"))
            (rule "simplifyUpdate1" (formula "12") (term "3,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "12") (term "0,0,1,0,0"))
            (rule "elimEventOnRigidTerm1" (formula "12") (term "3,0,1,0,0"))
            (rule "elimEventStarOnPV" (formula "12") (term "1,0,1,0,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "12") (term "0,0,1,0,0"))
            (rule "applyOnPV" (formula "12") (term "0,0,1,0,0"))
            (rule "applyOnRigidTerm" (formula "12") (term "2,0,1,0,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "12") (term "0,2,0,1,0,0"))
            (rule "applyOnPV" (formula "12") (term "0,2,0,1,0,0"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (rule "concrete_or_1" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "postincrement" (formula "11") (term "1"))
            (rule "compound_int_cast_expression" (formula "11") (term "1") (inst "#v=x_1"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_4"))
            (rule "remove_parentheses_right" (formula "11") (term "1"))
            (rule "assignmentAdditionInt" (formula "11") (term "1"))
            (rule "translateJavaAddInt" (formula "11") (term "0,0,1"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "applyOnElementary" (formula "11") (term "1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "11") (term "0"))
            (rule "applyOnRigidTerm" (formula "11") (term "0,1,0,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "1,0,1,0,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,0,1,0,0"))
            (rule "applyOnPV" (formula "11") (term "1,0,1,0,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "0,0,1,0,0"))
            (rule "widening_identity_cast_5" (formula "11") (term "1"))
            (rule "assignment" (formula "11") (term "1"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "applyOnElementary" (formula "11") (term "1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "0,1,0"))
            (rule "applyOnPV" (formula "11") (term "0,1,0"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "applyOnElementary" (formula "11") (term "1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "11") (term "0,0"))
            (rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "11") (term "1,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "11") (term "0"))
            (rule "assignment" (formula "11") (term "1"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "applyOnElementary" (formula "11") (term "1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "0,1,0"))
            (rule "sequentialToParallel2" (formula "11"))
            (rule "applyOnElementary" (formula "11") (term "1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "11") (term "0,0"))
            (rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "11") (term "1,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,0"))
            (rule "shiftOnlyEventWithUpdateAtFirstPlace" (formula "11") (term "0"))
            (rule "emptyIndexedLoopScope" (formula "11") (term "1"))
            (rule "ifthenelse_same_branches_for" (formula "11") (term "1"))
            (rule "emptyModality" (formula "11") (term "1"))
            (rule "applyOnRigidFormula" (formula "11"))
            (rule "applyOnRigidFormula" (formula "11") (term "1"))
            (rule "simplifyUpdate2" (formula "11") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0"))
            (rule "simplifyUpdate2" (formula "11") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,1"))
            (rule "simplifyUpdate2" (formula "11") (term "1,1,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,0,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "0,0,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "1,0,0"))
            (rule "applyOnPV" (formula "11") (term "0,0,0"))
            (rule "boolean_not_equal_2" (formula "11") (term "0,0"))
            (rule "concrete_impl_2" (formula "11") (term "0"))
            (rule "concrete_and_1" (formula "11"))
            (rule "impRight" (formula "11"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "12") (term "1"))
            (rule "simplifyUpdate1" (formula "12") (term "0,1"))
            (rule "simplifyUpdate1" (formula "12") (term "1,1"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "12") (term "1,1"))
            (rule "applyOnPV" (formula "12") (term "1,1"))
            (rule "applyOnRigidFormula" (formula "12") (term "0"))
            (rule "simplifyUpdate2" (formula "12") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "10"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "10") (term "0"))
            (rule "simplifyUpdate1" (formula "10") (term "1"))
            (rule "applyOnPV" (formula "10") (term "0"))
            (rule "elimEventStarOnRigidTerm1" (formula "10") (term "1"))
            (rule "boolean_not_equal_2" (formula "10"))
            (rule "false_right" (formula "10"))
            (rule "applyOnRigidTerm" (formula "11") (term "0,1"))
            (rule "simplifyUpdate1" (formula "11") (term "1,0,1"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0"))
            (rule "simplifyUpdate2" (formula "11") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "11") (term "1,0,1"))
            (rule "simplifyUpdate1" (formula "11") (term "1,1,0,1"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "0,1,0,1"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "1,1,0,1"))
            (rule "applyOnPV" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
            (rule "mul_literals" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,1,0"))
            (rule "precOfInt" (formula "11") (term "1"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0,0,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0,0,0"))
            (rule "applyOnPV" (formula "11") (term "1,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,0,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,0,0,0,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "0,0,0,0,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "1,0,0,0,0"))
            (rule "applyOnPV" (formula "11") (term "0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,1,0"))
            (rule "simplifyUpdate2" (formula "11") (term "0,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "11") (term "1,0,1,1"))
            (rule "elimEventStarOnPV" (formula "11") (term "0,1,0,1,1"))
            (rule "applyOnRigidTerm" (formula "11") (term "1,1,0,1"))
            (rule "elimEventStarOnPV" (formula "11") (term "0,1,1,0,1"))
            (rule "applyOnRigidTerm" (formula "11") (term "0,1,0,0,0"))
            (rule "elimEventStarOnPV" (formula "11") (term "0,0,1,0,0,0"))
            (rule "replace_known_left" (formula "11") (term "1,0,0,0") (ifseqformula "1"))
            (rule "concrete_and_3" (formula "11") (term "0,0,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "0,1,0,0,1,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,0,1,0"))
            (rule "simplifyUpdate2" (formula "11") (term "0,0,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "11") (term "1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "2,1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,1,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "0,1,1,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "2,1,1,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "1,1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "11") (term "0,1,1,0,0,1,0"))
            (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,0,0,0,1,0"))
            (rule "simplifyUpdate2" (formula "11") (term "0,1,0,0,0,1,0"))
            (rule "elimEventOnRigidFormula1" (formula "11") (term "0,1,0,0,0,1,0"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,0,0,0,1,0"))
            (rule "elimEventStarOnPV" (formula "11") (term "1,0,0,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "0,0,0,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "11") (term "1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "2,1,1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,1,1,0,0,1,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "0,1,1,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "2,1,1,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "1,1,1,0,0,1,0"))
            (rule "applyOnPV" (formula "11") (term "0,1,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,1"))
            (rule "applyOnRigidFormula" (formula "11") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1"))
            (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,1,1"))
            (rule "add_literals" (formula "11") (term "1,1,0,1,1"))
            (rule "times_zero_1" (formula "11") (term "1,0,1,1"))
            (rule "add_zero_right" (formula "11") (term "0,1,1"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,1,1"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,1"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,1"))
            (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,1"))
            (rule "add_literals" (formula "11") (term "1,0,1,1"))
            (rule "times_zero_1" (formula "11") (term "0,1,1"))
            (rule "leq_literals" (formula "11") (term "1,1"))
            (rule "concrete_and_3" (formula "11") (term "1"))
            (rule "applyOnRigidFormula" (formula "11") (term "0,1,1,0,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,0,1,1,0,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "1,0,1,1,0,0,0,1,0"))
            (rule "applyOnRigidTerm" (formula "11") (term "0,0,1,1,0,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "2,0,0,1,1,0,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "11") (term "1,0,0,1,1,0,0,0,1,0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "11") (term "0,0,0,1,1,0,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "2,0,0,1,1,0,0,0,1,0"))
            (rule "elimEventOnRigidTerm1" (formula "11") (term "1,0,0,1,1,0,0,0,1,0"))
            (rule "applyOnPV" (formula "11") (term "0,0,0,1,1,0,0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "11") (term "1"))
            (rule "times_zero_2" (formula "11") (term "1,0,1"))
            (rule "add_zero_right" (formula "11") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1"))
            (rule "mul_literals" (formula "11") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "1"))
            (rule "concrete_and_3" (formula "11"))
            (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "5"))
            (rule "leq_literals" (formula "11") (term "0,0,0"))
            (rule "concrete_or_1" (formula "11") (term "0,0"))
            (rule "concrete_and_1" (formula "11") (term "0"))
            (rule "andRight" (formula "11"))
            (branch "Case 1"
               (rule "pullOut" (formula "11") (term "0,1") (inst "sk=allFields_1"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "eqSymm" (formula "1") (term "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "elimEventOnRigidTerm1" (formula "1") (term "0"))
               (rule "eqSymm" (formula "1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0"))
               (rule "elimEventStarOnPV" (formula "1") (term "0,0"))
               (rule "eqSymm" (formula "1"))
               (rule "eventStarBeforNoR" (formula "12"))
               (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "1") (userinteraction))
               (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "8") (userinteraction))
               (rule "close" (formula "12") (ifseqformula "9"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "11") (inst "sk=f_0"))
               (rule "allRight" (formula "11") (inst "sk=o_0"))
               (rule "orRight" (formula "11"))
               (rule "orRight" (formula "11"))
               (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "14"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (rule "concrete_and_2" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (rule "concrete_and_2" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "close" (formula "14") (ifseqformula "1"))
            )
         )
         (branch "Null Reference (array = null)"
            (rule "false_right" (formula "13"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "elimEventStarOnPV" (formula "1") (term "0"))
            (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
            (rule "close" (formula "12") (ifseqformula "1"))
         )
         (branch "Index Out of Bounds (array != null, but i Out of Bounds!)"
            (rule "false_right" (formula "13"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnRigidFormula" (formula "12"))
            (rule "elimEventOnRigidTerm1" (formula "12") (term "1"))
            (rule "elimEventStarOnPV" (formula "12") (term "0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "1") (term "0,1"))
            (rule "elimEventOnRigidTerm1" (formula "1") (term "1,1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "applyUpdateParallelToEventStarOnPV" (formula "1") (term "1,0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "elimEventStarOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (rule "concrete_or_1" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (rule "concrete_and_2" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (rule "concrete_and_2" (formula "6"))
            (rule "closeFalse" (formula "6"))
         )
      )
      (branch "if x_1 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "10"))
         (rule "applyUpdateParallelToEventStarOnPV" (formula "10") (term "0"))
         (rule "simplifyUpdate1" (formula "10") (term "1"))
         (rule "applyOnPV" (formula "10") (term "0"))
         (rule "elimEventOnRigidTerm1" (formula "10") (term "1"))
         (rule "ifthenelse_concrete3" (formula "10"))
         (rule "boolean_not_equal_2" (formula "10") (term "1"))
         (rule "concrete_or_4" (formula "10"))
         (rule "replace_known_right" (formula "12") (term "0,0,1,0,0") (ifseqformula "10"))
         (rule "ifthenelse_false" (formula "12") (term "0,1,0,0"))
         (rule "inEqSimp_geqRight" (formula "10"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "1"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,0"))
         (rule "times_zero_1" (formula "8") (term "0"))
         (rule "leq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "applyEq" (formula "12") (term "1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "7"))
         (rule "polySimp_pullOutFactor2" (formula "12") (term "0,1,0,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "1,0,1,0,0,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "12") (term "0,1,0,0,0,0,0,0,0,0"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
         (rule "applyEq" (formula "11") (term "0,1,0,0,0") (ifseqformula "6"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "emptyIndexedLoopScope" (formula "10") (term "1"))
         (rule "ifthenelse_same_branches_for" (formula "10") (term "1"))
         (rule "emptyModality" (formula "10") (term "1"))
         (rule "applyOnRigidFormula" (formula "10"))
         (rule "applyOnRigidFormula" (formula "10") (term "1"))
         (rule "simplifyUpdate2" (formula "10") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0"))
         (rule "simplifyUpdate2" (formula "10") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,1"))
         (rule "simplifyUpdate2" (formula "10") (term "1,1,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0"))
         (rule "simplifyUpdate1" (formula "10") (term "1,0,0"))
         (rule "applyUpdateParallelToEventStarOnPV" (formula "10") (term "0,0,0"))
         (rule "elimEventOnRigidTerm1" (formula "10") (term "1,0,0"))
         (rule "applyOnPV" (formula "10") (term "0,0,0"))
         (rule "boolean_equal" (formula "10") (term "0,0"))
         (rule "concrete_impl_1" (formula "10") (term "0"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,1,1"))
         (rule "simplifyUpdate2" (formula "10") (term "1,0,1,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "1,1,1"))
         (rule "simplifyUpdate1" (formula "10") (term "1,1,1,1"))
         (rule "simplifyUpdate1" (formula "10") (term "0,1,1,1"))
         (rule "applyUpdateParallelToEventStarOnPV" (formula "10") (term "1,1,1,1"))
         (rule "applyOnPV" (formula "10") (term "1,1,1,1"))
         (rule "applyOnRigidFormula" (formula "10") (term "0,0,1"))
         (rule "applyUpdateParallelToEventStarOnPV" (formula "10") (term "0,0,0,1"))
         (rule "simplifyUpdate1" (formula "10") (term "1,0,0,1"))
         (rule "applyOnPV" (formula "10") (term "0,0,0,1"))
         (rule "elimEventOnRigidTerm1" (formula "10") (term "1,0,0,1"))
         (rule "boolean_equal" (formula "10") (term "0,0,1"))
         (rule "concrete_not_1" (formula "10") (term "0,1"))
         (rule "concrete_impl_2" (formula "10") (term "1"))
         (rule "concrete_and_3" (formula "10"))
         (rule "updateParallelToEventStarOnNoRaW" (formula "10"))
         (branch "Case 1"
            (rule "simplifyUpdate1" (formula "10") (term "0"))
            (rule "applyOnRigidTerm" (formula "10") (term "0"))
            (rule "elimEventStarOnPV" (formula "10") (term "0,0"))
            (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "6") (userinteraction))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "6"))
            (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "6") (userinteraction))
            (rule "noReadAndNoRaW" (formula "10") (userinteraction))
            (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "6"))
            (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "3"))
            (rule "concrete_or_3" (formula "10") (term "0"))
            (rule "ifthenelse_true_for" (formula "10"))
            (rule "closeTrue" (formula "10"))
         )
         (branch "Case 2"
            (rule "orRight" (formula "10"))
            (rule "pullOut" (formula "12") (term "0,1") (inst "sk=allFields_1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "eqSymm" (formula "1") (term "1"))
            (rule "simplifyEventUpdateNoRaW" (formula "13"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "elimEventStarOnRigidTerm1" (formula "1") (term "0"))
            (rule "eqSymm" (formula "1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0"))
            (rule "elimEventStarOnPV" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "pullOut" (formula "12") (term "0,1") (inst "sk=allFields_2"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "eqSymm" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "elimEventOnRigidTerm1" (formula "1") (term "0"))
            (rule "eqSymm" (formula "1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0"))
            (rule "elimEventStarOnPV" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "eventStarBeforNoW" (formula "13"))
            (rule "pullOut" (formula "12") (term "0,1") (inst "sk=allFields_3"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "eqSymm" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "elimEventStarOnRigidTerm1" (formula "1") (term "0"))
            (rule "eqSymm" (formula "1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0"))
            (rule "elimEventStarOnPV" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "eventStarBeforNoR" (formula "13"))
            (rule "noReadKnownForSupersetOrSubset" (formula "13") (term "1") (ifseqformula "10") (userinteraction))
            (rule "applyOnRigidFormula" (formula "13"))
            (rule "elimEventOnRigidFormula1" (formula "13") (term "0"))
            (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "9"))
            (rule "subsetOfItself" (formula "13") (term "0"))
            (rule "ifthenelse_true_for" (formula "13"))
            (rule "closeTrue" (formula "13"))
         )
      )
   )
   (branch "Null Reference (array = null)"
      (rule "false_right" (formula "10"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "elimEventOnRigidTerm1" (formula "1") (term "1"))
      (rule "elimEventStarOnPV" (formula "1") (term "0"))
      (rule "close" (formula "9") (ifseqformula "1"))
   )
)
)
}
