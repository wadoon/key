                    class : CLASS                : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                      For : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
               implements : IMPLEMENTS           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                 Iterable : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
                 \n\n     : WS                   : DEFAULT_MODE
                      int : INT                  : DEFAULT_MODE
                        [ : LBRACK               : DEFAULT_MODE
                        ] : RBRACK               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        a : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                   \n     : WS                   : DEFAULT_MODE
                  Trivial : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                       it : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                   \n     : WS                   : DEFAULT_MODE
                      For : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        f : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                 \n\n     : WS                   : DEFAULT_MODE
                      //@ : JML_START            : jmlContract
                          : WS_CONTRACT          : jmlContract
                  ensures : ENSURES              : jmlExpr
                          : WS                   : jmlExpr
                  \result : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       == : EQUAL                : jmlExpr
                          : WS                   : jmlExpr
                        ( : LPAREN               : jmlExpr
                     \sum : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                      int : INT                  : jmlExpr
                          : WS                   : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        0 : DECIMAL_LITERAL      : jmlExpr
                          : WS                   : jmlExpr
                       <= : LE                   : jmlExpr
                          : WS                   : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       && : AND                  : jmlExpr
                          : WS                   : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                        < : LT                   : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        . : DOT                  : jmlExpr
                   length : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        [ : LBRACK               : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                        ] : RBRACK               : jmlExpr
                        ) : RPAREN               : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : JML_END              : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                      int : INT                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                      sum : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                      int : INT                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        s : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        = : ASSIGN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        0 : DECIMAL_LITERAL      : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                      int : INT                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        z : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        = : ASSIGN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        a : IDENTIFIER           : DEFAULT_MODE
                        . : DOT                  : DEFAULT_MODE
                   length : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                 \n\n     : WS                   : DEFAULT_MODE
                      /*@ : JML_START            : jmlContract
                          : WS_CONTRACT          : jmlContract
              maintaining : LOOP_INVARIANT       : jmlExpr
                          : WS                   : jmlExpr
                        s : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       == : EQUAL                : jmlExpr
                          : WS                   : jmlExpr
                        ( : LPAREN               : jmlExpr
                     \sum : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                      int : INT                  : jmlExpr
                          : WS                   : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        0 : DECIMAL_LITERAL      : jmlExpr
                          : WS                   : jmlExpr
                       <= : LE                   : jmlExpr
                          : WS                   : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       && : AND                  : jmlExpr
                          : WS                   : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                        < : LT                   : jmlExpr
                          : WS                   : jmlExpr
                   \index : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        [ : LBRACK               : jmlExpr
                        j : IDENTIFIER           : jmlExpr
                        ] : RBRACK               : jmlExpr
                        ) : RPAREN               : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
              maintaining : LOOP_INVARIANT       : jmlExpr
                          : WS                   : jmlExpr
                        0 : DECIMAL_LITERAL      : jmlExpr
                          : WS                   : jmlExpr
                       <= : LE                   : jmlExpr
                          : WS                   : jmlExpr
                   \index : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       && : AND                  : jmlExpr
                          : WS                   : jmlExpr
                   \index : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       <= : LE                   : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        . : DOT                  : jmlExpr
                   length : IDENTIFIER           : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
               decreasing : DECREASES            : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        . : DOT                  : jmlExpr
                   length : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                        - : SUB                  : jmlExpr
                          : WS                   : jmlExpr
                   \index : IDENTIFIER           : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
               assignable : ASSIGNABLE           : jmlExpr
                          : WS                   : jmlExpr
        \strictly_nothing : IDENTIFIER           : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                       */ : JML_END              : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                      for : FOR                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                      int : INT                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        i : IDENTIFIER           : DEFAULT_MODE
                        : : COLON                : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        a : IDENTIFIER           : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        s : IDENTIFIER           : DEFAULT_MODE
                       += : ADD_ASSIGN           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        i : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                   return : RETURN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        s : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                   \n     : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
                 \n\n     : WS                   : DEFAULT_MODE
                      /*@ : JML_START            : jmlContract
                          : WS_CONTRACT          : jmlContract
                 requires : REQUIRES             : jmlExpr
                          : WS                   : jmlExpr
           \invariant_for : IDENTIFIER           : jmlExpr
                        ( : LPAREN               : jmlExpr
                        f : IDENTIFIER           : jmlExpr
                        ) : RPAREN               : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                 diverges : DIVERGES             : jmlExpr
                          : WS                   : jmlExpr
                     true : BOOL_LITERAL         : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                  ensures : ENSURES              : jmlExpr
                          : WS                   : jmlExpr
                    false : BOOL_LITERAL         : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                       */ : JML_END              : DEFAULT_MODE
                   \n     : WS                   : DEFAULT_MODE
                     void : VOID                 : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
             infiniteLoop : IDENTIFIER           : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                      //@ : JML_START            : jmlContract
                          : WS_CONTRACT          : jmlContract
              maintaining : LOOP_INVARIANT       : jmlExpr
                          : WS                   : jmlExpr
           \invariant_for : IDENTIFIER           : jmlExpr
                        ( : LPAREN               : jmlExpr
                        f : IDENTIFIER           : jmlExpr
                        ) : RPAREN               : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : JML_END              : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                      //@ : JML_START            : jmlContract
                          : WS_CONTRACT          : jmlContract
               assignable : ASSIGNABLE           : jmlExpr
                          : WS                   : jmlExpr
        \strictly_nothing : IDENTIFIER           : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : JML_END              : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                      for : FOR                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                   Object : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        o : IDENTIFIER           : DEFAULT_MODE
                        : : COLON                : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        f : IDENTIFIER           : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                   \n     : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
                 \n\n     : WS                   : DEFAULT_MODE
                   public : PUBLIC               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                     java : IDENTIFIER           : DEFAULT_MODE
                        . : DOT                  : DEFAULT_MODE
                     util : IDENTIFIER           : DEFAULT_MODE
                        . : DOT                  : DEFAULT_MODE
                 Iterator : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                 iterator : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                   return : RETURN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                       it : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
                 \n\n     : WS                   : DEFAULT_MODE
                    class : CLASS                : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                  Trivial : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
               implements : IMPLEMENTS           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                     java : IDENTIFIER           : DEFAULT_MODE
                        . : DOT                  : DEFAULT_MODE
                     util : IDENTIFIER           : DEFAULT_MODE
                        . : DOT                  : DEFAULT_MODE
                 Iterator : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                   public : PUBLIC               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                  boolean : BOOLEAN              : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                  hasNext : IDENTIFIER           : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                   return : RETURN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                     true : BOOL_LITERAL         : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                   public : PUBLIC               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                   Object : IDENTIFIER           : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                     next : IDENTIFIER           : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                   return : RETURN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                     null : NULL_LITERAL         : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
               \n         : WS                   : DEFAULT_MODE
                   public : PUBLIC               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                     void : VOID                 : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                   remove : IDENTIFIER           : DEFAULT_MODE
                        ( : LPAREN               : DEFAULT_MODE
                        ) : RPAREN               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        { : LBRACE               : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
                   \n     : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
                       \n : WS                   : DEFAULT_MODE
                        } : RBRACE               : DEFAULT_MODE
                       \n : WS                   : DEFAULT_MODE
