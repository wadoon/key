                      /*@ : JML_START            : jmlContract
                          : WS_CONTRACT          : jmlContract
                   public : PUBLIC               : jmlContract
                          : WS_CONTRACT          : jmlContract
         normal_behaviour : NORMAL_BEHAVIOR      : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                 requires : REQUIRES             : jmlExpr
                          : WS                   : jmlExpr
                        ( : LPAREN               : jmlExpr
                  \forall : FORALL               : jmlExpr
                          : WS                   : jmlExpr
                      int : INT                  : jmlExpr
                          : WS                   : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        ( : LPAREN               : jmlExpr
                  \forall : FORALL               : jmlExpr
                          : WS                   : jmlExpr
                      int : INT                  : jmlExpr
                          : WS                   : jmlExpr
                        y : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        0 : DECIMAL_LITERAL      : jmlExpr
                          : WS                   : jmlExpr
                       <= : LE                   : jmlExpr
                          : WS                   : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       && : AND                  : jmlExpr
                          : WS                   : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                        < : LT                   : jmlExpr
                          : WS                   : jmlExpr
                        y : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       && : AND                  : jmlExpr
                          : WS                   : jmlExpr
                        y : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                        < : LT                   : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        . : DOT                  : jmlExpr
                   length : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        [ : LBRACK               : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                        ] : RBRACK               : jmlExpr
                          : WS                   : jmlExpr
                       <= : LE                   : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        [ : LBRACK               : jmlExpr
                        y : IDENTIFIER           : jmlExpr
                        ] : RBRACK               : jmlExpr
                        ) : RPAREN               : jmlExpr
                        ) : RPAREN               : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                  ensures : ENSURES              : jmlExpr
                          : WS                   : jmlExpr
                        ( : LPAREN               : jmlExpr
                        ( : LPAREN               : jmlExpr
                  \exists : EXISTS               : jmlExpr
                          : WS                   : jmlExpr
                      int : INT                  : jmlExpr
                          : WS                   : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        0 : DECIMAL_LITERAL      : jmlExpr
                          : WS                   : jmlExpr
                       <= : LE                   : jmlExpr
                          : WS                   : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       && : AND                  : jmlExpr
                          : WS                   : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                        < : LT                   : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        . : DOT                  : jmlExpr
                   length : IDENTIFIER           : jmlExpr
                        ; : SEMI                 : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        [ : LBRACK               : jmlExpr
                        x : IDENTIFIER           : jmlExpr
                        ] : RBRACK               : jmlExpr
                          : WS                   : jmlExpr
                       == : EQUAL                : jmlExpr
                          : WS                   : jmlExpr
                        v : IDENTIFIER           : jmlExpr
                        ) : RPAREN               : jmlExpr
                          : WS                   : jmlExpr
                        ? : QUESTION             : jmlExpr
                          : WS                   : jmlExpr
                        a : IDENTIFIER           : jmlExpr
                        [ : LBRACK               : jmlExpr
                  \result : IDENTIFIER           : jmlExpr
                        ] : RBRACK               : jmlExpr
                          : WS                   : jmlExpr
                       == : EQUAL                : jmlExpr
                          : WS                   : jmlExpr
                        v : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                        : : COLON                : jmlExpr
                          : WS                   : jmlExpr
                  \result : IDENTIFIER           : jmlExpr
                          : WS                   : jmlExpr
                       == : EQUAL                : jmlExpr
                          : WS                   : jmlExpr
                        - : SUB                  : jmlExpr
                        1 : DECIMAL_LITERAL      : jmlExpr
                        ) : RPAREN               : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
// This is a comment inside JML! : LINE_COMMENT_CONTRACT : jmlContract
                     \n\n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
               assignable : ASSIGNABLE           : jmlExpr
                          : WS                   : jmlExpr
        \strictly_nothing : IDENTIFIER           : jmlExpr
                        ; : SEMI_TOPLEVEL        : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                       {* : COMMENT_START        : jmlComment
                       \n : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                        M : JML_COMMENT_EVERY_CHAR : jmlComment
                        u : JML_COMMENT_EVERY_CHAR : jmlComment
                        l : JML_COMMENT_EVERY_CHAR : jmlComment
                        t : JML_COMMENT_EVERY_CHAR : jmlComment
                        l : JML_COMMENT_EVERY_CHAR : jmlComment
                        i : JML_COMMENT_EVERY_CHAR : jmlComment
                        n : JML_COMMENT_EVERY_CHAR : jmlComment
                        e : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                        c : JML_COMMENT_EVERY_CHAR : jmlComment
                        o : JML_COMMENT_EVERY_CHAR : jmlComment
                        m : JML_COMMENT_EVERY_CHAR : jmlComment
                        m : JML_COMMENT_EVERY_CHAR : jmlComment
                        e : JML_COMMENT_EVERY_CHAR : jmlComment
                        n : JML_COMMENT_EVERY_CHAR : jmlComment
                        t : JML_COMMENT_EVERY_CHAR : jmlComment
                        s : JML_COMMENT_EVERY_CHAR : jmlComment
                        ! : JML_COMMENT_EVERY_CHAR : jmlComment
                       \n : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                       *} : JML_COMMENT_END      : jmlContract
                     \n\n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                        @ : WS_CONTRACT_IGNORE   : jmlContract
                       */ : JML_END              : DEFAULT_MODE
                   \n\n   : WS                   : DEFAULT_MODE
                      int : INT                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
test_if_multiline_jml_is_interrupatable : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                     \n   : WS                   : DEFAULT_MODE
                      /*@ : JML_START            : jmlContract
                       \n : WS_CONTRACT_IGNORE   : jmlContract
                          : WS_CONTRACT          : jmlContract
                       {* : COMMENT_START        : jmlComment
                       \n : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                          : JML_COMMENT_EVERY_CHAR : jmlComment
                       */ : COMMENT_END          : DEFAULT_MODE
                     \n   : WS                   : DEFAULT_MODE
                      int : INT                  : DEFAULT_MODE
                          : WS                   : DEFAULT_MODE
here_should_be_java_again : IDENTIFIER           : DEFAULT_MODE
                        ; : SEMI                 : DEFAULT_MODE
                       \n : WS                   : DEFAULT_MODE
