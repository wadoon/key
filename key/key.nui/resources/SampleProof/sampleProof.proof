\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Dec 04 15:56:48 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=300
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_OFF
"
}

\bootclasspath "jre";

\javaSource "src";

\include "symbols.key";

\proofObligation "#Proof Obligation Settings
#Fri Dec 04 15:56:48 CET 2015
name=java.util.TimSort[java.util.TimSort\\:\\:newMergeCollapse()].JML normal_behavior operation contract.0
contract=java.util.TimSort[java.util.TimSort\\:\\:newMergeCollapse()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "dscheurer" ) (keyVersion "5b5738161a9b232836f7a23a6c0d3c7598477f99"))

(autoModeTime "223086570907")

(branch "dummy ID"
(rule "insert_constant_value" (formula "1") (term "0,3,0,0,0,1,0") (newnames "self,exc,heapAtPre,o,f"))
(rule "insert_constant_value" (formula "1") (term "0,3,1,0,0,0,0,0,0,0,0,0,1,1"))
(rule "translateJavaDivInt" (formula "1") (term "3,0,0,0,1,0"))
(rule "translateJavaDivInt" (formula "1") (term "3,1,0,0,0,0,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "2,0,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "10") (term "1,2,0,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "2,1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,2,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "0,2,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "2,1,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "10") (term "1,2,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "0,2,1,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,2,1,1,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "2,1,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "10") (term "1,2,1,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "2,1,0,0,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "10") (term "1,2,1,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "2"))
(rule "mul_literals" (formula "5") (term "1,2"))
(rule "polySimp_elimSub" (formula "6") (term "2"))
(rule "mul_literals" (formula "6") (term "1,2"))
(rule "polySimp_addComm0" (formula "10") (term "2,0,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "2,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "2,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "2,1,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "2,1,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "2"))
(rule "polySimp_addComm0" (formula "6") (term "2"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "7"))
(rule "times_zero_1" (formula "7") (term "1,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,0,0,0,1"))
(rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0,0,0,0,1"))
(rule "assignment" (formula "10") (term "1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "jdiv_axiom_inline" (formula "5") (term "3"))
(rule "qeq_literals" (formula "5") (term "0,3"))
(rule "ifthenelse_true" (formula "5") (term "3"))
(rule "div_literals" (formula "5") (term "3"))
(rule "jdiv_axiom_inline" (formula "10") (term "3,1,0,0,0,0,0,0,0,0,0,1"))
(rule "qeq_literals" (formula "10") (term "0,3,1,0,0,0,0,0,0,0,0,0,1"))
(rule "ifthenelse_true" (formula "10") (term "3,1,0,0,0,0,0,0,0,0,0,1"))
(rule "div_literals" (formula "10") (term "3,1,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7"))
(rule "mul_literals" (formula "7") (term "1"))
(rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "10") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "10") (term "1,0,0,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,1,1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfArrayRange" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "10") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
(rule "Class_invariant_axiom_for_java_util_TimSort" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "3"))
(rule "inInt" (formula "8") (term "1,1"))
(rule "concrete_and_3" (formula "8") (term "1"))
(rule "insert_constant_value" (formula "8") (term "0,3,1,0,0,0,1,0"))
(rule "insert_constant_value" (formula "8") (term "0,3,1,0,0,0,0,1,0"))
(rule "insert_constant_value" (formula "8") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
(rule "translateJavaDivInt" (formula "8") (term "3,1,0,0,0,1,0"))
(rule "translateJavaDivInt" (formula "8") (term "3,1,0,0,0,0,1,0"))
(rule "translateJavaDivInt" (formula "8") (term "3,1,0,1,0,0,0,0,0,0,1,0"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "eqSymm" (formula "22") (term "1,0"))
(rule "eqSymm" (formula "27"))
(rule "eqSymm" (formula "26"))
(rule "eqSymm" (formula "8"))
(rule "eqSymm" (formula "25"))
(rule "eqSymm" (formula "24"))
(rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
(rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
(rule "polySimp_elimSub" (formula "20") (term "2"))
(rule "mul_literals" (formula "20") (term "1,2"))
(rule "polySimp_elimSub" (formula "19") (term "2"))
(rule "mul_literals" (formula "19") (term "1,2"))
(rule "polySimp_elimSub" (formula "18") (term "2"))
(rule "mul_literals" (formula "18") (term "1,2"))
(rule "polySimp_elimSub" (formula "17") (term "2"))
(rule "mul_literals" (formula "17") (term "1,2"))
(rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
(rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
(rule "polySimp_addComm0" (formula "22") (term "0,2,0,1,0"))
(rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
(rule "polySimp_addComm0" (formula "20") (term "2"))
(rule "polySimp_addComm0" (formula "19") (term "2"))
(rule "polySimp_addComm0" (formula "18") (term "2"))
(rule "polySimp_addComm0" (formula "17") (term "2"))
(rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
(rule "sortsDisjointModuloNull" (formula "30"))
(rule "replace_known_right" (formula "30") (term "0") (ifseqformula "31"))
(rule "concrete_and_2" (formula "30"))
(rule "false_right" (formula "30"))
(rule "sortsDisjointModuloNull" (formula "29"))
(rule "replace_known_right" (formula "29") (term "1") (ifseqformula "33"))
(rule "concrete_and_4" (formula "29"))
(rule "false_right" (formula "29"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,1,0"))
(rule "add_literals" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,1,0"))
(rule "add_literals" (formula "10") (term "0,0,1,0"))
(rule "sortsDisjointModuloNull" (formula "26"))
(rule "replace_known_right" (formula "26") (term "0") (ifseqformula "32"))
(rule "concrete_and_2" (formula "26"))
(rule "false_right" (formula "26"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0"))
(rule "sortsDisjointModuloNull" (formula "25"))
(rule "replace_known_right" (formula "25") (term "0") (ifseqformula "30"))
(rule "concrete_and_2" (formula "25"))
(rule "false_right" (formula "25"))
(rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
(rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
(rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
(rule "inEqSimp_homoInEq0" (formula "13"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "13") (term "0"))
(rule "jdiv_axiom_inline" (formula "19") (term "3"))
(rule "mul_literals" (formula "19") (term "0,0,2,3"))
(rule "div_literals" (formula "19") (term "1,3"))
(rule "qeq_literals" (formula "19") (term "0,3"))
(rule "ifthenelse_true" (formula "19") (term "3"))
(rule "jdiv_axiom_inline" (formula "18") (term "3"))
(rule "mul_literals" (formula "18") (term "0,0,2,3"))
(rule "div_literals" (formula "18") (term "1,3"))
(rule "qeq_literals" (formula "18") (term "0,3"))
(rule "ifthenelse_true" (formula "18") (term "3"))
(rule "jdiv_axiom_inline" (formula "16") (term "3,1,0"))
(rule "qeq_literals" (formula "16") (term "0,3,1,0"))
(rule "ifthenelse_true" (formula "16") (term "3,1,0"))
(rule "div_literals" (formula "16") (term "3,1,0"))
(rule "applyEq" (formula "15") (term "1") (ifseqformula "8"))
(rule "applyEq" (formula "11") (term "0,1") (ifseqformula "8"))
(rule "applyEq" (formula "12") (term "0,1") (ifseqformula "8"))
(rule "applyEq" (formula "9") (term "0,1") (ifseqformula "8"))
(rule "applyEq" (formula "10") (term "0,1") (ifseqformula "8"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0"))
(rule "mul_literals" (formula "11") (term "1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
(rule "mul_literals" (formula "10") (term "1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0"))
(rule "mul_literals" (formula "9") (term "1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "13"))
(rule "polySimp_mulLiterals" (formula "13") (term "0"))
(rule "polySimp_elimOne" (formula "13") (term "0"))
(rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "7"))
(rule "leq_literals" (formula "14") (term "0"))
(rule "concrete_or_1" (formula "14"))
(rule "true_left" (formula "14"))
(rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "14"))
(rule "mul_literals" (formula "7") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7"))
(rule "mul_literals" (formula "7") (term "1"))
(rule "nnf_imp2or" (formula "22") (term "0"))
(rule "nnf_imp2or" (formula "16") (term "0"))
(rule "nnf_notAnd" (formula "22") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
(rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
(rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "16") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
(rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
(rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "16") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
(rule "mul_literals" (formula "16") (term "1,0,0,0"))
(rule "methodBodyExpand" (formula "32") (term "1") (newnames "heapBefore_newMergeCollapse,savedHeapBefore_newMergeCollapse"))
(rule "simplifyUpdate2" (formula "32") (term "1"))
(rule "sequentialToParallel2" (formula "32"))
(rule "simplifyUpdate3" (formula "32") (term "1,0"))
(rule "commute_or_2" (formula "16") (term "0"))
(rule "commute_or" (formula "16") (term "0,0"))
(rule "arrayLengthIsAShort" (formula "13") (term "0,0"))
(rule "inShort" (formula "13"))
(rule "true_left" (formula "13"))
(rule "arrayLengthNotNegative" (formula "13") (term "0,0"))
(rule "arrayLengthIsAShort" (formula "9") (term "1"))
(rule "inShort" (formula "9"))
(rule "true_left" (formula "9"))
(rule "arrayLengthNotNegative" (formula "9") (term "1"))
(rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
(rule "leq_literals" (formula "9") (term "0"))
(rule "concrete_or_1" (formula "9"))
(rule "true_left" (formula "9"))
(rule "arrayLengthIsAShort" (formula "9") (term "0"))
(rule "inShort" (formula "9"))
(rule "true_left" (formula "9"))
(rule "arrayLengthNotNegative" (formula "9") (term "0"))
(rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
(rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
(rule "leq_literals" (formula "9") (term "0"))
(rule "concrete_or_1" (formula "9"))
(rule "true_left" (formula "9"))
(rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1") (ifseqformula "1"))
(rule "replace_known_right" (formula "6") (term "0") (ifseqformula "32"))
(rule "concrete_or_2" (formula "6"))
(rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "15") (term "0") (ifseqformula "29"))
(rule "concrete_or_2" (formula "15"))
(rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "1"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
(rule "concrete_or_2" (formula "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "2"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "34"))
(rule "concrete_or_2" (formula "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0,0") (ifseqformula "3"))
(rule "replace_known_right" (formula "28") (term "0") (ifseqformula "33"))
(rule "concrete_or_2" (formula "28"))
(builtin "Loop Invariant" (formula "38") (newnames "variant,b,heapBefore_LOOP,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (opengoal " ")
)
(branch "Body Preserves Invariant"
   (rule "false_to_not_true" (formula "31") (term "0,1,1,1,0,1,1"))
   (rule "false_to_not_true" (formula "40") (term "0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "inInt" (formula "31") (term "1,1,1,1"))
   (rule "concrete_and_3" (formula "31") (term "1,1,1"))
   (rule "insert_constant_value" (formula "31") (term "0,3,1,0,0,0,0,0,0,1,1"))
   (rule "insert_constant_value" (formula "31") (term "0,3,1,0,0,0,0,0,0,0,1,1"))
   (rule "inInt" (formula "40") (term "1,1,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "concrete_and_3" (formula "40") (term "1,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "insert_constant_value" (formula "31") (term "0,3,1,0,1,0,0,0,0,0,0,0,0,0,1,1"))
   (rule "insert_constant_value" (formula "40") (term "0,3,1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "insert_constant_value" (formula "40") (term "0,3,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "insert_constant_value" (formula "40") (term "0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "translateJavaDivInt" (formula "31") (term "3,1,0,0,0,0,0,0,1,1"))
   (rule "translateJavaDivInt" (formula "31") (term "3,1,0,0,0,0,0,0,0,1,1"))
   (rule "translateJavaDivInt" (formula "31") (term "3,1,0,1,0,0,0,0,0,0,0,0,0,1,1"))
   (rule "translateJavaDivInt" (formula "40") (term "3,1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "translateJavaDivInt" (formula "40") (term "3,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "translateJavaDivInt" (formula "40") (term "3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "31"))
   (rule "eqSymm" (formula "40") (term "1,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "eqSymm" (formula "40") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "eqSymm" (formula "40") (term "1,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "eqSymm" (formula "40") (term "0,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "eqSymm" (formula "31") (term "1,0,1,0,0,0,0,1,1"))
   (rule "eqSymm" (formula "31") (term "0,0,1,1,0,1,1"))
   (rule "eqSymm" (formula "31") (term "1,0,0,0,0,0,0,0,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "0,2,1,1,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,0,2,1,1,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,0,0,0,0,0,0,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,0,0,0,0,0,0,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,1,0,0,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,1,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,0,0,0,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,0,0,0,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,0,0,0,0,0,0,1,0,0,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,0,0,0,0,0,0,1,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,0,0,0,1,0,0,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,0,0,0,1,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,0,0,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,0,0,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,1,0,0,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,1,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "2,1,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,2,1,2,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "40") (term "0,2,0,1,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "40") (term "1,0,2,0,1,0,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,1,1,0,0,1"))
   (rule "mul_literals" (formula "31") (term "1,2,1,1,0,0,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "31") (term "1,2,1,0,0,1,0,0,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,0,0,0,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "31") (term "1,2,0,0,0,0,0,0,1,0,0,1"))
   (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "0,2,0,1,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,0,2,0,1,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,0,1,0,0,1"))
   (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0,1,0,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,0,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,0,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "2,1,0,0,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,2,1,0,0,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "31") (term "0,2,1,1,0,0,0,1,1"))
   (rule "mul_literals" (formula "31") (term "1,0,2,1,1,0,0,0,1,1"))
   (rule "sequentialToParallel2" (formula "40") (term "1,1"))
   (rule "applyOnElementary" (formula "40") (term "1,0,1,1"))
   (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,0,1,0,0,0,0,1,1"))
   (rule "sequentialToParallel2" (formula "40") (term "1"))
   (rule "simplifyUpdate3" (formula "40") (term "1,0,1"))
   (rule "sequentialToParallel2" (formula "31"))
   (rule "simplifyUpdate3" (formula "31") (term "1,0"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "32"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "notLeft" (formula "33"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "33"))
   (rule "simplifyUpdate2" (formula "33"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "simplifyUpdate2" (formula "31"))
   (rule "andLeft" (formula "31"))
   (rule "sequentialToParallel2" (formula "53"))
   (rule "simplifyUpdate3" (formula "53") (term "1,0"))
   (rule "impRight" (formula "53"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "polySimp_addComm0" (formula "44") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "44") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "44") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "44") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "43") (term "2,1,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "43") (term "2,1,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "43") (term "2,1,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "43") (term "2,0,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "45") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "45") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "45") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "45") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1"))
   (rule "polySimp_addComm0" (formula "40") (term "2,0,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "2,1,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "2,1,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "2,1,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "0,2,1,1"))
   (rule "polySimp_addComm0" (formula "42") (term "2,1,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "42") (term "2,0,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "42") (term "2,1,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "42") (term "2,1,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "41") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "41") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "41") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "41") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,1"))
   (rule "polySimp_addComm0" (formula "39") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "39") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "39") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "38") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "38") (term "2,1"))
   (rule "polySimp_addComm0" (formula "38") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "38") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "37") (term "2,1"))
   (rule "polySimp_addComm0" (formula "37") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "37") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "37") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "36") (term "2,1"))
   (rule "polySimp_addComm0" (formula "36") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "36") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "35") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "35") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "35") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "35") (term "2,1"))
   (rule "polySimp_addComm0" (formula "35") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "34") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0,1"))
   (rule "polySimp_addComm0" (formula "34") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "33") (term "2,1,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "33") (term "2,1,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "33") (term "2,0,0,0,0,0,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "32") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "32") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "32") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,1,0,0,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "54") (term "0,2,0,1,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,0,0,0,2,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,0,0,0,1,0,0,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,2,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "54") (term "2,0,0,0,0,0,0,1,0,0,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "54") (term "0,2,0,1,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,2,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "0,2,1,1,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,0,0,0,0,0,0,2,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "54") (term "2,1,1,0,0,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "1") (term "2,0,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "2,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "41") (term "1"))
   (rule "add_zero_right" (formula "41") (term "0,1"))
   (rule "polySimp_mulComm0" (formula "41") (term "1,0,1"))
   (rule "applyOnRigidFormula" (formula "44"))
   (rule "simplifyUpdate1" (formula "44") (term "1"))
   (rule "applyOnRigidFormula" (formula "43"))
   (rule "applyOnRigidFormula" (formula "45"))
   (rule "simplifyUpdate1" (formula "45") (term "1"))
   (rule "applyOnRigidFormula" (formula "40"))
   (rule "simplifyUpdate1" (formula "40") (term "1"))
   (rule "simplifyUpdate1" (formula "40") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,1,0,0,0,0,1,1,1,0,1"))
   (rule "add_zero_right" (formula "54") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "42"))
   (rule "simplifyUpdate1" (formula "42") (term "0"))
   (rule "simplifyUpdate1" (formula "42") (term "1"))
   (rule "applyOnRigidFormula" (formula "39"))
   (rule "applyOnRigidFormula" (formula "38"))
   (rule "applyOnPV" (formula "38") (term "0"))
   (rule "simplifyUpdate1" (formula "38") (term "3"))
   (rule "applyOnRigidFormula" (formula "37"))
   (rule "simplifyUpdate1" (formula "37") (term "3"))
   (rule "applyOnPV" (formula "37") (term "0"))
   (rule "applyOnRigidFormula" (formula "36"))
   (rule "applyOnPV" (formula "36") (term "0"))
   (rule "simplifyUpdate1" (formula "36") (term "3"))
   (rule "applyOnRigidFormula" (formula "35"))
   (rule "applyOnPV" (formula "35") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "54") (term "1,1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "33"))
   (rule "simplifyUpdate1" (formula "33") (term "0"))
   (rule "simplifyUpdate1" (formula "33") (term "1"))
   (rule "applyOnRigidFormula" (formula "32"))
   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "54") (term "0,1,1,1,0"))
   (rule "applyOnPV" (formula "54") (term "0,0,1,1,1,0"))
   (rule "simplifyUpdate1" (formula "54") (term "1,0,1,1,1,0"))
   (rule "simplifyUpdate1" (formula "54") (term "2,0,1,1,1,0"))
   (rule "applyOnRigidFormula" (formula "41"))
   (rule "simplifyUpdate1" (formula "41") (term "1"))
   (rule "applyOnRigidTerm" (formula "44") (term "0"))
   (rule "applyOnRigidFormula" (formula "43") (term "1"))
   (rule "simplifyUpdate2" (formula "43") (term "1,1"))
   (rule "applyOnRigidFormula" (formula "43") (term "0"))
   (rule "applyOnRigidTerm" (formula "45") (term "0"))
   (rule "simplifyUpdate1" (formula "45") (term "1,0"))
   (rule "simplifyUpdate1" (formula "45") (term "2,0"))
   (rule "applyOnPV" (formula "45") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "applyOnRigidTerm" (formula "40") (term "1"))
   (rule "applyOnPV" (formula "40") (term "0,1"))
   (rule "applyOnRigidTerm" (formula "40") (term "0"))
   (rule "applyOnPV" (formula "40") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "applyOnRigidTerm" (formula "42") (term "0"))
   (rule "applyOnPV" (formula "42") (term "0,0"))
   (rule "simplifyUpdate1" (formula "42") (term "1,0"))
   (rule "simplifyUpdate1" (formula "42") (term "2,0"))
   (rule "applyOnRigidTerm" (formula "42") (term "1"))
   (rule "applyOnPV" (formula "42") (term "0,1"))
   (rule "simplifyUpdate1" (formula "42") (term "1,1"))
   (rule "simplifyUpdate1" (formula "42") (term "2,1"))
   (rule "applyOnRigidFormula" (formula "39") (term "0"))
   (rule "applyOnRigidTerm" (formula "38") (term "1"))
   (rule "simplifyUpdate1" (formula "38") (term "2,1"))
   (rule "applyOnPV" (formula "38") (term "0,1"))
   (rule "simplifyUpdate1" (formula "38") (term "1,1"))
   (rule "applyOnRigidTerm" (formula "38") (term "2"))
   (rule "simplifyUpdate1" (formula "38") (term "0,2"))
   (rule "applyOnRigidTerm" (formula "37") (term "2"))
   (rule "simplifyUpdate1" (formula "37") (term "0,2"))
   (rule "applyOnRigidTerm" (formula "37") (term "1"))
   (rule "simplifyUpdate1" (formula "37") (term "1,1"))
   (rule "applyOnPV" (formula "37") (term "0,1"))
   (rule "simplifyUpdate1" (formula "37") (term "2,1"))
   (rule "applyOnRigidTerm" (formula "36") (term "1"))
   (rule "simplifyUpdate1" (formula "36") (term "1,1"))
   (rule "applyOnPV" (formula "36") (term "0,1"))
   (rule "simplifyUpdate1" (formula "36") (term "2,1"))
   (rule "applyOnRigidTerm" (formula "36") (term "2"))
   (rule "simplifyUpdate1" (formula "36") (term "0,2"))
   (rule "applyOnRigidTerm" (formula "35") (term "2"))
   (rule "simplifyUpdate1" (formula "35") (term "0,2"))
   (rule "applyOnRigidTerm" (formula "35") (term "1"))
   (rule "applyOnPV" (formula "35") (term "0,1"))
   (rule "simplifyUpdate1" (formula "35") (term "2,1"))
   (rule "simplifyUpdate1" (formula "35") (term "1,1"))
   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1"))
   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "33") (term "0"))
   (rule "simplifyUpdate1" (formula "33") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "1"))
   (rule "simplifyUpdate1" (formula "33") (term "0,1"))
   (rule "applyOnRigidTerm" (formula "32") (term "0"))
   (rule "applyOnPV" (formula "32") (term "0,0"))
   (rule "simplifyUpdate1" (formula "32") (term "1,0"))
   (rule "simplifyUpdate1" (formula "32") (term "2,0"))
   (rule "applyOnRigidTerm" (formula "32") (term "1"))
   (rule "applyOnRigidTerm" (formula "41") (term "0"))
   (rule "simplifyUpdate1" (formula "41") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "applyOnRigidTerm" (formula "44") (term "0,0"))
   (rule "applyOnPV" (formula "44") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "44") (term "2,0,0"))
   (rule "simplifyUpdate1" (formula "44") (term "1,0,0"))
   (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0,0,1,1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "43") (term "0,1"))
   (rule "applyOnRigidFormula" (formula "43") (term "1,1"))
   (rule "applyOnRigidFormula" (formula "43") (term "0,0"))
   (rule "simplifyUpdate1" (formula "43") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0"))
   (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "applyOnRigidTerm" (formula "40") (term "2,1"))
   (rule "applyOnRigidTerm" (formula "40") (term "1,1"))
   (rule "simplifyUpdate1" (formula "40") (term "2,1,1"))
   (rule "applyOnPV" (formula "40") (term "0,1,1"))
   (rule "simplifyUpdate1" (formula "40") (term "1,1,1"))
   (rule "applyOnRigidTerm" (formula "40") (term "1,0"))
   (rule "applyOnPV" (formula "40") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "40") (term "2,1,0"))
   (rule "simplifyUpdate1" (formula "40") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "40") (term "2,0"))
   (rule "applyOnRigidFormula" (formula "39") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "39") (term "0,0"))
   (rule "simplifyUpdate2" (formula "39") (term "0,0,0"))
   (rule "applyOnRigidTerm" (formula "38") (term "1,2"))
   (rule "simplifyUpdate1" (formula "38") (term "2,1,2"))
   (rule "applyOnPV" (formula "38") (term "0,1,2"))
   (rule "simplifyUpdate1" (formula "38") (term "1,1,2"))
   (rule "applyOnRigidTerm" (formula "37") (term "1,2"))
   (rule "applyOnPV" (formula "37") (term "0,1,2"))
   (rule "simplifyUpdate1" (formula "37") (term "1,1,2"))
   (rule "simplifyUpdate1" (formula "37") (term "2,1,2"))
   (rule "applyOnRigidTerm" (formula "36") (term "1,2"))
   (rule "applyOnPV" (formula "36") (term "0,1,2"))
   (rule "simplifyUpdate1" (formula "36") (term "2,1,2"))
   (rule "simplifyUpdate1" (formula "36") (term "1,1,2"))
   (rule "applyOnRigidTerm" (formula "35") (term "1,2"))
   (rule "applyOnPV" (formula "35") (term "0,1,2"))
   (rule "simplifyUpdate1" (formula "35") (term "1,1,2"))
   (rule "simplifyUpdate1" (formula "35") (term "2,1,2"))
   (rule "applyOnRigidFormula" (formula "34"))
   (rule "applyOnRigidTerm" (formula "33") (term "1,0"))
   (rule "applyOnPV" (formula "33") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "2,1,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "2,0"))
   (rule "applyOnPV" (formula "33") (term "0,2,0"))
   (rule "simplifyUpdate1" (formula "33") (term "2,2,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "1,1"))
   (rule "simplifyUpdate1" (formula "33") (term "1,1,1"))
   (rule "applyOnPV" (formula "33") (term "0,1,1"))
   (rule "simplifyUpdate1" (formula "33") (term "2,1,1"))
   (rule "applyOnRigidTerm" (formula "33") (term "2,1"))
   (rule "applyOnPV" (formula "33") (term "0,2,1"))
   (rule "simplifyUpdate1" (formula "33") (term "2,2,1"))
   (rule "eqSymm" (formula "33"))
   (rule "applyOnRigidTerm" (formula "32") (term "0,1"))
   (rule "simplifyUpdate1" (formula "32") (term "2,0,1"))
   (rule "applyOnPV" (formula "32") (term "0,0,1"))
   (rule "simplifyUpdate1" (formula "32") (term "1,0,1"))
   (rule "applyOnRigidTerm" (formula "41") (term "1,0"))
   (rule "simplifyUpdate1" (formula "41") (term "1,1,0"))
   (rule "applyOnRigidFormula" (formula "43") (term "0,0,1"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "43") (term "0,1,1"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,1,1"))
   (rule "applyOnRigidTerm" (formula "43") (term "0,0,0"))
   (rule "applyOnPV" (formula "43") (term "0,0,0,0"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0"))
   (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0"))
   (rule "eqSymm" (formula "43") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "40") (term "0,2,1"))
   (rule "simplifyUpdate1" (formula "40") (term "0,0,2,1"))
   (rule "applyOnRigidTerm" (formula "40") (term "0,2,0"))
   (rule "simplifyUpdate1" (formula "40") (term "0,0,2,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "0,1,0"))
   (rule "applyOnPV" (formula "39") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "2,0,1,0"))
   (rule "applyOnRigidFormula" (formula "39") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "39") (term "0,1,0,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0"))
   (rule "applyOnRigidTerm" (formula "33") (term "1,2,0"))
   (rule "applyOnPV" (formula "33") (term "0,1,2,0"))
   (rule "simplifyUpdate1" (formula "33") (term "2,1,2,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,1,2,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "1,2,1"))
   (rule "simplifyUpdate1" (formula "33") (term "1,1,2,1"))
   (rule "simplifyUpdate1" (formula "33") (term "2,1,2,1"))
   (rule "applyOnPV" (formula "33") (term "0,1,2,1"))
   (rule "applyOnRigidTerm" (formula "41") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "41") (term "2,0,1,0"))
   (rule "applyOnPV" (formula "41") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "41") (term "1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "43") (term "0,0,0,1"))
   (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "43") (term "0,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0,1"))
   (rule "applyOnPV" (formula "43") (term "0,0,0,0,1"))
   (rule "applyOnRigidTerm" (formula "43") (term "0,0,1,1"))
   (rule "applyOnPV" (formula "43") (term "0,0,0,1,1"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,1"))
   (rule "simplifyUpdate1" (formula "43") (term "2,0,0,1,1"))
   (rule "replace_known_right" (formula "43") (term "0,1,1") (ifseqformula "45"))
   (rule "concrete_not_2" (formula "43") (term "1,1"))
   (rule "concrete_and_3" (formula "43") (term "1"))
   (rule "applyOnRigidTerm" (formula "43") (term "0,0,0"))
   (rule "applyOnPV" (formula "43") (term "0,0,0,0"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0"))
   (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0"))
   (rule "applyOnRigidTerm" (formula "40") (term "1,0,2,1"))
   (rule "applyOnPV" (formula "40") (term "0,1,0,2,1"))
   (rule "simplifyUpdate1" (formula "40") (term "1,1,0,2,1"))
   (rule "simplifyUpdate1" (formula "40") (term "2,1,0,2,1"))
   (rule "applyOnRigidTerm" (formula "40") (term "1,0,2,0"))
   (rule "applyOnPV" (formula "40") (term "0,1,0,2,0"))
   (rule "simplifyUpdate1" (formula "40") (term "1,1,0,2,0"))
   (rule "simplifyUpdate1" (formula "40") (term "2,1,0,2,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "0,1,1,0"))
   (rule "applyOnPV" (formula "39") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "2,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "39") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "2,1,0,1,0"))
   (rule "applyOnPV" (formula "39") (term "0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "1,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "1,1,0,0"))
   (rule "simplifyUpdate1" (formula "39") (term "0,1,1,0,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "1,0"))
   (rule "applyOnPV" (formula "34") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "2,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "3,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0,0"))
   (rule "simplifyUpdate2" (formula "34") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
   (rule "applyOnRigidTerm" (formula "43") (term "1,0,0,1"))
   (rule "applyOnPV" (formula "43") (term "0,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "43") (term "1,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "43") (term "2,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "32"))
   (rule "applyOnRigidTerm" (formula "39") (term "0,1,1,0"))
   (rule "applyOnPV" (formula "39") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "2,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "39") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "1,1,1,0,0"))
   (rule "applyOnPV" (formula "39") (term "0,1,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "39") (term "1,1,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "39") (term "2,1,1,1,0,0"))
   (rule "applyOnRigidTerm" (formula "34") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "2,1,1,0"))
   (rule "applyOnPV" (formula "34") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "1,1,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "1,1,0,1,1,0"))
   (rule "applyOnPV" (formula "39") (term "0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "2,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "39") (term "1,1,1,1,0"))
   (rule "applyOnPV" (formula "39") (term "0,1,1,1,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "1,1,1,1,1,0"))
   (rule "simplifyUpdate1" (formula "39") (term "2,1,1,1,1,0"))
   (rule "applyOnRigidTerm" (formula "34") (term "0,1,0,0"))
   (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "34") (term "0,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "34") (term "0,0,0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "34") (term "1,0,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "34") (term "1,1,0,0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "34") (term "0,1,0,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "34") (term "1,0,1,0,0,1,0,0"))
   (rule "applyOnPV" (formula "34") (term "0,0,1,0,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "34") (term "2,0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "pullOutSelect" (formula "54") (term "0,1,1,1,0") (inst "selectSK=java_util_TimSort_stackSize_0"))
   (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
   (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "37") (term "1,2") (ifseqformula "1"))
   (rule "applyEq" (formula "33") (term "1") (ifseqformula "1"))
   (rule "applyEq" (formula "39") (term "1,2") (ifseqformula "1"))
   (rule "applyEq" (formula "36") (term "1,2") (ifseqformula "1"))
   (rule "applyEq" (formula "38") (term "1,2") (ifseqformula "1"))
   (rule "applyEq" (formula "41") (term "1,0,2,0") (ifseqformula "1"))
   (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "35") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "6"))
   (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "inEqSimp_commuteLeq" (formula "43"))
   (rule "jdiv_axiom_inline" (formula "55") (term "3,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "div_literals" (formula "55") (term "1,3,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "55") (term "0,0,2,3,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "qeq_literals" (formula "55") (term "0,3,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "ifthenelse_true" (formula "55") (term "3,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "jdiv_axiom_inline" (formula "55") (term "3,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "div_literals" (formula "55") (term "1,3,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "qeq_literals" (formula "55") (term "0,3,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "ifthenelse_true" (formula "55") (term "3,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "jdiv_axiom_inline" (formula "55") (term "3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "div_literals" (formula "55") (term "1,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "55") (term "0,0,2,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "qeq_literals" (formula "55") (term "0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "ifthenelse_true" (formula "55") (term "3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "jdiv_axiom_inline" (formula "38") (term "3"))
   (rule "qeq_literals" (formula "38") (term "0,3"))
   (rule "ifthenelse_true" (formula "38") (term "3"))
   (rule "div_literals" (formula "38") (term "3"))
   (rule "jdiv_axiom_inline" (formula "37") (term "3"))
   (rule "div_literals" (formula "37") (term "1,3"))
   (rule "mul_literals" (formula "37") (term "0,0,2,3"))
   (rule "qeq_literals" (formula "37") (term "0,3"))
   (rule "ifthenelse_true" (formula "37") (term "3"))
   (rule "blockThrow" (formula "55") (term "1,0,0,1"))
   (rule "variableDeclaration" (formula "2") (term "1") (newnames "b_1"))
   (rule "variableDeclarationAssign" (formula "55") (term "1"))
   (rule "variableDeclaration" (formula "55") (term "1") (newnames "break_0"))
   (rule "assignment" (formula "55") (term "1"))
   (rule "sequentialToParallel2" (formula "55"))
   (rule "simplifyUpdate3" (formula "55") (term "1,0"))
   (rule "variableDeclarationAssign" (formula "55") (term "1"))
   (rule "variableDeclaration" (formula "55") (term "1") (newnames "brk"))
   (rule "jdiv_axiom_inline" (formula "35") (term "3,1,0"))
   (rule "div_literals" (formula "35") (term "1,3,1,0"))
   (rule "mul_literals" (formula "35") (term "0,0,2,3,1,0"))
   (rule "qeq_literals" (formula "35") (term "0,3,1,0"))
   (rule "ifthenelse_true" (formula "35") (term "3,1,0"))
   (rule "assignment" (formula "55") (term "1"))
   (rule "sequentialToParallel2" (formula "55"))
   (rule "simplifyUpdate3" (formula "55") (term "1,0"))
   (rule "variableDeclarationAssign" (formula "55") (term "1"))
   (rule "variableDeclaration" (formula "55") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "55") (term "1"))
   (rule "sequentialToParallel2" (formula "55"))
   (rule "simplifyUpdate3" (formula "55") (term "1,0"))
   (rule "variableDeclaration" (formula "55") (term "1") (newnames "thrownExc"))
   (rule "applyEq" (formula "38") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "39") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "37") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "38") (term "1,2,1,0,0,0,0,0,1,0,1") (ifseqformula "14"))
   (rule "applyEq" (formula "39") (term "1,2,1,0,0,0,0,0,1,0,1") (ifseqformula "14"))
   (rule "applyEq" (formula "37") (term "1,2,1,0,0,0,0,0,1,0,1") (ifseqformula "14"))
   (rule "applyEq" (formula "41") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "46") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "36") (term "1,2,1,0,0,0,0,0,1,0,1") (ifseqformula "14"))
   (rule "applyEq" (formula "36") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "40") (term "1,2,1,0,0,0,0,0,1,0,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "34") (term "1,2,1,0,0,0,0,0,1,0,2,0") (ifseqformula "14"))
   (rule "applyEq" (formula "41") (term "1,2,1,0,0,0,0,0,1,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "45") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "44") (term "1,2,1,0,0,0,0,0,1,0,0,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "34") (term "1,2,1,0,0,0,0,0,1,0,1,2,0") (ifseqformula "14"))
   (rule "applyEq" (formula "40") (term "1,2,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "35") (term "1,2,1,0,0,0,0,0,1,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "44") (term "1,2,1,0,0,0,0,0,1,0,1,0,0,1") (ifseqformula "14"))
   (rule "applyEq" (formula "33") (term "1,2,1,0,0,0,0,0,1,0,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "35") (term "1,2,1,0,0,0,0,0,1,0,1,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,0,0,2,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "40") (term "1,2,1,0,0,0,0,0,1,0,1,1,1,0") (ifseqformula "14"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,0,0,1,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "55") (term "1,2,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "40") (term "1,2,1,0,0,0,0,0,1,0,1,1,1,0") (ifseqformula "14"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "applyEq" (formula "40") (term "1,2,1,0,0,0,0,0,1,0,1,1,1,1,0") (ifseqformula "14"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "applyEq" (formula "40") (term "1,2,1,0,0,0,0,0,1,0,1,1,1,1,0") (ifseqformula "14"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "42"))
   (rule "polySimp_mulLiterals" (formula "42") (term "0"))
   (rule "polySimp_elimOne" (formula "42") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
   (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "55") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "55") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "55") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "55") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "55") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "55") (term "0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "55") (term "0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfArrayRange" (formula "55") (term "1,0,0,0,0,1,0,1,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "55") (term "1,0,0,1,1,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
   (rule "eqClose" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_and_1" (formula "1") (term "1,0,0,0"))
   (rule "equalUnique" (formula "1") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "54"))
   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "55") (term "0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfArrayRange" (formula "55") (term "1,0,0,0,0,0,0,1,0,1,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "55") (term "1,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "55") (term "0,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
   (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
   (rule "concrete_and_4" (formula "1") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "54"))
   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "55") (term "0,0,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "pullOutSelect" (formula "38") (term "1") (inst "selectSK=java_util_TimSort_runLen_0"))
   (rule "applyEq" (formula "36") (term "1") (ifseqformula "38"))
   (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "38"))
   (rule "applyEq" (formula "34") (term "1,2,0") (ifseqformula "38"))
   (rule "applyEq" (formula "37") (term "1") (ifseqformula "38"))
   (rule "applyEq" (formula "40") (term "1") (ifseqformula "38"))
   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "38"))
   (rule "applyEq" (formula "41") (term "1,1,1,1,0") (ifseqformula "38"))
   (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "38"))
   (rule "simplifySelectOfAnon" (formula "38"))
   (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
   (rule "equalUnique" (formula "38") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "38") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "38") (term "0,0,0"))
   (rule "replace_known_right" (formula "38") (term "0,0,1,0,0") (ifseqformula "55"))
   (rule "concrete_not_2" (formula "38") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "38") (term "1,0,0"))
   (rule "replace_known_left" (formula "38") (term "0,1,0,0") (ifseqformula "6"))
   (rule "concrete_not_1" (formula "38") (term "1,0,0"))
   (rule "concrete_or_4" (formula "38") (term "0,0"))
   (rule "polySimp_addComm0" (formula "41") (term "1,1,0"))
   (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_util_TimSort_tmp_0"))
   (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "46") (term "1,0,0,1") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "eqSymm" (formula "46") (term "0,0"))
   (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "7"))
   (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
   (rule "equalUnique" (formula "2") (term "1,1,0,0"))
   (rule "concrete_and_3" (formula "2") (term "1,0,0"))
   (rule "eqClose" (formula "2") (term "1,0,0"))
   (rule "concrete_or_3" (formula "2") (term "0,0"))
   (rule "ifthenelse_true" (formula "2") (term "0"))
   (rule "applyEqReverse" (formula "43") (term "1,0,2,0") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "57") (term "0,1,1,1,0,0,0,0") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "37") (term "1,2") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "41") (term "1,2") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "42") (term "1,1,1,0,0") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "40") (term "1,2") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "38") (term "1,2") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
   (rule "applyEqReverse" (formula "36") (term "1,1,1,0,0") (ifseqformula "2"))
   (rule "hideAuxiliaryEq" (formula "2"))
   (rule "inEqSimp_commuteGeq" (formula "44"))
   (rule "inEqSimp_commuteGeq" (formula "33"))
   (rule "elementOfUnion" (formula "56") (term "0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "pullOutSelect" (formula "41") (term "1,0,1,0") (inst "selectSK=java_util_TimSort_runBase_0"))
   (rule "applyEq" (formula "42") (term "1,1,1,1,0") (ifseqformula "41"))
   (rule "simplifySelectOfAnon" (formula "41"))
   (rule "elementOfFreshLocs" (formula "41") (term "1,0,0"))
   (rule "equalUnique" (formula "41") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "41") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "41") (term "0,0,0"))
   (rule "replace_known_right" (formula "41") (term "0,0,1,0,0") (ifseqformula "56"))
   (rule "concrete_not_2" (formula "41") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "41") (term "1,0,0"))
   (rule "replace_known_left" (formula "41") (term "0,1,0,0") (ifseqformula "6"))
   (rule "concrete_not_1" (formula "41") (term "1,0,0"))
   (rule "concrete_or_4" (formula "41") (term "0,0"))
   (rule "polySimp_addComm0" (formula "42") (term "1,1,0"))
   (rule "elementOfUnion" (formula "38") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfArrayRange" (formula "57") (term "0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "41") (term "0,0"))
   (rule "elementOfUnion" (formula "38") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "38") (term "1,0,0,0"))
   (rule "equalUnique" (formula "38") (term "1,1,0,0,0"))
   (rule "concrete_and_4" (formula "38") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "38") (term "0,0,0"))
   (rule "elementOfArrayRange" (formula "38") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "38") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "38") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "38") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "38") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "38") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "38") (term "0,0,1,0,0") (ifseqformula "51"))
   (rule "concrete_and_2" (formula "38") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "38") (term "1,0,0"))
   (rule "concrete_or_4" (formula "38") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
   (rule "eqClose" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_and_1" (formula "1") (term "1,0,0,0"))
   (rule "equalUnique" (formula "1") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "56"))
   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfArrayRange" (formula "41") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "41") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "41") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "41") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "41") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "41") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "41") (term "1,0,1,0,0") (ifseqformula "56"))
   (rule "concrete_and_4" (formula "41") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "41") (term "1,0,0"))
   (rule "concrete_or_4" (formula "41") (term "0,0"))
   (rule "elementOfUnion" (formula "38") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "41") (term "0,0"))
   (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
   (rule "equalUnique" (formula "41") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "41") (term "1,0,0"))
   (rule "concrete_or_4" (formula "41") (term "0,0"))
   (rule "elementOfUnion" (formula "38") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "38") (term "1,0,0,0"))
   (rule "eqClose" (formula "38") (term "0,1,0,0,0"))
   (rule "concrete_and_1" (formula "38") (term "1,0,0,0"))
   (rule "equalUnique" (formula "38") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "38") (term "0,0,0"))
   (rule "elementOfArrayRange" (formula "38") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "38") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "38") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "38") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "38") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "38") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "38") (term "0,0,1,0,0") (ifseqformula "52"))
   (rule "concrete_and_2" (formula "38") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "38") (term "1,0,0"))
   (rule "concrete_or_4" (formula "38") (term "0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "56"))
   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "41") (term "0,0"))
   (rule "elementOfUnion" (formula "38") (term "0,0"))
   (rule "elementOfSingleton" (formula "38") (term "1,0,0"))
   (rule "equalUnique" (formula "38") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "38") (term "1,0,0"))
   (rule "concrete_or_4" (formula "38") (term "0,0"))
   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnon" (formula "43"))
   (rule "elementOfFreshLocs" (formula "43") (term "1,0,0"))
   (rule "equalUnique" (formula "43") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "43") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "43") (term "0,0,0"))
   (rule "inEqSimp_commuteGeq" (formula "44"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (rule "equalUnique" (formula "1") (term "1,1,0,0"))
   (rule "concrete_and_3" (formula "1") (term "1,0,0"))
   (rule "eqClose" (formula "1") (term "1,0,0"))
   (rule "concrete_or_3" (formula "1") (term "0,0"))
   (rule "ifthenelse_true" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "47") (term "1,0,0,1") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "47") (term "1,0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "eqSymm" (formula "46") (term "0,0"))
   (rule "elementOfArrayRange" (formula "40") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "40") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "40") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "40") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "40") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "40") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "40") (term "0,0,1,0,0") (ifseqformula "52"))
   (rule "concrete_and_2" (formula "40") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "40") (term "1,0,0"))
   (rule "concrete_or_4" (formula "40") (term "0,0"))
   (rule "elementOfUnion" (formula "37") (term "0,0"))
   (rule "elementOfUnion" (formula "42") (term "0,0,0"))
   (rule "elementOfArrayRangeConcrete" (formula "42") (term "1,0,0,0"))
   (rule "eqSymm" (formula "42") (term "0,0,1,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "42") (term "0,0,1,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,1,0,0,0") (ifseqformula "51"))
   (rule "concrete_and_2" (formula "42") (term "0,0,1,0,0,0"))
   (rule "concrete_and_2" (formula "42") (term "0,1,0,0,0"))
   (rule "concrete_and_2" (formula "42") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "42") (term "0,0,0"))
   (rule "elementOfUnion" (formula "40") (term "0,0"))
   (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
   (rule "eqClose" (formula "40") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "40") (term "1,0,0"))
   (rule "equalUnique" (formula "40") (term "1,0,0"))
   (rule "concrete_or_4" (formula "40") (term "0,0"))
   (rule "elementOfArrayRange" (formula "37") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "37") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "37") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "37") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "37") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "37") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "37") (term "0,0,1,0,0") (ifseqformula "55"))
   (rule "concrete_and_2" (formula "37") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "37") (term "1,0,0"))
   (rule "concrete_or_4" (formula "37") (term "0,0"))
   (rule "elementOfUnion" (formula "42") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "42") (term "1,0,0,0"))
   (rule "equalUnique" (formula "42") (term "1,1,0,0,0"))
   (rule "concrete_and_4" (formula "42") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "42") (term "0,0,0"))
   (rule "elementOfUnion" (formula "40") (term "0,0"))
   (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
   (rule "equalUnique" (formula "40") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "40") (term "1,0,0"))
   (rule "concrete_or_4" (formula "40") (term "0,0"))
   (rule "elementOfArrayRange" (formula "37") (term "0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "37") (term "0,0,0,1,0,0"))
   (rule "concrete_and_2" (formula "37") (term "0,0,1,0,0"))
   (rule "concrete_and_2" (formula "37") (term "0,1,0,0"))
   (rule "eqSymm" (formula "37") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "37") (term "0,0,0"))
   (rule "replace_known_right" (formula "37") (term "1,0,0,0") (ifseqformula "56"))
   (rule "concrete_and_4" (formula "37") (term "0,0,0"))
   (rule "concrete_and_2" (formula "37") (term "0,0"))
   (rule "ifthenelse_false" (formula "37") (term "0"))
   (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "41") (term "1,1,1,1,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "33") (term "1,2,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "42") (term "1,0,0,1,1,0,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "42") (term "0,0,0,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "42") (term "1,2,0") (ifseqformula "37"))
   (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "37"))
   (rule "hideAuxiliaryEq" (formula "37"))
   (rule "replace_known_right" (formula "41") (term "0,0,1,0,0") (ifseqformula "54"))
   (rule "concrete_not_2" (formula "41") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "41") (term "1,0,0"))
   (rule "replace_known_left" (formula "41") (term "0,1,0,0") (ifseqformula "9"))
   (rule "concrete_not_1" (formula "41") (term "1,0,0"))
   (rule "concrete_or_4" (formula "41") (term "0,0"))
   (rule "applyEq" (formula "32") (term "1") (ifseqformula "13"))
   (rule "elementOfUnion" (formula "39") (term "0,0"))
   (rule "elementOfUnion" (formula "41") (term "0,0"))
   (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
   (rule "eqSymm" (formula "41") (term "0,0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "41") (term "0,0,1,0,0"))
   (rule "replace_known_right" (formula "41") (term "0,0,0,1,0,0") (ifseqformula "51"))
   (rule "concrete_and_2" (formula "41") (term "0,0,1,0,0"))
   (rule "concrete_and_2" (formula "41") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "41") (term "1,0,0"))
   (rule "concrete_or_4" (formula "41") (term "0,0"))
   (rule "elementOfArrayRange" (formula "39") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "39") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "39") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "39") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "39") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "39") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "39") (term "1,0,1,0,0") (ifseqformula "55"))
   (rule "concrete_and_4" (formula "39") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "39") (term "1,0,0"))
   (rule "concrete_or_4" (formula "39") (term "0,0"))
   (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
   (rule "mul_literals" (formula "43") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "43"))
   (rule "mul_literals" (formula "43") (term "1"))
   (rule "elementOfUnion" (formula "41") (term "0,0"))
   (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
   (rule "equalUnique" (formula "41") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "41") (term "1,0,0"))
   (rule "concrete_or_4" (formula "41") (term "0,0"))
   (rule "elementOfArrayRange" (formula "39") (term "0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "39") (term "0,0,0,1,0,0"))
   (rule "concrete_and_2" (formula "39") (term "0,0,1,0,0"))
   (rule "concrete_and_2" (formula "39") (term "0,1,0,0"))
   (rule "eqSymm" (formula "39") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "39") (term "0,0,0"))
   (rule "replace_known_right" (formula "39") (term "0,0,0,0") (ifseqformula "53"))
   (rule "concrete_and_2" (formula "39") (term "0,0,0"))
   (rule "concrete_and_2" (formula "39") (term "0,0"))
   (rule "ifthenelse_false" (formula "39") (term "0"))
   (rule "applyEqReverse" (formula "40") (term "1,0,1,1,0") (ifseqformula "39"))
   (rule "applyEqReverse" (formula "40") (term "1,0,1,0") (ifseqformula "39"))
   (rule "hideAuxiliaryEq" (formula "39"))
   (rule "elementOfUnion" (formula "40") (term "0,0"))
   (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
   (rule "equalUnique" (formula "40") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "40") (term "1,0,0"))
   (rule "concrete_or_4" (formula "40") (term "0,0"))
   (rule "elementOfUnion" (formula "40") (term "0,0"))
   (rule "elementOfArrayRangeConcrete" (formula "40") (term "1,0,0"))
   (rule "eqClose" (formula "40") (term "0,0,1,0,0"))
   (rule "concrete_and_1" (formula "40") (term "0,1,0,0"))
   (rule "elementOfArrayRangeConcrete" (formula "40") (term "0,0,0"))
   (rule "replace_known_right" (formula "40") (term "0,0,0,0,0") (ifseqformula "47"))
   (rule "concrete_and_2" (formula "40") (term "0,0,0,0"))
   (rule "concrete_and_2" (formula "40") (term "0,0,0"))
   (rule "concrete_or_2" (formula "40") (term "0,0"))
   (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0,0"))
   (rule "times_zero_2" (formula "40") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,0"))
   (rule "mul_literals" (formula "40") (term "0,1,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0"))
   (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
   (rule "mul_literals" (formula "40") (term "1,0,0,0"))
   (rule "replace_known_left" (formula "40") (term "0,0,0") (ifseqformula "42"))
   (rule "concrete_and_1" (formula "40") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
   (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "32"))
   (rule "ifthenelse_true" (formula "40") (term "0"))
   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "40"))
   (rule "hideAuxiliaryEq" (formula "40"))
   (rule "inEqSimp_commuteLeq" (formula "40"))
   (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "32"))
   (rule "mul_literals" (formula "41") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "41"))
   (rule "mul_literals" (formula "41") (term "1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (rule "notLeft" (formula "1"))
   (rule "commuteUnion_2" (formula "36") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "37") (term "0,1,0"))
   (rule "commuteUnion" (formula "35") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "34") (term "0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "38") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "32") (term "0,0,0,0,1,0,2,0"))
   (rule "commuteUnion" (formula "33") (term "0,1,0,1,0"))
   (rule "commuteUnion" (formula "54") (term "0,0,0,0,1,0,0,1,1,0,0,0,0"))
   (rule "commuteUnion" (formula "38") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion_2" (formula "38") (term "0,1,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "38") (term "1,1,0"))
   (rule "commuteUnion" (formula "44") (term "0,0,0,0,1,0,0"))
   (rule "commuteUnion" (formula "36") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "37") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "35") (term "0,1,0"))
   (rule "commuteUnion" (formula "34") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "38") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "32") (term "0,1,0,2,0"))
   (rule "commuteUnion" (formula "33") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "54") (term "0,1,0,0,1,1,0,0,0,0"))
   (rule "commuteUnion" (formula "38") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "38") (term "0,1,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "38") (term "1,1,0"))
   (rule "commuteUnion_2" (formula "44") (term "0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "36") (term "0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "37") (term "1,0"))
   (rule "commuteUnion_2" (formula "35") (term "1,0"))
   (rule "commuteUnion_2" (formula "34") (term "0,1,0,1,0"))
   (rule "commuteUnion" (formula "38") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "32") (term "0,1,0,1,0,2,0"))
   (rule "commuteUnion_2" (formula "33") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,1,0,1,0,0,1,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "38") (term "0,1,0,1,0,0,1,1,0"))
   (rule "commuteUnion_2" (formula "38") (term "0,0,0,1,0,1,1,1,0"))
   (rule "commuteUnion" (formula "44") (term "0,1,0,0"))
   (rule "commuteUnion" (formula "36") (term "0,0,0,1,0,1,0"))
   (rule "commuteUnion" (formula "37") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "35") (term "0,0,0,1,0"))
   (rule "commuteUnion" (formula "34") (term "0,0,0,1,0,1,0"))
   (rule "commuteUnion" (formula "32") (term "0,0,0,1,0,1,0,2,0"))
   (rule "nnf_imp2or" (formula "54") (term "0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "commuteUnion_2" (formula "38") (term "1,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "38") (term "1,1,0"))
   (rule "commuteUnion_2" (formula "36") (term "0,0,1,0,1,0"))
   (rule "commuteUnion" (formula "37") (term "0,0,0,1,0"))
   (rule "commuteUnion" (formula "35") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "34") (term "0,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "32") (term "0,0,1,0,1,0,2,0"))
   (rule "commuteUnion" (formula "38") (term "0,0,1,0,0,1,1,0"))
   (rule "nnf_imp2or" (formula "54") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "nnf_imp2or" (formula "33") (term "0"))
   (rule "nnf_imp2or" (formula "38") (term "0"))
   (rule "nnf_notAnd" (formula "33") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
   (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
   (rule "mul_literals" (formula "33") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "38") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
   (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
   (rule "mul_literals" (formula "38") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "54") (term "0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "nnf_notAnd" (formula "54") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "54") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "54") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "methodCallThrow" (formula "54") (term "1,0,0,1"))
   (rule "commute_or_2" (formula "33") (term "0"))
   (rule "compound_greater_than_comparison_1" (formula "44") (term "1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "44") (term "1"))
   (rule "variableDeclaration" (formula "44") (term "1") (newnames "x"))
   (rule "assignment_read_attribute_this" (formula "44"))
   (rule "sequentialToParallel2" (formula "44"))
   (rule "applyOnElementary" (formula "44") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "44") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "44") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "44") (term "2,0,1,0"))
   (rule "applyOnPV" (formula "44") (term "0,0,1,0"))
   (rule "pullOutSelect" (formula "44") (term "0,1,0") (inst "selectSK=java_util_TimSort_stackSize_1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "54"))
   (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "1") (term "1,0,0"))
   (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
   (rule "concrete_not_1" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "49"))
   (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
   (rule "eqClose" (formula "1") (term "0,0,0,0"))
   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
   (rule "equalUnique" (formula "1") (term "0,0,0"))
   (rule "concrete_or_2" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "54"))
   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "1,0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
   (rule "eqClose" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_and_1" (formula "1") (term "1,0,0,0"))
   (rule "equalUnique" (formula "1") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
   (rule "eqClose" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "eqClose" (formula "1") (term "0,0,0"))
   (rule "concrete_or_1" (formula "1") (term "0,0"))
   (rule "ifthenelse_true" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "45") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "commute_or" (formula "33") (term "0,0"))
   (rule "associativeLawUnion" (formula "36") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "36") (term "1,0"))
   (rule "associativeLawUnion" (formula "34") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "34") (term "1,0"))
   (rule "associativeLawUnion" (formula "35") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "35") (term "0,1,0"))
   (rule "associativeLawUnion" (formula "37") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "37") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "37") (term "0,1,0"))
   (rule "associativeLawUnion" (formula "32") (term "0,1,0,2,0"))
   (rule "commuteUnion_2" (formula "32") (term "1,0,2,0"))
   (rule "associativeLawUnion" (formula "38") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "38") (term "1,0,0,1,0"))
   (rule "greater_than_comparison_simple" (formula "44") (term "1"))
   (rule "sequentialToParallel2" (formula "44"))
   (rule "simplifyUpdate2" (formula "44"))
   (rule "simplifyUpdate3" (formula "44") (term "1,0"))
   (rule "applyOnElementary" (formula "44") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "44") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "44") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "44") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "44") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "44") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "44") (term "1,0,0,1,0"))
   (rule "inEqSimp_gtToGeq" (formula "44") (term "0,0,1,0"))
   (rule "mul_literals" (formula "44") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "44") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,1,0"))
   (rule "mul_literals" (formula "44") (term "1,0,0,1,0"))
   (rule "associativeLawUnion" (formula "38") (term "0,1,0,1,1,1,0"))
   (rule "commuteUnion_2" (formula "38") (term "1,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "38") (term "1,1,0"))
   (rule "associativeLawUnion" (formula "54") (term "0,1,0,0,1,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "54") (term "1,0,0,1,1,0,0,0,0"))
   (rule "methodCallEmpty" (formula "44") (term "1"))
   (rule "simplifyUpdate2" (formula "44"))
   (rule "associativeLawUnion" (formula "35") (term "0,1,0"))
   (rule "associativeLawUnion" (formula "37") (term "0,1,0"))
   (rule "ifUnfold" (formula "54") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "54") (term "1") (newnames "x_1"))
   (rule "associativeLawUnion" (formula "36") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "36") (term "0,1,0"))
   (rule "associativeLawUnion" (formula "34") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "34") (term "0,1,0"))
   (rule "emptyModality" (formula "44") (term "1"))
   (rule "notRight" (formula "44"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "ifthenelse_concrete3" (formula "1"))
   (rule "boolean_not_equal_2" (formula "1") (term "1"))
   (rule "concrete_or_4" (formula "1"))
   (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
   (rule "leq_literals" (formula "41") (term "0"))
   (rule "concrete_or_1" (formula "41"))
   (rule "true_left" (formula "41"))
   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "41"))
   (rule "mul_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
   (rule "leq_literals" (formula "13") (term "0"))
   (rule "concrete_or_1" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "32"))
   (rule "mul_literals" (formula "2") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
   (rule "leq_literals" (formula "13") (term "0"))
   (rule "concrete_or_1" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
   (rule "mul_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "arrayLengthIsAShort" (formula "38") (term "1,2,1,1,0"))
   (rule "inShort" (formula "38"))
   (rule "true_left" (formula "38"))
   (rule "arrayLengthNotNegative" (formula "38") (term "1,2,1,1,0"))
   (rule "compound_greater_than_comparison_1" (formula "54") (term "1") (inst "#v0=x_2"))
   (rule "variableDeclarationAssign" (formula "54") (term "1"))
   (rule "variableDeclaration" (formula "54") (term "1") (newnames "x_2"))
   (rule "assignment_read_attribute_this" (formula "54"))
   (rule "sequentialToParallel2" (formula "54"))
   (rule "simplifyUpdate3" (formula "54") (term "1,0"))
   (rule "applyOnElementary" (formula "54") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "54") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "54") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0"))
   (rule "applyOnPV" (formula "54") (term "0,0,1,0"))
   (rule "pullOutSelect" (formula "54") (term "0,1,0") (inst "selectSK=java_util_TimSort_stackSize_2"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "54"))
   (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "1") (term "1,0,0"))
   (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "8"))
   (rule "concrete_not_1" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "54"))
   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
   (rule "eqClose" (formula "1") (term "0,0,0,0,0"))
   (rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
   (rule "equalUnique" (formula "1") (term "0,0,0,0"))
   (rule "concrete_or_2" (formula "1") (term "0,0,0"))
   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "49"))
   (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
   (rule "eqClose" (formula "1") (term "0,0,0,0,0"))
   (rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
   (rule "equalUnique" (formula "1") (term "0,0,0,0"))
   (rule "concrete_or_1" (formula "1") (term "0,0,0"))
   (rule "concrete_or_1" (formula "1") (term "0,0"))
   (rule "ifthenelse_true" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "55") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "associativeLawUnion" (formula "34") (term "0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "34") (term "1,0,0,0,0"))
   (rule "associativeLawUnion" (formula "33") (term "0,0,1,0,2,0"))
   (rule "commuteUnion_2" (formula "33") (term "0,1,0,2,0"))
   (rule "greater_than_comparison_simple" (formula "54") (term "1"))
   (rule "sequentialToParallel2" (formula "54"))
   (rule "simplifyUpdate2" (formula "54"))
   (rule "simplifyUpdate3" (formula "54") (term "1,0"))
   (rule "applyOnElementary" (formula "54") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "54") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "54") (term "2,0,1,0"))
   (rule "applyOnRigidFormula" (formula "54") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "54") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "54") (term "1,0,0,1,0"))
   (rule "inEqSimp_gtToGeq" (formula "54") (term "0,0,1,0"))
   (rule "mul_literals" (formula "54") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "54") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0,1,0"))
   (rule "mul_literals" (formula "54") (term "1,0,0,1,0"))
   (rule "replace_known_left" (formula "54") (term "0,0,1,0") (ifseqformula "3"))
   (rule "ifthenelse_true" (formula "54") (term "0,1,0"))
   (rule "associativeLawUnion" (formula "37") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "37") (term "0,0,1,0"))
   (rule "associativeLawUnion" (formula "35") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "35") (term "0,0,1,0"))
   (rule "associativeLawUnion" (formula "40") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "40") (term "0,1,0,0,1,0"))
   (rule "associativeLawUnion" (formula "36") (term "0,0,0,0,1,0"))
   (rule "associativeLawUnion" (formula "40") (term "0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "commuteUnion_2" (formula "40") (term "0,1,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0,0") (ifseqformula "31"))
   (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "46"))
   (rule "concrete_or_2" (formula "44"))
   (rule "associativeLawUnion" (formula "34") (term "0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "34") (term "0,1,0,0,0,0"))
   (rule "associativeLawUnion" (formula "37") (term "0,0,0,0,1,0"))
   (rule "associativeLawUnion" (formula "33") (term "0,0,0,1,0,2,0"))
   (rule "commuteUnion_2" (formula "33") (term "0,0,1,0,2,0"))
   (rule "associativeLawUnion" (formula "35") (term "0,0,0,0,1,0"))
   (rule "associativeLawUnion" (formula "40") (term "0,1,0,0,1,0"))
   (rule "associativeLawUnion" (formula "34") (term "0,1,0,0,0,0"))
   (rule "associativeLawUnion" (formula "40") (term "0,1,0,0,1,1,0"))
   (rule "associativeLawUnion" (formula "40") (term "0,0,1,0,1,1,1,0"))
   (rule "commuteUnion_2" (formula "40") (term "0,1,0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "associativeLawUnion" (formula "40") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
   (rule "allLeft" (formula "28") (inst "t=Z(0(#))"))
   (rule "add_zero_right" (formula "28") (term "0,2,0,1"))
   (rule "leq_literals" (formula "28") (term "0,0"))
   (rule "concrete_or_2" (formula "28") (term "0"))
   (rule "inEqSimp_homoInEq1" (formula "28") (term "0"))
   (rule "times_zero_2" (formula "28") (term "1,0,0"))
   (rule "add_zero_right" (formula "28") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0"))
   (rule "mul_literals" (formula "28") (term "1,0"))
   (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "28") (term "0,0"))
   (rule "concrete_and_2" (formula "28") (term "0"))
   (rule "concrete_or_2" (formula "28"))
   (rule "associativeLawUnion" (formula "34") (term "0,0,0,0,1,0,2,0"))
   (rule "ifSplit" (formula "56"))
   (branch "if x_1 true"
      (rule "simplifyUpdate2" (formula "57"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "boolean_equal" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "variableDeclarationAssign" (formula "56") (term "1"))
      (rule "variableDeclaration" (formula "56") (term "1") (newnames "n"))
      (rule "compound_subtraction_1" (formula "56") (term "1") (inst "#v=x"))
      (rule "variableDeclarationAssign" (formula "56") (term "1"))
      (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_3"))
      (rule "assignment_read_attribute_this" (formula "56"))
      (rule "sequentialToParallel2" (formula "56"))
      (rule "simplifyUpdate3" (formula "56") (term "1,0"))
      (rule "applyOnElementary" (formula "56") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "56") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
      (rule "replaceKnownSelect_taclet1_12" (formula "56") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "56") (term "0,1,0"))
      (rule "assignmentSubtractionInt" (formula "56") (term "1"))
      (rule "translateJavaSubInt" (formula "56") (term "0,0,1"))
      (rule "polySimp_elimSub" (formula "56") (term "0,0,1"))
      (rule "mul_literals" (formula "56") (term "1,0,0,1"))
      (rule "sequentialToParallel2" (formula "56"))
      (rule "simplifyUpdate2" (formula "56"))
      (rule "simplifyUpdate3" (formula "56") (term "1,0"))
      (rule "applyOnElementary" (formula "56") (term "1,0"))
      (rule "polySimp_addComm0" (formula "56") (term "1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "56") (term "1,0,1,0"))
      (rule "associativeLawUnion" (formula "41") (term "0,0,0,0,1,0,0,1,0"))
      (rule "associativeLawUnion" (formula "35") (term "0,0,0,0,1,0,0,0,0"))
      (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_4"))
      (rule "compound_assignment_5_nonsimple" (formula "56") (term "1"))
      (rule "associativeLawUnion" (formula "41") (term "0,0,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "41") (term "1,1,0"))
      (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x_5"))
      (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_5"))
      (rule "compound_assignment_3_nonsimple" (formula "56") (term "1"))
      (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x_6"))
      (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_6"))
      (rule "compound_assignment_2" (formula "56") (term "1") (inst "#v=x_7"))
      (rule "variableDeclarationAssign" (formula "56") (term "1"))
      (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_7"))
      (rule "greater_than_comparison_simple" (formula "56") (term "1"))
      (rule "sequentialToParallel2" (formula "56"))
      (rule "simplifyUpdate3" (formula "56") (term "1,0"))
      (rule "applyOnElementary" (formula "56") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "56") (term "0,0,0,1,0"))
      (rule "inEqSimp_gtToGeq" (formula "56") (term "0,0,1,0"))
      (rule "mul_literals" (formula "56") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "56") (term "0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "56") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0,1,0"))
      (rule "mul_literals" (formula "56") (term "1,0,0,1,0"))
      (rule "compound_assignment_1_new" (formula "56") (term "1"))
      (rule "sequentialToParallel2" (formula "56"))
      (rule "simplifyUpdate2" (formula "56"))
      (rule "simplifyUpdate3" (formula "56") (term "1,0"))
      (rule "applyOnElementary" (formula "56") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "56") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0"))
      (rule "ifthenelse_concrete3" (formula "56") (term "0,0,1,0"))
      (rule "boolean_not_equal_2" (formula "56") (term "1,0,0,1,0"))
      (rule "concrete_or_4" (formula "56") (term "0,0,1,0"))
      (rule "associativeLawUnion" (formula "41") (term "0,0,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "41") (term "1,1,0"))
      (rule "ifElseSplit" (formula "56"))
      (branch "if x_6 true"
         (opengoal " ")
      )
      (branch "if x_6 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "57"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "47"))
         (rule "applyOnPV" (formula "47") (term "0"))
         (rule "simplifyUpdate1" (formula "47") (term "1"))
         (rule "ifthenelse_concrete4" (formula "47"))
         (rule "boolean_not_equal_2" (formula "47") (term "1"))
         (rule "concrete_or_4" (formula "47"))
         (rule "notRight" (formula "47"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
         (rule "leq_literals" (formula "4") (term "0"))
         (rule "concrete_or_1" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "43"))
         (rule "mul_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
         (rule "leq_literals" (formula "3") (term "0"))
         (rule "concrete_or_1" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
         (rule "mul_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
         (rule "leq_literals" (formula "4") (term "0"))
         (rule "concrete_or_1" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
         (rule "mul_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "compound_less_equal_than_comparison_2" (formula "56") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
         (rule "variableDeclarationAssign" (formula "56") (term "1"))
         (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_8"))
         (rule "eval_order_array_access4" (formula "56") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "56") (term "1"))
         (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_arr"))
         (rule "assignment_read_attribute_this" (formula "56"))
         (rule "sequentialToParallel2" (formula "56"))
         (rule "simplifyUpdate3" (formula "56") (term "1,0"))
         (rule "applyOnElementary" (formula "56") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
         (rule "applyOnPV" (formula "56") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
         (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=java_util_TimSort_runLen_1"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "56"))
         (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
         (rule "concrete_and_1" (formula "1") (term "1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "8"))
         (rule "concrete_not_1" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "eval_order_array_access5" (formula "57") (term "1") (inst "#v1=x_9") (inst "#ar1=x_arr_1"))
         (rule "variableDeclarationAssign" (formula "57") (term "1"))
         (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_arr_1"))
         (rule "assignment" (formula "57") (term "1"))
         (rule "sequentialToParallel2" (formula "57"))
         (rule "simplifyUpdate2" (formula "57"))
         (rule "simplifyUpdate3" (formula "57") (term "1,0"))
         (rule "applyOnElementary" (formula "57") (term "1,0"))
         (rule "applyOnPV" (formula "57") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "57") (term "1"))
         (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_9"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "56"))
         (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
         (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
         (rule "concrete_or_2" (formula "1") (term "0,0,0"))
         (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "56"))
         (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "1,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
         (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
         (rule "concrete_or_2" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_or_2" (formula "1") (term "0,0"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,1,0,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "54"))
         (rule "concrete_and_2" (formula "1") (term "0,0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,0"))
         (rule "concrete_or_2" (formula "1") (term "0,0"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
         (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "55"))
         (rule "concrete_and_2" (formula "1") (term "0,0,0"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "assignmentSubtractionInt" (formula "56") (term "1"))
         (rule "translateJavaSubInt" (formula "56") (term "0,0,1"))
         (rule "polySimp_elimSub" (formula "56") (term "0,0,1"))
         (rule "mul_literals" (formula "56") (term "1,0,0,1"))
         (rule "sequentialToParallel2" (formula "56"))
         (rule "simplifyUpdate3" (formula "56") (term "1,0"))
         (rule "applyOnElementary" (formula "56") (term "1,0"))
         (rule "polySimp_addComm0" (formula "56") (term "1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
         (rule "applyOnPV" (formula "56") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
         (rule "add_literals" (formula "56") (term "0,0,1,0"))
         (rule "assignment_array2" (formula "56"))
         (branch "Normal Execution (x_arr_1 != null)"
            (rule "sequentialToParallel2" (formula "56"))
            (rule "simplifyUpdate2" (formula "56"))
            (rule "simplifyUpdate3" (formula "56") (term "1,0"))
            (rule "applyOnElementary" (formula "56") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "56") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "56") (term "0,2,0,1,0"))
            (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "55"))
            (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "1") (term "1,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
            (rule "concrete_not_1" (formula "1") (term "1,0,0"))
            (rule "concrete_or_4" (formula "1") (term "0,0"))
            (rule "variableDeclarationAssign" (formula "57") (term "1"))
            (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_10"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "55"))
            (rule "concrete_and_4" (formula "1") (term "0,0,1,0,0"))
            (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_2" (formula "1") (term "1,0,0"))
            (rule "concrete_or_4" (formula "1") (term "0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "51"))
            (rule "concrete_and_4" (formula "1") (term "0,0,1,0,0"))
            (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_2" (formula "1") (term "1,0,0"))
            (rule "concrete_or_4" (formula "1") (term "0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (rule "equalUnique" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_4" (formula "1") (term "0,0,0"))
            (rule "concrete_or_2" (formula "1") (term "0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfUnion" (formula "1") (term "1,0,0"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "49"))
            (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
            (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_or_2" (formula "1") (term "1,0,0"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
            (rule "eqClose" (formula "1") (term "0,0,1,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
            (rule "times_zero_2" (formula "1") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "4"))
            (rule "concrete_and_1" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_subsumption0" (formula "1") (term "1,0,0") (ifseqformula "34"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
            (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
            (rule "concrete_or_1" (formula "1") (term "1,0,0"))
            (rule "concrete_or_3" (formula "1") (term "0,0"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "compound_addition_2" (formula "56") (term "1") (inst "#v1=x_12") (inst "#v0=x_11"))
            (rule "variableDeclarationAssign" (formula "56") (term "1"))
            (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_11"))
            (rule "eval_order_array_access4" (formula "56") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "56") (term "1"))
            (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_arr_2"))
            (rule "assignment_read_attribute_this" (formula "56"))
            (rule "sequentialToParallel2" (formula "56"))
            (rule "simplifyUpdate3" (formula "56") (term "1,0"))
            (rule "applyOnElementary" (formula "56") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
            (rule "applyOnPV" (formula "56") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
            (rule "replaceKnownSelect_taclet101_14" (formula "56") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "56") (term "0,1,0"))
            (rule "assignment_array2" (formula "56"))
            (branch "Normal Execution (x_arr_2 != null)"
               (rule "sequentialToParallel2" (formula "56"))
               (rule "simplifyUpdate2" (formula "56"))
               (rule "simplifyUpdate3" (formula "56") (term "1,0"))
               (rule "applyOnElementary" (formula "56") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "56") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "56") (term "0,0,1,0"))
               (rule "applyOnRigidTerm" (formula "56") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "56") (term "0,2,0,1,0"))
               (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "55"))
               (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
               (rule "concrete_and_1" (formula "1") (term "1,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
               (rule "concrete_not_1" (formula "1") (term "1,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "variableDeclarationAssign" (formula "57") (term "1"))
               (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_12"))
               (rule "eval_order_array_access4" (formula "57") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "57") (term "1"))
               (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_arr_3"))
               (rule "assignment_read_attribute_this" (formula "57"))
               (rule "sequentialToParallel2" (formula "57"))
               (rule "simplifyUpdate3" (formula "57") (term "1,0"))
               (rule "applyOnElementary" (formula "57") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "57") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "57") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "57") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "57") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet101_14" (formula "57") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "57") (term "0,1,0"))
               (rule "eval_order_array_access5" (formula "57") (term "1") (inst "#v1=x_13") (inst "#ar1=x_arr_4"))
               (rule "variableDeclarationAssign" (formula "57") (term "1"))
               (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_arr_4"))
               (rule "assignment" (formula "57") (term "1"))
               (rule "sequentialToParallel2" (formula "57"))
               (rule "simplifyUpdate2" (formula "57"))
               (rule "simplifyUpdate3" (formula "57") (term "1,0"))
               (rule "applyOnElementary" (formula "57") (term "1,0"))
               (rule "applyOnPV" (formula "57") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "57") (term "1"))
               (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_13"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "55"))
               (rule "concrete_and_4" (formula "1") (term "0,0,1,0,0"))
               (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
               (rule "concrete_and_2" (formula "1") (term "1,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "55"))
               (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
               (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
               (rule "concrete_and_2" (formula "1") (term "1,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "equalUnique" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_4" (formula "1") (term "0,0,0"))
               (rule "concrete_or_2" (formula "1") (term "0,0"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
               (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
               (rule "concrete_or_2" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "equalUnique" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_4" (formula "1") (term "0,0,0"))
               (rule "concrete_or_2" (formula "1") (term "0,0"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
               (rule "eqClose" (formula "1") (term "0,0,1,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,1,0,0"))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "49"))
               (rule "concrete_and_2" (formula "1") (term "0,0,0,0"))
               (rule "concrete_and_2" (formula "1") (term "0,0,0"))
               (rule "concrete_or_2" (formula "1") (term "0,0"))
               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
               (rule "inEqSimp_subsumption1" (formula "1") (term "0,0,0") (ifseqformula "4"))
               (rule "leq_literals" (formula "1") (term "0,0,0,0"))
               (rule "concrete_or_1" (formula "1") (term "0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0"))
               (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "34"))
               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
               (rule "qeq_literals" (formula "1") (term "0,0,0"))
               (rule "concrete_or_1" (formula "1") (term "0,0"))
               (rule "ifthenelse_true" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "57") (term "0,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "assignmentAdditionInt" (formula "56") (term "1"))
               (rule "translateJavaAddInt" (formula "56") (term "0,0,1"))
               (rule "sequentialToParallel2" (formula "56"))
               (rule "simplifyUpdate3" (formula "56") (term "1,0"))
               (rule "applyOnElementary" (formula "56") (term "1,0"))
               (rule "polySimp_addComm0" (formula "56") (term "1,0,1,0"))
               (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "56") (term "1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
               (rule "add_literals" (formula "56") (term "0,0,1,0"))
               (rule "assignment_array2" (formula "56"))
               (branch "Normal Execution (x_arr_4 != null)"
                  (rule "sequentialToParallel2" (formula "56"))
                  (rule "simplifyUpdate2" (formula "56"))
                  (rule "simplifyUpdate3" (formula "56") (term "1,0"))
                  (rule "applyOnElementary" (formula "56") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "56") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "56") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "56") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "56") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "56") (term "0,2,0,1,0"))
                  (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "55"))
                  (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                  (rule "concrete_not_1" (formula "1") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "1") (term "0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "52"))
                  (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "1") (term "0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "51"))
                  (rule "concrete_and_4" (formula "1") (term "0,0,1,0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "1") (term "0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                  (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "49"))
                  (rule "concrete_and_2" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_2" (formula "1") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "34"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "4"))
                  (rule "leq_literals" (formula "1") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "allLeft" (formula "41") (inst "t=Z(0(#))"))
                  (rule "leq_literals" (formula "41") (term "0,0"))
                  (rule "concrete_or_2" (formula "41") (term "0"))
                  (rule "add_zero_right" (formula "41") (term "0,2,0,1"))
                  (rule "polySimp_homoEq" (formula "41") (term "1"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                  (rule "inEqSimp_homoInEq1" (formula "41") (term "0"))
                  (rule "times_zero_2" (formula "41") (term "1,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "41") (term "1"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0"))
                  (rule "mul_literals" (formula "41") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "41") (term "0,0"))
                  (rule "concrete_and_2" (formula "41") (term "0"))
                  (rule "concrete_or_2" (formula "41"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_4"))
                  (rule "simplifySelectOfAnon" (formula "41"))
                  (rule "elementOfFreshLocs" (formula "41") (term "1,0,0"))
                  (rule "equalUnique" (formula "41") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "41") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,0,0"))
                  (rule "replace_known_right" (formula "41") (term "0,0,1,0,0") (ifseqformula "56"))
                  (rule "concrete_not_2" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "1,0,0"))
                  (rule "replace_known_left" (formula "41") (term "0,1,0,0") (ifseqformula "11"))
                  (rule "concrete_not_1" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "42"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "42") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,1"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "leq_literals" (formula "41") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "41") (term "0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "41") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "41") (term "1,0,1,0,0") (ifseqformula "56"))
                  (rule "concrete_and_4" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "eqClose" (formula "41") (term "0,0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0"))
                  (rule "times_zero_2" (formula "41") (term "1,0,1,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "41") (term "1,0,0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_or_1" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_3" (formula "41") (term "0,0"))
                  (rule "ifthenelse_true" (formula "41") (term "0"))
                  (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "41"))
                  (rule "hideAuxiliaryEq" (formula "41"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_5"))
                  (rule "simplifySelectOfAnon" (formula "41"))
                  (rule "elementOfFreshLocs" (formula "41") (term "1,0,0"))
                  (rule "equalUnique" (formula "41") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "41") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,0,0"))
                  (rule "replace_known_right" (formula "41") (term "0,0,1,0,0") (ifseqformula "55"))
                  (rule "concrete_not_2" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "1,0,0"))
                  (rule "replace_known_left" (formula "41") (term "0,1,0,0") (ifseqformula "4"))
                  (rule "concrete_not_1" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "42"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                  (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "28"))
                  (rule "polySimp_sepPosMonomial" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1"))
                  (rule "polySimp_mulAssoc" (formula "42") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,1"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "leq_literals" (formula "41") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "41") (term "0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "41") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "41") (term "0,0,1,0,0") (ifseqformula "53"))
                  (rule "concrete_and_2" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "leq_literals" (formula "41") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "41") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "41") (term "0,1,0,0") (ifseqformula "50"))
                  (rule "concrete_and_2" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "eqClose" (formula "41") (term "0,0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "41") (term "1,0,0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_or_1" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_3" (formula "41") (term "0,0"))
                  (rule "ifthenelse_true" (formula "41") (term "0"))
                  (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "41"))
                  (rule "hideAuxiliaryEq" (formula "41"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_6"))
                  (rule "simplifySelectOfAnon" (formula "41"))
                  (rule "elementOfFreshLocs" (formula "41") (term "1,0,0"))
                  (rule "equalUnique" (formula "41") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "41") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,0,0"))
                  (rule "replace_known_right" (formula "41") (term "0,0,1,0,0") (ifseqformula "55"))
                  (rule "concrete_not_2" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "1,0,0"))
                  (rule "replace_known_left" (formula "41") (term "0,1,0,0") (ifseqformula "4"))
                  (rule "concrete_not_1" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "42"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "42"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "leq_literals" (formula "41") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "41") (term "0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "41") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "41") (term "1,0,1,0,0") (ifseqformula "55"))
                  (rule "concrete_and_4" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "leq_literals" (formula "41") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "41") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "41") (term "0,1,0,0") (ifseqformula "50"))
                  (rule "concrete_and_2" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "eqClose" (formula "41") (term "0,0,1,0,0"))
                  (rule "concrete_and_1" (formula "41") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "41") (term "1,0,0"))
                  (rule "leq_literals" (formula "41") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "41") (term "0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "41") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "41") (term "0,0,1,0,0") (ifseqformula "55"))
                  (rule "concrete_and_2" (formula "41") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
                  (rule "equalUnique" (formula "41") (term "1,1,0,0"))
                  (rule "concrete_and_4" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfUnion" (formula "41") (term "0,0"))
                  (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
                  (rule "equalUnique" (formula "41") (term "1,1,0,0"))
                  (rule "concrete_and_4" (formula "41") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "41") (term "0,0"))
                  (rule "elementOfSingleton" (formula "41") (term "0,0"))
                  (rule "equalUnique" (formula "41") (term "1,0,0"))
                  (rule "concrete_and_4" (formula "41") (term "0,0"))
                  (rule "ifthenelse_false" (formula "41") (term "0"))
                  (rule "applyEqReverse" (formula "42") (term "0,0,1") (ifseqformula "41"))
                  (rule "hideAuxiliaryEq" (formula "41"))
                  (rule "allLeft" (formula "29") (inst "t=Z(1(#))"))
                  (rule "add_literals" (formula "29") (term "0,2,0,1"))
                  (rule "leq_literals" (formula "29") (term "0,0"))
                  (rule "concrete_or_2" (formula "29") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "29") (term "0"))
                  (rule "mul_literals" (formula "29") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0"))
                  (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "28"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0"))
                  (rule "mul_literals" (formula "29") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "29") (term "0,0"))
                  (rule "concrete_and_2" (formula "29") (term "0"))
                  (rule "concrete_or_2" (formula "29"))
                  (rule "allLeft" (formula "43") (inst "t=Z(1(#))"))
                  (rule "replaceKnownSelect_taclet000101_24" (formula "43") (term "0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000101_25" (formula "43") (term "0,1,1"))
                  (rule "leq_literals" (formula "43") (term "0,0"))
                  (rule "concrete_or_2" (formula "43") (term "0"))
                  (rule "add_literals" (formula "43") (term "0,2,0,1"))
                  (rule "polySimp_homoEq" (formula "43") (term "1"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                  (rule "inEqSimp_homoInEq1" (formula "43") (term "0"))
                  (rule "mul_literals" (formula "43") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "43") (term "1"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                  (rule "polySimp_mulComm0" (formula "43") (term "0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0"))
                  (rule "mul_literals" (formula "43") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "43") (term "0,0"))
                  (rule "concrete_and_2" (formula "43") (term "0"))
                  (rule "concrete_or_2" (formula "43"))
                  (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_7"))
                  (rule "simplifySelectOfAnon" (formula "43"))
                  (rule "elementOfFreshLocs" (formula "43") (term "1,0,0"))
                  (rule "equalUnique" (formula "43") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "43") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "43") (term "0,0,0"))
                  (rule "replace_known_right" (formula "43") (term "0,0,1,0,0") (ifseqformula "58"))
                  (rule "concrete_not_2" (formula "43") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "43") (term "1,0,0"))
                  (rule "replace_known_left" (formula "43") (term "0,1,0,0") (ifseqformula "11"))
                  (rule "concrete_not_1" (formula "43") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "43") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "44"))
                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                  (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1"))
                  (rule "polySimp_rightDist" (formula "44") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "44") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "44") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "44") (term "0,1"))
                  (rule "elementOfUnion" (formula "43") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "43") (term "1,0,0"))
                  (rule "leq_literals" (formula "43") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "43") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "43") (term "0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "43") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "43") (term "0,0,1,0,0") (ifseqformula "55"))
                  (rule "concrete_and_2" (formula "43") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "43") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "43") (term "0,0"))
                  (rule "elementOfUnion" (formula "43") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "43") (term "1,0,0"))
                  (rule "eqClose" (formula "43") (term "0,0,1,0,0"))
                  (rule "concrete_and_1" (formula "43") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "43") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "43") (term "1,0,0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                  (rule "concrete_or_1" (formula "43") (term "1,0,0"))
                  (rule "concrete_or_3" (formula "43") (term "0,0"))
                  (rule "ifthenelse_true" (formula "43") (term "0"))
                  (rule "applyEqReverse" (formula "44") (term "0,1") (ifseqformula "43"))
                  (rule "hideAuxiliaryEq" (formula "43"))
                  (rule "polySimp_addComm0" (formula "43") (term "1"))
                  (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_8"))
                  (rule "simplifySelectOfAnon" (formula "43"))
                  (rule "elementOfFreshLocs" (formula "43") (term "1,0,0"))
                  (rule "equalUnique" (formula "43") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "43") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "43") (term "0,0,0"))
                  (rule "replace_known_right" (formula "43") (term "0,0,1,0,0") (ifseqformula "57"))
                  (rule "concrete_not_2" (formula "43") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "43") (term "1,0,0"))
                  (rule "replace_known_left" (formula "43") (term "0,1,0,0") (ifseqformula "4"))
                  (rule "concrete_not_1" (formula "43") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "43") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "44"))
                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                  (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                  (rule "applyEq" (formula "43") (term "2,0") (ifseqformula "29"))
                  (rule "polySimp_sepPosMonomial" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1"))
                  (rule "polySimp_rightDist" (formula "44") (term "1"))
                  (rule "polySimp_mulAssoc" (formula "44") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "44") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "44") (term "0,1"))
                  (rule "elementOfUnion" (formula "43") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "43") (term "1,0,0"))
                  (rule "leq_literals" (formula "43") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "43") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "43") (term "0,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "43") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "43") (term "0,0,1,0,0") (ifseqformula "55"))
                  (rule "concrete_and_2" (formula "43") (term "0,1,0,0"))
                  (rule "concrete_and_2" (formula "43") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "43") (term "0,0"))
                  (rule "elementOfUnion" (formula "43") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "43") (term "1,0,0"))
                  (rule "leq_literals" (formula "43") (term "1,0,1,0,0"))
                  (rule "concrete_and_3" (formula "43") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "43") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "43") (term "0,1,0,0") (ifseqformula "52"))
                  (rule "concrete_and_2" (formula "43") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "43") (term "0,0"))
                  (rule "elementOfUnion" (formula "43") (term "0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "43") (term "1,0,0"))
                  (rule "eqClose" (formula "43") (term "0,0,1,0,0"))
                  (rule "concrete_and_1" (formula "43") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "43") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0"))
                  (rule "add_literals" (formula "43") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                  (rule "replace_known_left" (formula "43") (term "1,0,0") (ifseqformula "2"))
                  (rule "concrete_or_3" (formula "43") (term "0,0"))
                  (rule "ifthenelse_true" (formula "43") (term "0"))
                  (rule "applyEqReverse" (formula "44") (term "0,1") (ifseqformula "43"))
                  (rule "hideAuxiliaryEq" (formula "43"))
                  (rule "polySimp_addComm0" (formula "43") (term "1"))
                  (rule "assignmentAdditionInt" (formula "59") (term "1"))
                  (rule "translateJavaAddInt" (formula "59") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "59"))
                  (rule "simplifyUpdate2" (formula "59"))
                  (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                  (rule "applyOnElementary" (formula "59") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "59") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "59") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "59") (term "0,1,0"))
                  (rule "less_equal_than_comparison_simple" (formula "59") (term "1"))
                  (rule "sequentialToParallel2" (formula "59"))
                  (rule "simplifyUpdate2" (formula "59"))
                  (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                  (rule "applyOnElementary" (formula "59") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "59") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "59") (term "1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "59") (term "0,0,0,1,0"))
                  (rule "applyOnPV" (formula "59") (term "1,0,0,1,0"))
                  (rule "applyOnPV" (formula "59") (term "0,0,0,1,0"))
                  (rule "blockEmpty" (formula "59") (term "1"))
                  (rule "ifElseSplit" (formula "59"))
                  (branch "if x_5 true"
                     (opengoal " ")
                  )
                  (branch "if x_5 false"
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "60"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "50"))
                     (rule "simplifyUpdate1" (formula "50") (term "1"))
                     (rule "applyOnPV" (formula "50") (term "0"))
                     (rule "ifthenelse_concrete3" (formula "50"))
                     (rule "boolean_not_equal_2" (formula "50") (term "1"))
                     (rule "concrete_or_4" (formula "50"))
                     (rule "inEqSimp_leqRight" (formula "50"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                     (rule "compound_assignment_3_nonsimple" (formula "60") (term "1"))
                     (rule "ifElseUnfold" (formula "60") (term "1") (inst "#boolv=x_5"))
                     (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_14"))
                     (rule "compound_assignment_2" (formula "60") (term "1") (inst "#v=x_15"))
                     (rule "variableDeclarationAssign" (formula "60") (term "1"))
                     (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_15"))
                     (rule "compound_greater_than_comparison_1" (formula "60") (term "1") (inst "#v0=x_16"))
                     (rule "variableDeclarationAssign" (formula "60") (term "1"))
                     (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_16"))
                     (rule "assignmentSubtractionInt" (formula "60") (term "1"))
                     (rule "translateJavaSubInt" (formula "60") (term "0,0,1"))
                     (rule "polySimp_elimSub" (formula "60") (term "0,0,1"))
                     (rule "mul_literals" (formula "60") (term "1,0,0,1"))
                     (rule "sequentialToParallel2" (formula "60"))
                     (rule "simplifyUpdate3" (formula "60") (term "1,0"))
                     (rule "applyOnElementary" (formula "60") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "60") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "60") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "60") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "60") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "60") (term "0,1,0"))
                     (rule "add_literals" (formula "60") (term "0,0,1,0"))
                     (rule "greater_than_comparison_simple" (formula "60") (term "1"))
                     (rule "sequentialToParallel2" (formula "60"))
                     (rule "simplifyUpdate2" (formula "60"))
                     (rule "simplifyUpdate3" (formula "60") (term "1,0"))
                     (rule "applyOnElementary" (formula "60") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "60") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "60") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "60") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "60") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "60") (term "0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "60") (term "1,0,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "60") (term "0,0,1,0"))
                     (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "60") (term "0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "60") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "60") (term "1,0,0,1,0"))
                     (rule "compound_assignment_1_new" (formula "60") (term "1"))
                     (rule "sequentialToParallel2" (formula "60"))
                     (rule "simplifyUpdate2" (formula "60"))
                     (rule "simplifyUpdate3" (formula "60") (term "1,0"))
                     (rule "applyOnElementary" (formula "60") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "60") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "60") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "60") (term "2,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "60") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "60") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "60") (term "0,0,0,1,0"))
                     (rule "ifthenelse_concrete3" (formula "60") (term "0,0,1,0"))
                     (rule "boolean_not_equal_2" (formula "60") (term "1,0,0,1,0"))
                     (rule "concrete_or_4" (formula "60") (term "0,0,1,0"))
                     (rule "allLeft" (formula "31") (inst "t=add(Z(neglit(2(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,2,0,1"))
                     (rule "add_literals" (formula "31") (term "0,0,2,0,1"))
                     (rule "polySimp_homoEq" (formula "31") (term "1"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "31") (term "1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "31") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "31") (term "0,0"))
                     (rule "concrete_or_2" (formula "31") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "48"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                     (rule "concrete_and_2" (formula "31") (term "0"))
                     (rule "concrete_or_2" (formula "31"))
                     (rule "allLeft" (formula "46") (inst "t=add(Z(neglit(2(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                     (rule "polySimp_homoEq" (formula "46") (term "1"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,1,0,0,1"))
                     (rule "add_literals" (formula "46") (term "0,0,2,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "46") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,1,0"))
                     (rule "add_literals" (formula "46") (term "1,1,0,1,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "46") (term "0,1,0"))
                     (rule "leq_literals" (formula "46") (term "1,0"))
                     (rule "concrete_or_4" (formula "46") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "46") (term "1"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "46") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "46") (term "0,0"))
                     (rule "concrete_and_2" (formula "46") (term "0"))
                     (rule "concrete_or_2" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,1,1") (inst "selectSK=arr_9"))
                     (rule "simplifySelectOfAnon" (formula "46"))
                     (rule "elementOfFreshLocs" (formula "46") (term "1,0,0"))
                     (rule "equalUnique" (formula "46") (term "0,1,0,0,0"))
                     (rule "concrete_not_2" (formula "46") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "46") (term "0,0,0"))
                     (rule "replace_known_right" (formula "46") (term "0,0,1,0,0") (ifseqformula "60"))
                     (rule "concrete_not_2" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_and_1" (formula "46") (term "1,0,0"))
                     (rule "replace_known_left" (formula "46") (term "0,1,0,0") (ifseqformula "5"))
                     (rule "concrete_not_1" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "47") (term "1"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqSymm" (formula "46") (term "0,0,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "46") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "46") (term "0,0,0,1,0,0") (ifseqformula "58"))
                     (rule "concrete_and_2" (formula "46") (term "0,0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqSymm" (formula "46") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "46") (term "0,0,1,0,0") (ifseqformula "55"))
                     (rule "concrete_and_2" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqClose" (formula "46") (term "0,0,1,0,0"))
                     (rule "concrete_and_1" (formula "46") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,1,0,0"))
                     (rule "replace_known_left" (formula "46") (term "0,1,0,0") (ifseqformula "4"))
                     (rule "concrete_and_1" (formula "46") (term "1,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "46") (term "1,0,0") (ifseqformula "36"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                     (rule "qeq_literals" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_or_1" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_3" (formula "46") (term "0,0"))
                     (rule "ifthenelse_true" (formula "46") (term "0"))
                     (rule "applyEqReverse" (formula "47") (term "0,0,1") (ifseqformula "46"))
                     (rule "hideAuxiliaryEq" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_10"))
                     (rule "simplifySelectOfAnon" (formula "46"))
                     (rule "elementOfFreshLocs" (formula "46") (term "1,0,0"))
                     (rule "equalUnique" (formula "46") (term "0,1,0,0,0"))
                     (rule "concrete_not_2" (formula "46") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "46") (term "0,0,0"))
                     (rule "replace_known_right" (formula "46") (term "0,0,1,0,0") (ifseqformula "61"))
                     (rule "concrete_not_2" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_and_1" (formula "46") (term "1,0,0"))
                     (rule "replace_known_left" (formula "46") (term "0,1,0,0") (ifseqformula "12"))
                     (rule "concrete_not_1" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "47"))
                     (rule "polySimp_addComm1" (formula "47") (term "0"))
                     (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                     (rule "applyEq" (formula "46") (term "2,0") (ifseqformula "31"))
                     (rule "polySimp_sepPosMonomial" (formula "47"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1"))
                     (rule "polySimp_rightDist" (formula "47") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "47") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "47") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "47") (term "0,1"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqSymm" (formula "46") (term "0,0,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "46") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "46") (term "0,0,0,1,0,0") (ifseqformula "58"))
                     (rule "concrete_and_2" (formula "46") (term "0,0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqClose" (formula "46") (term "0,0,1,0,0"))
                     (rule "concrete_and_1" (formula "46") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1,0,0"))
                     (rule "times_zero_2" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,1,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "46") (term "1,1,0,0") (ifseqformula "36"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "46") (term "1,1,0,0,1,1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,1,1,0,0"))
                     (rule "qeq_literals" (formula "46") (term "0,1,1,0,0"))
                     (rule "concrete_or_1" (formula "46") (term "1,1,0,0"))
                     (rule "concrete_and_3" (formula "46") (term "1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "46") (term "1,0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_or_1" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_3" (formula "46") (term "0,0"))
                     (rule "ifthenelse_true" (formula "46") (term "0"))
                     (rule "applyEqReverse" (formula "47") (term "0,1") (ifseqformula "46"))
                     (rule "hideAuxiliaryEq" (formula "46"))
                     (rule "polySimp_addComm0" (formula "46") (term "1"))
                     (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_11"))
                     (rule "simplifySelectOfAnon" (formula "46"))
                     (rule "elementOfFreshLocs" (formula "46") (term "1,0,0"))
                     (rule "equalUnique" (formula "46") (term "0,1,0,0,0"))
                     (rule "concrete_not_2" (formula "46") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "46") (term "0,0,0"))
                     (rule "replace_known_left" (formula "46") (term "0,1,1,0,0") (ifseqformula "5"))
                     (rule "concrete_not_1" (formula "46") (term "1,1,0,0"))
                     (rule "concrete_and_4" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "47"))
                     (rule "polySimp_addComm1" (formula "47") (term "0"))
                     (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "47"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1"))
                     (rule "polySimp_rightDist" (formula "47") (term "1"))
                     (rule "polySimp_mulAssoc" (formula "47") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "47") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "47") (term "0,1"))
                     (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "47"))
                     (rule "polySimp_addAssoc" (formula "1") (term "1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqSymm" (formula "46") (term "0,0,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "46") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "46") (term "1,0,0,1,0,0") (ifseqformula "60"))
                     (rule "concrete_and_4" (formula "46") (term "0,0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqSymm" (formula "46") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "46") (term "0,0,1,0,0") (ifseqformula "55"))
                     (rule "concrete_and_2" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "46") (term "0,0"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "1,0,0"))
                     (rule "eqClose" (formula "46") (term "0,0,1,0,0"))
                     (rule "concrete_and_1" (formula "46") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,1,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,1,1,0,0"))
                     (rule "replace_known_left" (formula "46") (term "1,1,0,0") (ifseqformula "36"))
                     (rule "concrete_and_3" (formula "46") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "46") (term "1,0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "46") (term "0,1,0,0"))
                     (rule "concrete_or_1" (formula "46") (term "1,0,0"))
                     (rule "concrete_or_3" (formula "46") (term "0,0"))
                     (rule "ifthenelse_true" (formula "46") (term "0"))
                     (rule "applyEqReverse" (formula "1") (term "1,0,0,1") (ifseqformula "46"))
                     (rule "applyEqReverse" (formula "47") (term "0,1") (ifseqformula "46"))
                     (rule "hideAuxiliaryEq" (formula "46"))
                     (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(3(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,2,0,1"))
                     (rule "add_literals" (formula "32") (term "0,0,2,0,1"))
                     (rule "polySimp_homoEq" (formula "32") (term "1"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "32") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "32") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "32") (term "0,0"))
                     (rule "concrete_or_2" (formula "32") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "50"))
                     (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0,0"))
                     (rule "leq_literals" (formula "32") (term "0,0"))
                     (rule "concrete_and_2" (formula "32") (term "0"))
                     (rule "concrete_or_2" (formula "32"))
                     (rule "allLeft" (formula "48") (inst "t=add(Z(neglit(3(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                     (rule "polySimp_homoEq" (formula "48") (term "1"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,2,0,1,0,0,1"))
                     (rule "add_literals" (formula "48") (term "0,0,2,0,1,0,0,1"))
                     (rule "replaceKnownSelect_taclet1000101_32" (formula "48") (term "0,1,0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000101_33" (formula "48") (term "0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "48") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,1,0"))
                     (rule "add_literals" (formula "48") (term "1,1,0,1,0"))
                     (rule "times_zero_1" (formula "48") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "48") (term "0,1,0"))
                     (rule "leq_literals" (formula "48") (term "1,0"))
                     (rule "concrete_or_4" (formula "48") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "48") (term "1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "48") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "48") (term "0,0"))
                     (rule "concrete_and_2" (formula "48") (term "0"))
                     (rule "concrete_or_2" (formula "48"))
                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_12"))
                     (rule "simplifySelectOfAnon" (formula "48"))
                     (rule "elementOfFreshLocs" (formula "48") (term "1,0,0"))
                     (rule "equalUnique" (formula "48") (term "0,1,0,0,0"))
                     (rule "concrete_not_2" (formula "48") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "48") (term "0,0,0"))
                     (rule "replace_known_right" (formula "48") (term "0,0,1,0,0") (ifseqformula "63"))
                     (rule "concrete_not_2" (formula "48") (term "0,1,0,0"))
                     (rule "concrete_and_1" (formula "48") (term "1,0,0"))
                     (rule "replace_known_left" (formula "48") (term "0,1,0,0") (ifseqformula "12"))
                     (rule "concrete_not_1" (formula "48") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "48") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "49"))
                     (rule "polySimp_addComm1" (formula "49") (term "0"))
                     (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                     (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "32"))
                     (rule "polySimp_sepNegMonomial" (formula "49"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                     (rule "polySimp_elimOne" (formula "49") (term "0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
                     (rule "eqSymm" (formula "48") (term "0,0,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "48") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "48") (term "0,0,0,1,0,0") (ifseqformula "60"))
                     (rule "concrete_and_2" (formula "48") (term "0,0,1,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "48") (term "0,0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
                     (rule "eqClose" (formula "48") (term "0,0,1,0,0"))
                     (rule "concrete_and_1" (formula "48") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "48") (term "1,0,1,0,0"))
                     (rule "replace_known_left" (formula "48") (term "0,1,0,0") (ifseqformula "4"))
                     (rule "concrete_and_1" (formula "48") (term "1,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "48") (term "1,0,0") (ifseqformula "37"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,1,0,0"))
                     (rule "qeq_literals" (formula "48") (term "0,1,0,0"))
                     (rule "concrete_or_1" (formula "48") (term "1,0,0"))
                     (rule "concrete_or_3" (formula "48") (term "0,0"))
                     (rule "ifthenelse_true" (formula "48") (term "0"))
                     (rule "applyEqReverse" (formula "49") (term "0,0,1") (ifseqformula "48"))
                     (rule "hideAuxiliaryEq" (formula "48"))
                     (rule "polySimp_addComm0" (formula "48") (term "1"))
                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_13"))
                     (rule "simplifySelectOfAnon" (formula "48"))
                     (rule "elementOfFreshLocs" (formula "48") (term "1,0,0"))
                     (rule "equalUnique" (formula "48") (term "0,1,0,0,0"))
                     (rule "concrete_not_2" (formula "48") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "48") (term "0,0,0"))
                     (rule "replace_known_right" (formula "48") (term "0,0,1,0,0") (ifseqformula "62"))
                     (rule "concrete_not_2" (formula "48") (term "0,1,0,0"))
                     (rule "concrete_and_1" (formula "48") (term "1,0,0"))
                     (rule "replace_known_left" (formula "48") (term "0,1,0,0") (ifseqformula "5"))
                     (rule "concrete_not_1" (formula "48") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "48") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "49"))
                     (rule "polySimp_addComm1" (formula "49") (term "0"))
                     (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "49"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                     (rule "polySimp_elimOne" (formula "49") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "49"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
                     (rule "eqSymm" (formula "48") (term "0,0,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "48") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "48") (term "0,0,0,1,0,0") (ifseqformula "60"))
                     (rule "concrete_and_2" (formula "48") (term "0,0,1,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "48") (term "0,0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
                     (rule "eqSymm" (formula "48") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "48") (term "0,0,1,0,0") (ifseqformula "57"))
                     (rule "concrete_and_2" (formula "48") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "48") (term "0,0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
                     (rule "eqClose" (formula "48") (term "0,0,1,0,0"))
                     (rule "concrete_and_1" (formula "48") (term "0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1,1,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,1,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "48") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "48") (term "1,0,1,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "48") (term "1,1,0,0") (ifseqformula "37"))
                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,1,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "48") (term "1,1,0,0,1,1,0,0"))
                     (rule "times_zero_1" (formula "48") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,1,1,0,0"))
                     (rule "qeq_literals" (formula "48") (term "0,1,1,0,0"))
                     (rule "concrete_or_1" (formula "48") (term "1,1,0,0"))
                     (rule "concrete_and_3" (formula "48") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "48") (term "0,0,1,0,0,0"))
                     (rule "replace_known_right" (formula "48") (term "1,0,0,1,0,0,0") (ifseqformula "59"))
                     (rule "concrete_and_4" (formula "48") (term "0,0,1,0,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "0,1,0,0,0"))
                     (rule "concrete_and_2" (formula "48") (term "1,0,0,0"))
                     (rule "concrete_or_4" (formula "48") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "48") (term "1,0,0,0"))
                     (rule "equalUnique" (formula "48") (term "1,1,0,0,0"))
                     (rule "concrete_and_4" (formula "48") (term "1,0,0,0"))
                     (rule "concrete_or_4" (formula "48") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "48") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "48") (term "0,0,0,0"))
                     (rule "equalUnique" (formula "48") (term "1,0,0,0,0"))
                     (rule "concrete_and_4" (formula "48") (term "0,0,0,0"))
                     (rule "concrete_or_2" (formula "48") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "48") (term "0,0,0"))
                     (rule "equalUnique" (formula "48") (term "1,0,0,0"))
                     (rule "concrete_and_4" (formula "48") (term "0,0,0"))
                     (rule "concrete_or_2" (formula "48") (term "0,0"))
                     (rule "ifElseSplit" (formula "65"))
                     (branch "if x_14 true"
                        (opengoal " ")
                     )
                     (branch "if x_14 false"
                        (rule "false_to_not_true" (formula "1") (term "1"))
                        (rule "simplifyUpdate2" (formula "66"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "56"))
                        (rule "applyOnPV" (formula "56") (term "0"))
                        (rule "simplifyUpdate1" (formula "56") (term "1"))
                        (rule "ifthenelse_concrete4" (formula "56"))
                        (rule "boolean_not_equal_2" (formula "56") (term "1"))
                        (rule "concrete_or_4" (formula "56"))
                        (rule "notRight" (formula "56"))
                        (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "1"))
                        (rule "ifthenelse_true" (formula "49") (term "0"))
                        (rule "applyEqReverse" (formula "50") (term "0,0,1") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "2") (term "1,0,0,1") (ifseqformula "49"))
                        (rule "hideAuxiliaryEq" (formula "49"))
                        (rule "polySimp_addComm0" (formula "49") (term "1"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "2") (term "1"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                        (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "37"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "51"))
                        (rule "mul_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                        (rule "mul_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "compound_less_equal_than_comparison_2" (formula "64") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
                        (rule "variableDeclarationAssign" (formula "64") (term "1"))
                        (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_17"))
                        (rule "eval_order_array_access4" (formula "64") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclarationAssign" (formula "64") (term "1"))
                        (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_arr_5"))
                        (rule "assignment_read_attribute_this" (formula "64"))
                        (rule "sequentialToParallel2" (formula "64"))
                        (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                        (rule "applyOnElementary" (formula "64") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                        (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "64") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                        (rule "replaceKnownSelect_taclet101_14" (formula "64") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "64") (term "0,1,0"))
                        (rule "eval_order_array_access5" (formula "64") (term "1") (inst "#v1=x_18") (inst "#ar1=x_arr_6"))
                        (rule "variableDeclarationAssign" (formula "64") (term "1"))
                        (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_arr_6"))
                        (rule "assignment" (formula "64") (term "1"))
                        (rule "sequentialToParallel2" (formula "64"))
                        (rule "simplifyUpdate2" (formula "64"))
                        (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                        (rule "applyOnElementary" (formula "64") (term "1,0"))
                        (rule "applyOnPV" (formula "64") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "64") (term "1"))
                        (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_18"))
                        (rule "assignmentSubtractionInt" (formula "64") (term "1"))
                        (rule "translateJavaSubInt" (formula "64") (term "0,0,1"))
                        (rule "polySimp_elimSub" (formula "64") (term "0,0,1"))
                        (rule "mul_literals" (formula "64") (term "1,0,0,1"))
                        (rule "sequentialToParallel2" (formula "64"))
                        (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                        (rule "applyOnElementary" (formula "64") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "64") (term "1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                        (rule "applyOnPV" (formula "64") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                        (rule "add_literals" (formula "64") (term "0,0,1,0"))
                        (rule "assignment_array2" (formula "64"))
                        (branch "Normal Execution (x_arr_6 != null)"
                           (rule "sequentialToParallel2" (formula "64"))
                           (rule "simplifyUpdate2" (formula "64"))
                           (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                           (rule "applyOnElementary" (formula "64") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "64") (term "2,0,1,0"))
                           (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                           (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                           (rule "applyOnPV" (formula "64") (term "1,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "64") (term "2,0,1,0"))
                           (rule "applyOnPV" (formula "64") (term "0,2,0,1,0"))
                           (rule "pullOutSelect" (formula "64") (term "0,1,0") (inst "selectSK=arr_14"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "13"))
                           (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
                           (rule "concrete_and_4" (formula "1") (term "1,0,0"))
                           (rule "concrete_or_4" (formula "1") (term "0,0"))
                           (rule "variableDeclarationAssign" (formula "65") (term "1"))
                           (rule "variableDeclaration" (formula "65") (term "1") (newnames "x_19"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "60"))
                           (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
                           (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_or_4" (formula "1") (term "0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "59"))
                           (rule "concrete_and_4" (formula "1") (term "0,0,1,0,0"))
                           (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_or_4" (formula "1") (term "0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                           (rule "concrete_or_2" (formula "1") (term "0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                           (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                           (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                           (rule "concrete_or_2" (formula "1") (term "0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                           (rule "eqClose" (formula "1") (term "0,0,1,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,1,0,0"))
                           (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "57"))
                           (rule "concrete_and_2" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                           (rule "concrete_or_2" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                           (rule "concrete_and_1" (formula "1") (term "0,0"))
                           (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "38"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "1") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "1") (term "0,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "65") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "compound_addition_2" (formula "64") (term "1") (inst "#v1=x_21") (inst "#v0=x_20"))
                           (rule "variableDeclarationAssign" (formula "64") (term "1"))
                           (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_20"))
                           (rule "eval_order_array_access4" (formula "64") (term "1") (inst "#v0=x_arr"))
                           (rule "variableDeclarationAssign" (formula "64") (term "1"))
                           (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_arr_7"))
                           (rule "assignment_read_attribute_this" (formula "64"))
                           (rule "sequentialToParallel2" (formula "64"))
                           (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                           (rule "applyOnElementary" (formula "64") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "64") (term "2,0,1,0"))
                           (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet101_14" (formula "64") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "64") (term "0,1,0"))
                           (rule "assignment_array2" (formula "64"))
                           (branch "Normal Execution (x_arr_7 != null)"
                              (rule "sequentialToParallel2" (formula "64"))
                              (rule "simplifyUpdate2" (formula "64"))
                              (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                              (rule "applyOnElementary" (formula "64") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                              (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "64") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "64") (term "1,0,1,0"))
                              (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "64") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "64") (term "0,2,0,1,0"))
                              (rule "replaceKnownSelect_taclet00101_18" (formula "64") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00101_19" (formula "64") (term "0,1,0"))
                              (rule "variableDeclarationAssign" (formula "64") (term "1"))
                              (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_21"))
                              (rule "eval_order_array_access4" (formula "64") (term "1") (inst "#v0=x_arr"))
                              (rule "variableDeclarationAssign" (formula "64") (term "1"))
                              (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_arr_8"))
                              (rule "assignment_read_attribute_this" (formula "64"))
                              (rule "sequentialToParallel2" (formula "64"))
                              (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                              (rule "applyOnElementary" (formula "64") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "64") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                              (rule "replaceKnownSelect_taclet101_14" (formula "64") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "64") (term "0,1,0"))
                              (rule "eval_order_array_access5" (formula "64") (term "1") (inst "#v1=x_22") (inst "#ar1=x_arr_9"))
                              (rule "variableDeclarationAssign" (formula "64") (term "1"))
                              (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_arr_9"))
                              (rule "assignment" (formula "64") (term "1"))
                              (rule "sequentialToParallel2" (formula "64"))
                              (rule "simplifyUpdate2" (formula "64"))
                              (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                              (rule "applyOnElementary" (formula "64") (term "1,0"))
                              (rule "applyOnPV" (formula "64") (term "0,1,0"))
                              (rule "variableDeclarationAssign" (formula "64") (term "1"))
                              (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_22"))
                              (rule "applyEq" (formula "64") (term "0,1,0,0") (ifseqformula "47"))
                              (rule "assignmentSubtractionInt" (formula "64") (term "1"))
                              (rule "translateJavaSubInt" (formula "64") (term "0,0,1"))
                              (rule "polySimp_elimSub" (formula "64") (term "0,0,1"))
                              (rule "mul_literals" (formula "64") (term "1,0,0,1"))
                              (rule "sequentialToParallel2" (formula "64"))
                              (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                              (rule "applyOnElementary" (formula "64") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "64") (term "1,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0"))
                              (rule "applyOnPV" (formula "64") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                              (rule "add_literals" (formula "64") (term "0,0,1,0"))
                              (rule "assignment_array2" (formula "64"))
                              (branch "Normal Execution (x_arr_9 != null)"
                                 (rule "sequentialToParallel2" (formula "64"))
                                 (rule "simplifyUpdate2" (formula "64"))
                                 (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                                 (rule "applyOnElementary" (formula "64") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "2,0,1,0"))
                                 (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                                 (rule "applyOnPV" (formula "64") (term "1,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "64") (term "2,0,1,0"))
                                 (rule "applyOnPV" (formula "64") (term "0,2,0,1,0"))
                                 (rule "replaceKnownSelect_taclet0101_16" (formula "64") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0101_17" (formula "64") (term "0,1,0"))
                                 (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "48"))
                                 (rule "assignmentAdditionInt" (formula "64") (term "1"))
                                 (rule "translateJavaAddInt" (formula "64") (term "0,0,1"))
                                 (rule "sequentialToParallel2" (formula "64"))
                                 (rule "simplifyUpdate2" (formula "64"))
                                 (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                                 (rule "applyOnElementary" (formula "64") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                                 (rule "applyOnPV" (formula "64") (term "0,0,1,0"))
                                 (rule "applyOnPV" (formula "64") (term "1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "64") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "64") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "64") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0,1,0"))
                                 (rule "less_equal_than_comparison_simple" (formula "64") (term "1"))
                                 (rule "sequentialToParallel2" (formula "64"))
                                 (rule "simplifyUpdate2" (formula "64"))
                                 (rule "simplifyUpdate3" (formula "64") (term "1,0"))
                                 (rule "applyOnElementary" (formula "64") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "64") (term "0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "1,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "2,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "64") (term "0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "1,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "64") (term "0,0,0,1,0"))
                                 (rule "applyOnPV" (formula "64") (term "1,0,0,1,0"))
                                 (rule "applyOnPV" (formula "64") (term "0,0,0,1,0"))
                                 (rule "blockEmpty" (formula "64") (term "1"))
                                 (rule "allLeft" (formula "49") (inst "t=Z(2(#))"))
                                 (rule "replaceKnownSelect_taclet000101_30" (formula "49") (term "0,1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000101_31" (formula "49") (term "0,1,1"))
                                 (rule "add_literals" (formula "49") (term "0,2,0,1"))
                                 (rule "leq_literals" (formula "49") (term "0,0"))
                                 (rule "concrete_or_2" (formula "49") (term "0"))
                                 (rule "polySimp_homoEq" (formula "49") (term "1"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "49") (term "0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "49") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0"))
                                 (rule "mul_literals" (formula "49") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "49") (term "0,0"))
                                 (rule "concrete_and_2" (formula "49") (term "0"))
                                 (rule "concrete_or_2" (formula "49"))
                                 (rule "pullOutSelect" (formula "49") (term "1,1") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnon" (formula "49"))
                                 (rule "elementOfFreshLocs" (formula "49") (term "1,0,0"))
                                 (rule "equalUnique" (formula "49") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "49") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "49") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "49") (term "0,0,1,0,0") (ifseqformula "63"))
                                 (rule "concrete_not_2" (formula "49") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "49") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "49") (term "0,1,0,0") (ifseqformula "5"))
                                 (rule "concrete_not_1" (formula "49") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "49") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "50") (term "1"))
                                 (rule "elementOfUnion" (formula "49") (term "0,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "49") (term "1,0,0"))
                                 (rule "leq_literals" (formula "49") (term "1,0,1,0,0"))
                                 (rule "concrete_and_3" (formula "49") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "49") (term "0,1,0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "49") (term "0,1,0,0"))
                                 (rule "replace_known_right" (formula "49") (term "1,0,1,0,0") (ifseqformula "63"))
                                 (rule "concrete_and_4" (formula "49") (term "0,1,0,0"))
                                 (rule "concrete_and_2" (formula "49") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "49") (term "0,0"))
                                 (rule "elementOfUnion" (formula "49") (term "0,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "49") (term "1,0,0"))
                                 (rule "leq_literals" (formula "49") (term "1,0,1,0,0"))
                                 (rule "concrete_and_3" (formula "49") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "49") (term "0,1,0,0"))
                                 (rule "replace_known_right" (formula "49") (term "0,1,0,0") (ifseqformula "58"))
                                 (rule "concrete_and_2" (formula "49") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "49") (term "0,0"))
                                 (rule "elementOfUnion" (formula "49") (term "0,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "49") (term "1,0,0"))
                                 (rule "eqClose" (formula "49") (term "0,0,1,0,0"))
                                 (rule "concrete_and_1" (formula "49") (term "0,1,0,0"))
                                 (rule "leq_literals" (formula "49") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "49") (term "1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "replace_known_left" (formula "49") (term "1,0,0") (ifseqformula "1"))
                                 (rule "concrete_or_3" (formula "49") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "49") (term "0"))
                                 (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "49"))
                                 (rule "hideAuxiliaryEq" (formula "49"))
                                 (rule "polySimp_addComm0" (formula "49") (term "1"))
                                 (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnon" (formula "49"))
                                 (rule "elementOfFreshLocs" (formula "49") (term "1,0,0"))
                                 (rule "equalUnique" (formula "49") (term "0,1,0,0,0"))
                                 (rule "concrete_not_2" (formula "49") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "49") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "49") (term "0,0,1,0,0") (ifseqformula "64"))
                                 (rule "concrete_not_2" (formula "49") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "49") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "49") (term "0,1,0,0") (ifseqformula "12"))
                                 (rule "concrete_not_1" (formula "49") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "49") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "50"))
                                 (rule "polySimp_addComm1" (formula "50") (term "0"))
                                 (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "50"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "50") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "50") (term "0,1"))
                                 (rule "elementOfUnion" (formula "49") (term "0,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "49") (term "1,0,0"))
                                 (rule "leq_literals" (formula "49") (term "1,0,1,0,0"))
                                 (rule "concrete_and_3" (formula "49") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "49") (term "0,1,0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "49") (term "0,1,0,0"))
                                 (rule "replace_known_right" (formula "49") (term "0,0,1,0,0") (ifseqformula "61"))
                                 (rule "concrete_and_2" (formula "49") (term "0,1,0,0"))
                                 (rule "concrete_and_2" (formula "49") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "49") (term "0,0"))
                                 (rule "elementOfUnion" (formula "49") (term "0,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "49") (term "1,0,0"))
                                 (rule "eqClose" (formula "49") (term "0,0,1,0,0"))
                                 (rule "concrete_and_1" (formula "49") (term "0,1,0,0"))
                                 (rule "leq_literals" (formula "49") (term "0,1,0,0"))
                                 (rule "concrete_and_1" (formula "49") (term "1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "49") (term "1,0,0") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "49") (term "0,1,0,0"))
                                 (rule "concrete_or_1" (formula "49") (term "1,0,0"))
                                 (rule "concrete_or_3" (formula "49") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "49") (term "0"))
                                 (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "49"))
                                 (rule "hideAuxiliaryEq" (formula "49"))
                                 (rule "polySimp_homoEq" (formula "49"))
                                 (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "49") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "49"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "0,1"))
                                 (rule "allLeft" (formula "33") (inst "t=Z(2(#))"))
                                 (rule "leq_literals" (formula "33") (term "0,0"))
                                 (rule "concrete_or_2" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "0,2,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "30"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0"))
                                 (rule "mul_literals" (formula "33") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "33") (term "0,0"))
                                 (rule "concrete_and_2" (formula "33") (term "0"))
                                 (rule "concrete_or_2" (formula "33"))
                                 (rule "ifElseSplit" (formula "66"))
                                 (branch "if x_4 true"
                                    (rule "selectOfAnon" (formula "40") (term "2,0"))
                                    (rule "elementOfFreshLocs" (formula "40") (term "1,0,2,0"))
                                    (rule "selectOfAnon" (formula "52") (term "1,1,1,0"))
                                    (rule "elementOfFreshLocs" (formula "52") (term "1,0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "40") (term "0,0,0,2,0"))
                                    (rule "elementOfUnion" (formula "40") (term "0,0,0,0,2,0"))
                                    (rule "elementOfArrayRange" (formula "40") (term "1,0,0,0,0,2,0") (inst "iv=iv"))
                                    (rule "elementOfArrayRange" (formula "40") (term "1,0,0,0,2,0") (inst "iv=iv"))
                                    (rule "selectOfAnon" (formula "52") (term "0,1,1,0"))
                                    (rule "elementOfFreshLocs" (formula "52") (term "1,0,0,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,1,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "40") (term "0,0,0,0,0,2,0"))
                                    (rule "elementOfUnion" (formula "40") (term "0,0,0,0,0,0,2,0"))
                                    (rule "elementOfUnion" (formula "40") (term "0,0,0,0,0,0,0,2,0"))
                                    (rule "elementOfSingleton" (formula "40") (term "1,0,0,0,0,0,0,0,2,0"))
                                    (rule "elementOfUnion" (formula "40") (term "0,0,0,0,0,0,0,0,2,0"))
                                    (rule "elementOfSingleton" (formula "40") (term "0,0,0,0,0,0,0,0,0,2,0"))
                                    (rule "elementOfSingleton" (formula "40") (term "1,0,0,0,0,0,0,0,0,2,0"))
                                    (rule "elementOfArrayRange" (formula "40") (term "1,0,0,0,0,0,2,0") (inst "iv=iv"))
                                    (rule "elementOfArrayRange" (formula "40") (term "1,0,0,0,0,0,0,2,0") (inst "iv=iv"))
                                    (rule "selectOfAnon" (formula "52") (term "0,1,0"))
                                    (rule "elementOfFreshLocs" (formula "52") (term "1,0,0,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,1,0") (inst "iv=iv"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,1,1,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,1,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "1,0,0,0,0,0,0,0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "0,0,0,0,0,0,0,0,0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "1,0,0,0,0,0,0,0,0,1,1,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,0,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                    (rule "elementOfUnion" (formula "52") (term "0,0,0,0,0,0,0,0,0,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                                    (rule "elementOfSingleton" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                    (rule "elementOfArrayRange" (formula "52") (term "1,0,0,0,0,0,1,0") (inst "iv=iv"))
                                    (rule "simplifyUpdate2" (formula "67"))
                                    (rule "ifUnfold" (formula "67") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_28"))
                                    (rule "compound_less_than_comparison_2" (formula "67") (term "1") (inst "#v1=x_30") (inst "#v0=x_29"))
                                    (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                    (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_29"))
                                    (rule "eval_order_array_access4" (formula "67") (term "1") (inst "#v0=x_arr"))
                                    (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                    (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_arr_13"))
                                    (rule "assignment_read_attribute_this" (formula "67"))
                                    (rule "sequentialToParallel2" (formula "67"))
                                    (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                    (rule "applyOnElementary" (formula "67") (term "1,0"))
                                    (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                    (rule "applyOnPV" (formula "67") (term "0,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                                    (rule "replaceKnownSelect_taclet101_14" (formula "67") (term "0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "67") (term "0,1,0"))
                                    (rule "eval_order_array_access5" (formula "67") (term "1") (inst "#v1=x_31") (inst "#ar1=x_arr_14"))
                                    (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                    (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_arr_14"))
                                    (rule "assignment" (formula "67") (term "1"))
                                    (rule "sequentialToParallel2" (formula "67"))
                                    (rule "simplifyUpdate2" (formula "67"))
                                    (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                    (rule "applyOnElementary" (formula "67") (term "1,0"))
                                    (rule "applyOnPV" (formula "67") (term "0,1,0"))
                                    (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                    (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_31"))
                                    (rule "assignmentSubtractionInt" (formula "67") (term "1"))
                                    (rule "translateJavaSubInt" (formula "67") (term "0,0,1"))
                                    (rule "polySimp_elimSub" (formula "67") (term "0,0,1"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1"))
                                    (rule "sequentialToParallel2" (formula "67"))
                                    (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                    (rule "applyOnElementary" (formula "67") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "67") (term "1,0,1,0"))
                                    (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                    (rule "applyOnPV" (formula "67") (term "1,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "67") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                    (rule "assignment_array2" (formula "67"))
                                    (branch "Normal Execution (x_arr_14 != null)"
                                       (rule "sequentialToParallel2" (formula "67"))
                                       (rule "simplifyUpdate2" (formula "67"))
                                       (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                       (rule "applyOnElementary" (formula "67") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "67") (term "0,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                                       (rule "applyOnPV" (formula "67") (term "0,0,1,0"))
                                       (rule "applyOnPV" (formula "67") (term "1,0,1,0"))
                                       (rule "applyOnRigidTerm" (formula "67") (term "2,0,1,0"))
                                       (rule "applyOnPV" (formula "67") (term "0,2,0,1,0"))
                                       (rule "replaceKnownSelect_taclet0101_16" (formula "67") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0101_17" (formula "67") (term "0,1,0"))
                                       (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                       (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_30"))
                                       (rule "eval_order_array_access4" (formula "67") (term "1") (inst "#v0=x_arr"))
                                       (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                       (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_arr_15"))
                                       (rule "assignment_read_attribute_this" (formula "67"))
                                       (rule "sequentialToParallel2" (formula "67"))
                                       (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                       (rule "applyOnElementary" (formula "67") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                       (rule "applyOnPV" (formula "67") (term "0,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                                       (rule "replaceKnownSelect_taclet101_14" (formula "67") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "67") (term "0,1,0"))
                                       (rule "eval_order_array_access5" (formula "67") (term "1") (inst "#v1=x_31") (inst "#ar1=x_arr_16"))
                                       (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                       (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_arr_16"))
                                       (rule "assignment" (formula "67") (term "1"))
                                       (rule "sequentialToParallel2" (formula "67"))
                                       (rule "simplifyUpdate2" (formula "67"))
                                       (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                       (rule "applyOnElementary" (formula "67") (term "1,0"))
                                       (rule "applyOnPV" (formula "67") (term "0,1,0"))
                                       (rule "variableDeclarationAssign" (formula "67") (term "1"))
                                       (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_32"))
                                       (rule "assignmentAdditionInt" (formula "67") (term "1"))
                                       (rule "translateJavaAddInt" (formula "67") (term "0,0,1"))
                                       (rule "sequentialToParallel2" (formula "67"))
                                       (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                       (rule "applyOnElementary" (formula "67") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "67") (term "1,0,1,0"))
                                       (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                       (rule "applyOnPV" (formula "67") (term "1,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "67") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "67") (term "0,1,0"))
                                       (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                       (rule "assignment_array2" (formula "67"))
                                       (branch "Normal Execution (x_arr_16 != null)"
                                          (rule "sequentialToParallel2" (formula "67"))
                                          (rule "simplifyUpdate2" (formula "67"))
                                          (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                          (rule "applyOnElementary" (formula "67") (term "1,0"))
                                          (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                          (rule "simplifyUpdate1" (formula "67") (term "0,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                                          (rule "applyOnPV" (formula "67") (term "0,0,1,0"))
                                          (rule "applyOnPV" (formula "67") (term "1,0,1,0"))
                                          (rule "applyOnRigidTerm" (formula "67") (term "2,0,1,0"))
                                          (rule "applyOnPV" (formula "67") (term "0,2,0,1,0"))
                                          (rule "replaceKnownSelect_taclet000101_20" (formula "67") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000101_21" (formula "67") (term "0,1,0"))
                                          (rule "less_than_comparison_simple" (formula "67") (term "1"))
                                          (rule "sequentialToParallel2" (formula "67"))
                                          (rule "simplifyUpdate2" (formula "67"))
                                          (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                          (rule "applyOnElementary" (formula "67") (term "1,0"))
                                          (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                          (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                                          (rule "applyOnRigidFormula" (formula "67") (term "0,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "67") (term "0,0,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "67") (term "1,0,0,1,0"))
                                          (rule "applyOnPV" (formula "67") (term "0,0,0,1,0"))
                                          (rule "applyOnPV" (formula "67") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0"))
                                          (rule "ifSplit" (formula "67"))
                                          (branch "if x_28 true"
                                             (opengoal " ")
                                          )
                                          (branch "if x_28 false"
                                             (rule "false_to_not_true" (formula "1") (term "1"))
                                             (rule "simplifyUpdate2" (formula "68"))
                                             (rule "simplifyUpdate2" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "applyOnRigidFormula" (formula "58"))
                                             (rule "applyOnPV" (formula "58") (term "0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1"))
                                             (rule "ifthenelse_concrete3" (formula "58"))
                                             (rule "boolean_not_equal_2" (formula "58") (term "1"))
                                             (rule "concrete_or_4" (formula "58"))
                                             (rule "inEqSimp_leqRight" (formula "58"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "blockEmpty" (formula "68") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "unusedLabel" (formula "68") (term "1"))
                                             (builtin "Use Operation Contract" (formula "68") (newnames "heapBefore_mergeAt_0,exc_2,heapAfter_mergeAt_0,anon_heap_mergeAt_0") (contract "java.util.TimSort[java.util.TimSort::mergeAt(int)].JML normal_behavior operation contract.0"))
                                             (branch "Post (mergeAt)"
                                                (rule "false_to_not_true" (formula "60") (term "0,1,1,0,0,1,1,1,1,1"))
                                                (rule "simplifyUpdate2" (formula "70"))
                                                (rule "simplifyUpdate2" (formula "60"))
                                                (rule "eqSymm" (formula "60") (term "0,0,0,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "0,1,0,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "0,0,1,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "0,1,1,0,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "1,1,1,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,1,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,1,0,0,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_homoEq" (formula "60") (term "1,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,1,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,1,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,1,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "0,0,0,0,0,0,1,1,1,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,0,0,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "0,0,1,0,0,0,1,1,1,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_homoEq" (formula "60") (term "0,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_homoEq" (formula "60") (term "0,1,0,0,0,1,1,1,1,1"))
                                                (rule "sequentialToParallel2" (formula "70"))
                                                (rule "simplifyUpdate2" (formula "70"))
                                                (rule "simplifyUpdate3" (formula "70") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,1,1,1,1"))
                                                (rule "sequentialToParallel2" (formula "60"))
                                                (rule "simplifyUpdate3" (formula "60") (term "1,0"))
                                                (rule "andLeft" (formula "60"))
                                                (rule "simplifyUpdate2" (formula "60"))
                                                (rule "applyOnSkip" (formula "60") (term "1,0"))
                                                (rule "parallelWithSkip2" (formula "60") (term "0"))
                                                (rule "applyOnElementary" (formula "61") (term "1,0"))
                                                (rule "applyOnPV" (formula "61") (term "0,1,0"))
                                                (rule "sequentialToParallel2" (formula "61"))
                                                (rule "simplifyUpdate2" (formula "61"))
                                                (rule "simplifyUpdate3" (formula "61") (term "1,0"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "simplifyUpdate2" (formula "61"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "simplifyUpdate2" (formula "63"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "simplifyUpdate2" (formula "63"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "simplifyUpdate2" (formula "63"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "simplifyUpdate2" (formula "62"))
                                                (rule "polySimp_addComm0" (formula "60") (term "2,1,0,0,0,0,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "60") (term "1,0,0,0,0,0,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "60") (term "2,1,0,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "60") (term "2,0,0,0,0,0,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "60") (term "2,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "64") (term "1,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,2,1,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,2,0,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,2,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,2,1,1,1,1"))
                                                (rule "polySimp_addComm1" (formula "63") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "62") (term "1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "63") (term "0,2,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "63") (term "0,0,1"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "62") (term "1,0,1"))
                                                (rule "mul_literals" (formula "62") (term "0,1,0,1"))
                                                (rule "applyOnRigidFormula" (formula "66"))
                                                (rule "applyOnPV" (formula "66") (term "0"))
                                                (rule "simplifyUpdate1" (formula "66") (term "1"))
                                                (rule "applyOnRigidFormula" (formula "65"))
                                                (rule "applyOnRigidFormula" (formula "60"))
                                                (rule "simplifyUpdate1" (formula "60") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "62") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "62") (term "0,0,1"))
                                                (rule "applyOnRigidFormula" (formula "63"))
                                                (rule "simplifyUpdate1" (formula "63") (term "1"))
                                                (rule "applyOnRigidFormula" (formula "65") (term "0"))
                                                (rule "applyOnRigidFormula" (formula "65") (term "1"))
                                                (rule "simplifyUpdate2" (formula "65") (term "1,1"))
                                                (rule "applyOnRigidTerm" (formula "60") (term "0"))
                                                (rule "simplifyUpdate1" (formula "60") (term "2,0"))
                                                (rule "simplifyUpdate1" (formula "60") (term "0,0"))
                                                (rule "applyOnPV" (formula "60") (term "0,0"))
                                                (rule "applyOnRigidFormula" (formula "64"))
                                                (rule "simplifyUpdate2" (formula "64") (term "0"))
                                                (rule "applyOnRigidFormula" (formula "62"))
                                                (rule "simplifyUpdate1" (formula "62") (term "1"))
                                                (rule "applyOnRigidTerm" (formula "63") (term "0"))
                                                (rule "simplifyUpdate1" (formula "63") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "63") (term "0"))
                                                (rule "applyOnRigidFormula" (formula "65") (term "0,0"))
                                                (rule "simplifyUpdate1" (formula "65") (term "0,0,0"))
                                                (rule "simplifyUpdate1" (formula "65") (term "1,0,0"))
                                                (rule "Class_invariant_axiom_for_java_util_TimSort" (formula "66") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "11") (userinteraction))
                                                (rule "elemInv" (formula "42") (term "0,0,0") (userinteraction))
                                                (rule "elemInv" (formula "25") (term "0,0,0") (userinteraction))
                                                (rule "elemInv" (formula "13") (userinteraction))
                                                (rule "andLeft" (formula "66"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "67"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "68"))
                                                (rule "andLeft" (formula "67"))
                                                (rule "andLeft" (formula "69"))
                                                (rule "andLeft" (formula "67"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "71"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "andLeft" (formula "70"))
                                                (rule "selectOfAnonEQ" (formula "71") (term "0,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "71") (term "1,0,0,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "71") (term "0,1,1,0,0,0"))
                                                (rule "selectOfAnonEQ" (formula "86") (term "0,1,1,0,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "86") (term "1,0,0,1,1,0,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "86") (term "0,1,1,0,0,1,1,0,0"))
                                                (rule "selectOfAnon" (formula "71") (term "2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "71") (term "1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "71") (term "0,0,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "71") (term "0,0,0,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "71") (term "1,0,0,0,2,0,0") (inst "iv=iv"))
                                                (rule "selectOfAnon" (formula "86") (term "2,0,1,1,0,0"))
                                                (rule "elementOfFreshLocs" (formula "86") (term "1,0,2,0,1,1,0,0"))
                                                (rule "elementOfUnion" (formula "86") (term "0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfArrayRange" (formula "86") (term "1,0,0,0,2,0,1,1,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "86") (term "0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfUnion" (formula "86") (term "0,0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfSingleton" (formula "86") (term "0,0,0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfArrayRange" (formula "86") (term "1,0,0,0,0,2,0,1,1,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "86") (term "1,0,0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfUnion" (formula "86") (term "0,1,0,0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfSingleton" (formula "86") (term "1,0,1,0,0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfSingleton" (formula "86") (term "0,0,1,0,0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfUnion" (formula "86") (term "1,1,0,0,0,0,0,2,0,1,1,0,0"))
                                                (rule "elementOfArrayRange" (formula "86") (term "0,1,1,0,0,0,0,0,2,0,1,1,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "86") (term "1,1,1,0,0,0,0,0,2,0,1,1,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "71") (term "0,0,0,0,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "71") (term "0,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "71") (term "1,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "71") (term "0,1,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "71") (term "1,0,1,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "71") (term "0,0,1,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "71") (term "1,0,0,0,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "71") (term "1,1,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "71") (term "1,1,1,0,0,0,0,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "71") (term "0,1,1,0,0,0,0,0,2,0,0") (inst "iv=iv"))
                                                (rule "selectOfAnonEQ" (formula "89") (term "1") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "89") (term "1,0,1"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "89") (term "0,1,1,0,1"))
                                                (rule "selectOfAnonEQ" (formula "76") (term "1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "76") (term "1,0,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "76") (term "0,1,1,0,1,0"))
                                                (rule "selectOfAnon" (formula "76") (term "2,1,0"))
                                                (rule "elementOfFreshLocs" (formula "76") (term "1,0,2,1,0"))
                                                (rule "selectOfAnonEQ" (formula "83") (term "1,2,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,1,2,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "83") (term "0,1,1,0,1,2,1,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,1,2,1,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,1,2,1,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,1,2,1,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,1,2,1,0") (inst "iv=iv"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,1,1,0"))
                                                (rule "selectOfAnon" (formula "92") (term "2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,2,1,1,0"))
                                                (rule "selectOfAnon" (formula "89") (term "2,1"))
                                                (rule "elementOfFreshLocs" (formula "89") (term "1,0,2,1"))
                                                (rule "elementOfUnion" (formula "89") (term "0,0,0,2,1"))
                                                (rule "elementOfArrayRange" (formula "89") (term "1,0,0,0,2,1") (inst "iv=iv"))
                                                (rule "selectOfAnonEQ" (formula "83") (term "0,1") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,0,1"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "83") (term "0,1,1,0,0,1"))
                                                (rule "selectOfAnon" (formula "83") (term "2,0,1"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,0,1"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,0,1"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "0,1,0,0,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "0,1,0,0,0,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,0,1,0,0,0,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,0,1,0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnon" (formula "92") (term "2,0,1,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,2,0,1,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "1,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "92") (term "0,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "0,0,0,1,1,0,0,0,0,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnon" (formula "92") (term "2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "1,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,1,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,1,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "1,0,1,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "1,1,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "92") (term "0,1,1,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,1,1,0,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,0,0,0,0,2,0,0,0,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "0,0,1,1,1,0,0,0,0,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnon" (formula "92") (term "2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "0,0,0,0,0,0,0,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,0,0,0,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,0,0,0,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnon" (formula "92") (term "2,0,0,0,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,2,0,0,0,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,2,0,0,0,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "0,0,0,0,1,0,0,0,0,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,0,0,0,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,0,0,0,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "0,0,1,0,1,0,0,0,0,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,0,0,1,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,0,0,1,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "92") (term "1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "1,0,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "92") (term "0,1,1,0,0,0,0,0,2,0,0,1,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "selectOfAnon" (formula "92") (term "2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,0,0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,0,0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,0,0,0,2,0,0,1,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "92") (term "1,0,0,0,0,2,0,0,1,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "92") (term "1,0,0,0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "92") (term "0,1,0,0,0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "1,0,1,0,0,0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "92") (term "0,0,1,0,0,0,0,0,2,0,0,1,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "76") (term "0,0,0,2,1,0"))
                                                (rule "elementOfUnion" (formula "76") (term "0,0,0,0,2,1,0"))
                                                (rule "elementOfArrayRange" (formula "76") (term "1,0,0,0,0,2,1,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "76") (term "0,0,0,0,0,2,1,0"))
                                                (rule "elementOfSingleton" (formula "76") (term "0,0,0,0,0,0,2,1,0"))
                                                (rule "elementOfUnion" (formula "76") (term "1,0,0,0,0,0,2,1,0"))
                                                (rule "elementOfUnion" (formula "76") (term "1,1,0,0,0,0,0,2,1,0"))
                                                (rule "elementOfArrayRange" (formula "76") (term "1,1,1,0,0,0,0,0,2,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "76") (term "0,1,1,0,0,0,0,0,2,1,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "76") (term "0,1,0,0,0,0,0,2,1,0"))
                                                (rule "elementOfSingleton" (formula "76") (term "0,0,1,0,0,0,0,0,2,1,0"))
                                                (rule "elementOfSingleton" (formula "76") (term "1,0,1,0,0,0,0,0,2,1,0"))
                                                (rule "selectOfAnonEQ" (formula "74") (term "0,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "74") (term "1,0,0,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "74") (term "0,1,1,0,0,0"))
                                                (rule "selectOfAnon" (formula "92") (term "2,0,0,1,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,2,0,0,1,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "selectOfAnonEQ" (formula "83") (term "1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "83") (term "0,1,1,0,1,1,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,1,1,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "1,0,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "1,1,0,0,0,0,0,2,1,1,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "0,1,1,0,0,0,0,0,2,1,1,0") (inst "iv=iv"))
                                                (rule "selectOfAnon" (formula "74") (term "2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "74") (term "1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "74") (term "0,0,0,2,0,0"))
                                                (rule "selectOfAnonEQ" (formula "83") (term "1,0,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,1,0,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "83") (term "0,1,1,0,1,0,0"))
                                                (rule "selectOfAnonEQ" (formula "92") (term "1,0,0,1,1,0,2,1,1,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "92") (term "1,0,1,0,0,1,1,0,2,1,1,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "92") (term "0,1,1,0,1,0,0,1,1,0,2,1,1,0"))
                                                (rule "selectOfAnonEQ" (formula "83") (term "0,0") (ifseqformula "61"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,0,0"))
                                                (rule "selectCreatedOfAnonAsFormula" (formula "83") (term "0,1,1,0,0,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,0,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,1,1,2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,1,1,2,0,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,1,1,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,0,2,1,1,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,1,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,1,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "1,0,1,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,1,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "0,1,1,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,1,1,0,0,0,0,0,2,1,0,0,1,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,1,0,0,1,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,0,2,1,0,0,1,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,0,0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,0,0,0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,1,0,0,0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "0,1,1,0,0,0,0,0,2,1,1,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,1,1,0,0,0,0,0,2,1,1,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,1,0,0,0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,1,0,0,0,0,0,2,1,1,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "1,0,1,0,0,0,0,0,2,1,1,2,0,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,1,2,2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,1,2,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,0,0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,0,0,0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,1,0,0,0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "0,1,1,0,0,0,0,0,2,1,2,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,1,1,0,0,0,0,0,2,1,2,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,0,2,1,2,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,1,2,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,1,0,0,0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,1,0,0,0,0,0,2,1,2,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "1,0,1,0,0,0,0,0,2,1,2,2,0,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,0,0,0,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,0,0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,1,0,0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,1,0,0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "1,0,1,0,0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,1,0,0,0,0,0,2,0,0,0,1,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,1,1,0,0,0,0,0,2,0,0,0,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "0,1,1,0,0,0,0,0,2,0,0,0,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,0,2,0,0,0,1,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,0,0"))
                                                (rule "selectOfAnon" (formula "83") (term "2,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,0,0,0,0,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,0,0") (inst "iv=iv"))
                                                (rule "selectOfAnon" (formula "83") (term "2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfFreshLocs" (formula "83") (term "1,0,2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,2,0,0,1,0,0,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "1,0,0,0,0,2,0,0,1,0,0,0,2,0,0") (inst "iv=iv"))
                                                (rule "elementOfUnion" (formula "83") (term "0,0,0,0,0,2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfSingleton" (formula "83") (term "0,0,0,0,0,0,2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,0,0,0,0,0,2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfUnion" (formula "83") (term "1,1,0,0,0,0,0,2,0,0,1,0,0,0,2,0,0"))
                                                (rule "elementOfArrayRange" (formula "83") (term "0,1,1,0,0,0,0,0,2,0,0,1,0,0,0,2,0,0") (inst "iv=iv"))
                                                (opengoal " ")
                                             )
                                             (branch "Exceptional Post (mergeAt)"
                                                (rule "false_to_not_true" (formula "60") (term "0,1,1,0,0,1,1,1,1,1"))
                                                (rule "simplifyUpdate2" (formula "70"))
                                                (rule "simplifyUpdate2" (formula "60"))
                                                (rule "eqSymm" (formula "60") (term "0,1,1,0,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "0,0,0,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "0,1,0,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "0,0,1,0,0,1,1,1,1,1"))
                                                (rule "eqSymm" (formula "60") (term "1,1,1,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,1,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,1,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_homoEq" (formula "60") (term "1,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,1,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,1,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "2,1,0,0,1,0,0,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,2,1,0,0,1,0,0,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "0,0,0,0,0,0,1,1,1,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,0,0,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_elimSub" (formula "60") (term "0,0,1,0,0,0,1,1,1,1,1"))
                                                (rule "mul_literals" (formula "60") (term "1,0,0,1,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_homoEq" (formula "60") (term "0,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_homoEq" (formula "60") (term "0,1,0,0,0,1,1,1,1,1"))
                                                (rule "sequentialToParallel2" (formula "70"))
                                                (rule "simplifyUpdate2" (formula "70"))
                                                (rule "simplifyUpdate3" (formula "70") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,1,1,1,1,1"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,1,1,1,1"))
                                                (rule "sequentialToParallel2" (formula "60"))
                                                (rule "simplifyUpdate3" (formula "60") (term "1,0"))
                                                (rule "andLeft" (formula "60"))
                                                (rule "simplifyUpdate2" (formula "60"))
                                                (rule "applyOnSkip" (formula "60") (term "1,0"))
                                                (rule "parallelWithSkip2" (formula "60") (term "0"))
                                                (rule "applyOnElementary" (formula "61") (term "1,0"))
                                                (rule "applyOnPV" (formula "61") (term "0,1,0"))
                                                (rule "sequentialToParallel2" (formula "61"))
                                                (rule "simplifyUpdate2" (formula "61"))
                                                (rule "simplifyUpdate3" (formula "61") (term "1,0"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "simplifyUpdate2" (formula "61"))
                                                (rule "andLeft" (formula "62"))
                                                (rule "simplifyUpdate2" (formula "63"))
                                                (rule "andLeft" (formula "61"))
                                                (rule "simplifyUpdate2" (formula "61"))
                                                (rule "andLeft" (formula "63"))
                                                (rule "simplifyUpdate2" (formula "64"))
                                                (rule "notLeft" (formula "61"))
                                                (rule "close" (formula "65") (ifseqformula "64"))
                                             )
                                             (branch "Pre (mergeAt)"
                                                (opengoal " ")
                                             )
                                          )
                                       )
                                       (branch "Null Reference (x_arr_16 = null)"
                                          (opengoal " ")
                                       )
                                       (branch "Index Out of Bounds (x_arr_16 != null, but x_32 Out of Bounds!)"
                                          (opengoal " ")
                                       )
                                    )
                                    (branch "Null Reference (x_arr_14 = null)"
                                       (opengoal " ")
                                    )
                                    (branch "Index Out of Bounds (x_arr_14 != null, but x_31 Out of Bounds!)"
                                       (opengoal " ")
                                    )
                                 )
                                 (branch "if x_4 false"
                                    (rule "false_to_not_true" (formula "1") (term "1"))
                                    (rule "simplifyUpdate2" (formula "67"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "applyOnRigidFormula" (formula "57"))
                                    (rule "simplifyUpdate1" (formula "57") (term "1"))
                                    (rule "applyOnPV" (formula "57") (term "0"))
                                    (rule "ifthenelse_concrete3" (formula "57"))
                                    (rule "boolean_not_equal_2" (formula "57") (term "1"))
                                    (rule "concrete_or_4" (formula "57"))
                                    (rule "inEqSimp_leqRight" (formula "57"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                    (rule "ifUnfold" (formula "67") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_23"))
                                    (rule "compound_assignment_5_nonsimple" (formula "67") (term "1"))
                                    (rule "ifElseUnfold" (formula "67") (term "1") (inst "#boolv=x_24"))
                                    (rule "variableDeclaration" (formula "67") (term "1") (newnames "x_24"))
                                    (rule "less_than_comparison_simple" (formula "67") (term "1"))
                                    (rule "sequentialToParallel2" (formula "67"))
                                    (rule "simplifyUpdate3" (formula "67") (term "1,0"))
                                    (rule "applyOnElementary" (formula "67") (term "1,0"))
                                    (rule "applyOnRigidTerm" (formula "67") (term "0,1,0"))
                                    (rule "simplifyUpdate1" (formula "67") (term "2,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "67") (term "1,0,1,0"))
                                    (rule "applyOnRigidFormula" (formula "67") (term "0,0,1,0"))
                                    (rule "applyOnPV" (formula "67") (term "0,0,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "67") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "67") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0,1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "67") (term "0,0,0,1,0"))
                                    (rule "concrete_and_2" (formula "67") (term "0,0,1,0"))
                                    (rule "ifthenelse_false" (formula "67") (term "0,1,0"))
                                    (rule "allLeft" (formula "35") (inst "t=add(Z(neglit(4(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,2,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,2,0,1"))
                                    (rule "polySimp_homoEq" (formula "35") (term "1"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "35") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "35") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "35") (term "0,0"))
                                    (rule "concrete_or_2" (formula "35") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,0"))
                                    (rule "concrete_and_2" (formula "35") (term "0"))
                                    (rule "concrete_or_2" (formula "35"))
                                    (rule "allLeft" (formula "53") (inst "t=add(Z(neglit(4(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                    (rule "polySimp_homoEq" (formula "53") (term "1"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,2,0,1,0,0,1"))
                                    (rule "add_literals" (formula "53") (term "0,0,2,0,1,0,0,1"))
                                    (rule "replaceKnownSelect_taclet1000101_40" (formula "53") (term "0,1,0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11000101_41" (formula "53") (term "0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "53") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,1,0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "53") (term "0,1,0"))
                                    (rule "leq_literals" (formula "53") (term "1,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "53") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "53") (term "0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "53") (term "0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "0"))
                                    (rule "concrete_or_2" (formula "53"))
                                    (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_17"))
                                    (rule "simplifySelectOfAnon" (formula "53"))
                                    (rule "elementOfFreshLocs" (formula "53") (term "1,0,0"))
                                    (rule "equalUnique" (formula "53") (term "0,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "53") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "53") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "53") (term "0,0,1,0,0") (ifseqformula "68"))
                                    (rule "concrete_not_2" (formula "53") (term "0,1,0,0"))
                                    (rule "concrete_and_1" (formula "53") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,1,0,0") (ifseqformula "13"))
                                    (rule "concrete_not_1" (formula "53") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "54"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                    (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                    (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "35"))
                                    (rule "polySimp_sepNegMonomial" (formula "54"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "53") (term "1,0,0"))
                                    (rule "eqSymm" (formula "53") (term "0,0,1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "53") (term "0,0,1,0,0"))
                                    (rule "replace_known_right" (formula "53") (term "1,0,0,1,0,0") (ifseqformula "68"))
                                    (rule "concrete_and_4" (formula "53") (term "0,0,1,0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "0,1,0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "53") (term "1,0,0"))
                                    (rule "eqClose" (formula "53") (term "0,0,1,0,0"))
                                    (rule "concrete_and_1" (formula "53") (term "0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,0,1,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                    (rule "concrete_and_1" (formula "53") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "53") (term "1,0,0") (ifseqformula "40"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "53") (term "0,1,0,0"))
                                    (rule "concrete_or_1" (formula "53") (term "1,0,0"))
                                    (rule "concrete_or_3" (formula "53") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "53") (term "0"))
                                    (rule "applyEqReverse" (formula "54") (term "0,0,1") (ifseqformula "53"))
                                    (rule "hideAuxiliaryEq" (formula "53"))
                                    (rule "polySimp_addComm0" (formula "53") (term "1"))
                                    (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_18"))
                                    (rule "simplifySelectOfAnon" (formula "53"))
                                    (rule "elementOfFreshLocs" (formula "53") (term "1,0,0"))
                                    (rule "equalUnique" (formula "53") (term "0,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "53") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "53") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "53") (term "0,0,1,0,0") (ifseqformula "67"))
                                    (rule "concrete_not_2" (formula "53") (term "0,1,0,0"))
                                    (rule "concrete_and_1" (formula "53") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "53") (term "0,1,0,0") (ifseqformula "6"))
                                    (rule "concrete_not_1" (formula "53") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "54"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                    (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "54"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "53") (term "1,0,0"))
                                    (rule "eqSymm" (formula "53") (term "0,0,1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "53") (term "0,0,1,0,0"))
                                    (rule "replace_known_right" (formula "53") (term "1,0,0,1,0,0") (ifseqformula "67"))
                                    (rule "concrete_and_4" (formula "53") (term "0,0,1,0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "0,1,0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "53") (term "1,0,0"))
                                    (rule "eqSymm" (formula "53") (term "0,0,1,0,0"))
                                    (rule "replace_known_right" (formula "53") (term "0,0,1,0,0") (ifseqformula "62"))
                                    (rule "concrete_and_2" (formula "53") (term "0,1,0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "53") (term "1,0,0"))
                                    (rule "eqClose" (formula "53") (term "0,0,1,0,0"))
                                    (rule "concrete_and_1" (formula "53") (term "0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,1,1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,1,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "53") (term "1,0,1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "53") (term "1,1,0,0") (ifseqformula "40"))
                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1,1,0,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,1,1,0,0"))
                                    (rule "qeq_literals" (formula "53") (term "0,1,1,0,0"))
                                    (rule "concrete_or_1" (formula "53") (term "1,1,0,0"))
                                    (rule "concrete_and_3" (formula "53") (term "1,0,0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "53") (term "1,0,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "53") (term "0,0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "53") (term "1,0,0,1,0,0,0") (ifseqformula "64"))
                                    (rule "concrete_and_4" (formula "53") (term "0,0,1,0,0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "0,1,0,0,0"))
                                    (rule "concrete_and_2" (formula "53") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0,0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "53") (term "1,0,0,0"))
                                    (rule "equalUnique" (formula "53") (term "1,1,0,0,0"))
                                    (rule "concrete_and_4" (formula "53") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0,0"))
                                    (rule "elementOfUnion" (formula "53") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "53") (term "1,0,0,0"))
                                    (rule "equalUnique" (formula "53") (term "1,1,0,0,0"))
                                    (rule "concrete_and_4" (formula "53") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "53") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "53") (term "0,0,0"))
                                    (rule "equalUnique" (formula "53") (term "1,0,0,0"))
                                    (rule "concrete_and_4" (formula "53") (term "0,0,0"))
                                    (rule "concrete_or_2" (formula "53") (term "0,0"))
                                    (rule "inEqSimp_exactShadow1" (formula "1") (ifseqformula "5"))
                                    (rule "greater_literals" (formula "1") (term "0"))
                                    (rule "concrete_impl_1" (formula "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1"))
                                    (rule "ifElseSplit" (formula "71"))
                                    (branch "if x_24 true"
                                       (opengoal " ")
                                    )
                                    (branch "if x_24 false"
                                       (rule "false_to_not_true" (formula "1") (term "1"))
                                       (rule "simplifyUpdate2" (formula "72"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyOnRigidFormula" (formula "62"))
                                       (rule "simplifyUpdate1" (formula "62") (term "1"))
                                       (rule "applyOnPV" (formula "62") (term "0"))
                                       (rule "boolean_not_equal_2" (formula "62"))
                                       (rule "false_right" (formula "62"))
                                       (rule "compound_greater_than_comparison_2" (formula "71") (term "1") (inst "#v1=x_25") (inst "#v0=x_24"))
                                       (rule "variableDeclarationAssign" (formula "71") (term "1"))
                                       (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_26"))
                                       (rule "eval_order_array_access4" (formula "71") (term "1") (inst "#v0=x_arr"))
                                       (rule "variableDeclarationAssign" (formula "71") (term "1"))
                                       (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_arr_10"))
                                       (rule "assignment_read_attribute_this" (formula "71"))
                                       (rule "sequentialToParallel2" (formula "71"))
                                       (rule "simplifyUpdate3" (formula "71") (term "1,0"))
                                       (rule "applyOnElementary" (formula "71") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "71") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "71") (term "2,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "71") (term "1,0,1,0"))
                                       (rule "applyOnPV" (formula "71") (term "0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet101_14" (formula "71") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "71") (term "0,1,0"))
                                       (rule "assignment_array2" (formula "71"))
                                       (branch "Normal Execution (x_arr_10 != null)"
                                          (rule "sequentialToParallel2" (formula "71"))
                                          (rule "simplifyUpdate2" (formula "71"))
                                          (rule "simplifyUpdate3" (formula "71") (term "1,0"))
                                          (rule "applyOnElementary" (formula "71") (term "1,0"))
                                          (rule "applyOnRigidTerm" (formula "71") (term "0,1,0"))
                                          (rule "simplifyUpdate1" (formula "71") (term "1,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "71") (term "2,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "71") (term "0,0,1,0"))
                                          (rule "applyOnPV" (formula "71") (term "1,0,1,0"))
                                          (rule "applyOnPV" (formula "71") (term "0,0,1,0"))
                                          (rule "applyOnRigidTerm" (formula "71") (term "2,0,1,0"))
                                          (rule "applyOnPV" (formula "71") (term "0,2,0,1,0"))
                                          (rule "replaceKnownSelect_taclet00101_18" (formula "71") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00101_19" (formula "71") (term "0,1,0"))
                                          (rule "variableDeclarationAssign" (formula "71") (term "1"))
                                          (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_25"))
                                          (rule "eval_order_array_access4" (formula "71") (term "1") (inst "#v0=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "71") (term "1"))
                                          (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_arr_11"))
                                          (rule "assignment_read_attribute_this" (formula "71"))
                                          (rule "sequentialToParallel2" (formula "71"))
                                          (rule "simplifyUpdate3" (formula "71") (term "1,0"))
                                          (rule "applyOnElementary" (formula "71") (term "1,0"))
                                          (rule "applyOnRigidTerm" (formula "71") (term "0,1,0"))
                                          (rule "simplifyUpdate1" (formula "71") (term "2,0,1,0"))
                                          (rule "applyOnPV" (formula "71") (term "0,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "71") (term "1,0,1,0"))
                                          (rule "replaceKnownSelect_taclet101_14" (formula "71") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "71") (term "0,1,0"))
                                          (rule "eval_order_array_access5" (formula "71") (term "1") (inst "#v1=x_27") (inst "#ar1=x_arr_12"))
                                          (rule "variableDeclarationAssign" (formula "71") (term "1"))
                                          (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_arr_12"))
                                          (rule "assignment" (formula "71") (term "1"))
                                          (rule "sequentialToParallel2" (formula "71"))
                                          (rule "simplifyUpdate2" (formula "71"))
                                          (rule "simplifyUpdate3" (formula "71") (term "1,0"))
                                          (rule "applyOnElementary" (formula "71") (term "1,0"))
                                          (rule "applyOnPV" (formula "71") (term "0,1,0"))
                                          (rule "variableDeclarationAssign" (formula "71") (term "1"))
                                          (rule "variableDeclaration" (formula "71") (term "1") (newnames "x_27"))
                                          (rule "applyEq" (formula "71") (term "0,1,0,0") (ifseqformula "51"))
                                          (rule "assignmentAdditionInt" (formula "71") (term "1"))
                                          (rule "translateJavaAddInt" (formula "71") (term "0,0,1"))
                                          (rule "sequentialToParallel2" (formula "71"))
                                          (rule "simplifyUpdate3" (formula "71") (term "1,0"))
                                          (rule "applyOnElementary" (formula "71") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "71") (term "1,0,1,0"))
                                          (rule "applyOnRigidTerm" (formula "71") (term "0,1,0"))
                                          (rule "applyOnPV" (formula "71") (term "1,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "71") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "71") (term "0,1,0"))
                                          (rule "add_literals" (formula "71") (term "0,0,1,0"))
                                          (rule "assignment_array2" (formula "71"))
                                          (branch "Normal Execution (x_arr_12 != null)"
                                             (rule "sequentialToParallel2" (formula "71"))
                                             (rule "simplifyUpdate2" (formula "71"))
                                             (rule "simplifyUpdate3" (formula "71") (term "1,0"))
                                             (rule "applyOnElementary" (formula "71") (term "1,0"))
                                             (rule "applyOnRigidTerm" (formula "71") (term "0,1,0"))
                                             (rule "simplifyUpdate1" (formula "71") (term "2,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "71") (term "1,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "71") (term "0,0,1,0"))
                                             (rule "applyOnPV" (formula "71") (term "1,0,1,0"))
                                             (rule "applyOnPV" (formula "71") (term "0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "71") (term "2,0,1,0"))
                                             (rule "applyOnPV" (formula "71") (term "0,2,0,1,0"))
                                             (rule "replaceKnownSelect_taclet000101_20" (formula "71") (term "0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000101_21" (formula "71") (term "0,1,0"))
                                             (rule "greater_than_comparison_simple" (formula "71") (term "1"))
                                             (rule "sequentialToParallel2" (formula "71"))
                                             (rule "simplifyUpdate2" (formula "71"))
                                             (rule "simplifyUpdate3" (formula "71") (term "1,0"))
                                             (rule "applyOnElementary" (formula "71") (term "1,0"))
                                             (rule "applyOnRigidTerm" (formula "71") (term "0,1,0"))
                                             (rule "simplifyUpdate1" (formula "71") (term "1,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "71") (term "2,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "71") (term "0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "71") (term "0,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "71") (term "1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "71") (term "0,0,0,1,0"))
                                             (rule "applyOnPV" (formula "71") (term "1,0,0,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "71") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "71") (term "0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "71") (term "0,0,0,0,1,0"))
                                             (rule "blockEmpty" (formula "71") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "71") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "0,0,0,1,0"))
                                             (rule "ifSplit" (formula "71"))
                                             (branch "if x_23 true"
                                                (opengoal " ")
                                             )
                                             (branch "if x_23 false"
                                                (rule "false_to_not_true" (formula "1") (term "1"))
                                                (rule "simplifyUpdate2" (formula "72"))
                                                (rule "simplifyUpdate2" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "applyOnRigidFormula" (formula "62"))
                                                (rule "simplifyUpdate1" (formula "62") (term "1"))
                                                (rule "applyOnPV" (formula "62") (term "0"))
                                                (rule "ifthenelse_concrete3" (formula "62"))
                                                (rule "boolean_not_equal_2" (formula "62") (term "1"))
                                                (rule "concrete_or_4" (formula "62"))
                                                (rule "inEqSimp_leqRight" (formula "62"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                (rule "blockEmpty" (formula "72") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                (rule "unusedLabel" (formula "72") (term "1"))
                                                (builtin "Use Operation Contract" (formula "72") (newnames "heapBefore_mergeAt,exc_0,heapAfter_mergeAt,anon_heap_mergeAt") (contract "java.util.TimSort[java.util.TimSort::mergeAt(int)].JML normal_behavior operation contract.0"))
                                                (branch "Post (mergeAt)"
                                                   (rule "selectOfAnon" (formula "57") (term "0,1,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "57") (term "1,0,0,1,1,0"))
                                                   (rule "selectOfAnon" (formula "43") (term "2,0"))
                                                   (rule "elementOfFreshLocs" (formula "43") (term "1,0,2,0"))
                                                   (rule "selectOfAnon" (formula "57") (term "1,1,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "57") (term "1,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "selectOfAnon" (formula "57") (term "0,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "0,0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "43") (term "0,0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (opengoal " ")
                                                )
                                                (branch "Exceptional Post (mergeAt)"
                                                   (rule "selectOfAnon" (formula "57") (term "0,1,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "57") (term "1,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,1,1,0"))
                                                   (rule "selectOfAnon" (formula "57") (term "1,1,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "57") (term "1,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "selectOfAnon" (formula "57") (term "0,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "57") (term "1,0,0,1,0"))
                                                   (rule "selectOfAnon" (formula "43") (term "2,0"))
                                                   (rule "elementOfFreshLocs" (formula "43") (term "1,0,2,0"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "43") (term "0,0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "43") (term "1,0,0,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "57") (term "1,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "57") (term "0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "0,0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "57") (term "1,0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (opengoal " ")
                                                )
                                                (branch "Pre (mergeAt)"
                                                   (rule "inInt" (formula "72") (term "1,1,1,1"))
                                                   (rule "concrete_and_3" (formula "72") (term "1,1,1"))
                                                   (rule "simplifyUpdate2" (formula "72"))
                                                   (rule "simplifyUpdate2" (formula "72") (term "1"))
                                                   (rule "eqSymm" (formula "72") (term "0,1,0,0,1"))
                                                   (rule "eqSymm" (formula "72") (term "1,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "0,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,1,1,0,0,1"))
                                                   (rule "polySimp_homoEq" (formula "72") (term "0,1,0,0,1"))
                                                   (rule "polySimp_homoEq" (formula "72") (term "1,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "1,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "1,1,0,1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,1,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,0,0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,0,1,1,0,0,1"))
                                                   (rule "applyOnRigidFormula" (formula "72"))
                                                   (rule "simplifyUpdate2" (formula "72") (term "1"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "0"))
                                                   (rule "simplifyUpdate2" (formula "72") (term "1,0"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "1"))
                                                   (rule "applyOnPV" (formula "72") (term "0,1"))
                                                   (rule "wellFormedAnon" (formula "72") (term "1"))
                                                   (rule "replace_known_left" (formula "72") (term "0,1") (ifseqformula "10"))
                                                   (rule "concrete_and_1" (formula "72") (term "1"))
                                                   (rule "replace_known_left" (formula "72") (term "1") (ifseqformula "41"))
                                                   (rule "concrete_and_3" (formula "72"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "1"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,1"))
                                                   (rule "applyOnPV" (formula "72") (term "0,1"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "0"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "0,0"))
                                                   (rule "simplifyUpdate2" (formula "72") (term "0,0,0"))
                                                   (rule "simplifyUpdate2" (formula "72") (term "1,0,0"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "1,0"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "0,0,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,0,0"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "1,0,0"))
                                                   (rule "applyOnPV" (formula "72") (term "0,1,0,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,1,0,0"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "1,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,1,1,0"))
                                                   (rule "applyOnRigidFormula" (formula "72") (term "0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "0,0,0,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,0,0,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "2,0,0,0,0"))
                                                   (rule "applyOnPV" (formula "72") (term "0,0,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,0,0,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "0,1,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,1,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,1,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "0,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,0,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "0,0,1,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,0,1,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "1,0,1,1,0"))
                                                   (rule "applyOnPV" (formula "72") (term "1,1,0,1,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "1,0,1,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,1,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "0,0,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,0,0,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "1,0,0,1,0"))
                                                   (rule "applyOnPV" (formula "72") (term "1,1,0,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "72") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,0,1,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "0,1,0,1,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,1,0,1,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "2,0,1,0,1,1,0"))
                                                   (rule "applyOnPV" (formula "72") (term "0,0,1,0,1,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,1,0,1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "72") (term "1,1,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "72") (term "1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "72") (term "0,1,1,0"))
                                                   (rule "equal_literals" (formula "72") (term "1,1,0"))
                                                   (rule "concrete_or_4" (formula "72") (term "1,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "72") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,0,0"))
                                                   (rule "eq_and" (formula "72") (term "0,0"))
                                                   (rule "applyOnRigidTerm" (formula "72") (term "0,1,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "1,0,1,0,1,0"))
                                                   (rule "simplifyUpdate1" (formula "72") (term "2,0,1,0,1,0"))
                                                   (rule "applyOnPV" (formula "72") (term "0,0,1,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,1,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,1,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "72") (term "0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "72") (term "0,1,0"))
                                                   (rule "eqClose" (formula "72") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "72") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "72") (term "0") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "72") (term "0,0"))
                                                   (rule "concrete_or_1" (formula "72") (term "0"))
                                                   (rule "concrete_and_1" (formula "72"))
                                                   (rule "Class_invariant_axiom_for_java_util_TimSort" (formula "72") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "12"))
                                                   (rule "inInt" (formula "72") (term "1,1"))
                                                   (rule "concrete_and_3" (formula "72") (term "1"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "0,0,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "0,0,1,0,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,1,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,1,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,2,1,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,1,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,2,1,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,1,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,2,1,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,1,0,1,0,1,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "insert_constant_value" (formula "72") (term "0,3,1,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,1,0,0,0,0,0,1,0"))
                                                   (rule "insert_constant_value" (formula "72") (term "0,3,1,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,2,1,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,2,1,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,1,0,1,0,1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,2,1,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,1,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,2,1,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,2,1,0,0,0,0,0,1,0"))
                                                   (rule "insert_constant_value" (formula "72") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "0,1,1,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet1_12" (formula "72") (term "1,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,2,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "0,1,1,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_13" (formula "72") (term "1,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,2,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet101_14" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet101_15" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "translateJavaDivInt" (formula "72") (term "3,1,0,0,0,1,0"))
                                                   (rule "translateJavaDivInt" (formula "72") (term "3,1,0,0,0,0,1,0"))
                                                   (rule "translateJavaDivInt" (formula "72") (term "3,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "72") (term "1,0,1,1,0"))
                                                   (rule "replace_known_right" (formula "72") (term "0,1,0,0") (ifseqformula "70"))
                                                   (rule "concrete_not_2" (formula "72") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "2,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,2,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "2,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,2,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "2,1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,2,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "2,1,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,2,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "72") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,2,0,1,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "2,1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "2,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "2,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "2,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replace_known_right" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "70"))
                                                   (rule "concrete_and_4" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "concrete_not_2" (formula "72") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "72") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replace_known_right" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "70"))
                                                   (rule "concrete_and_4" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "concrete_not_2" (formula "72") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "72") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "0,1,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "jdiv_axiom_inline" (formula "72") (term "3,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,0,2,3,1,0,0,0,1,0"))
                                                   (rule "div_literals" (formula "72") (term "1,3,1,0,0,0,1,0"))
                                                   (rule "qeq_literals" (formula "72") (term "0,3,1,0,0,0,1,0"))
                                                   (rule "ifthenelse_true" (formula "72") (term "3,1,0,0,0,1,0"))
                                                   (rule "jdiv_axiom_inline" (formula "72") (term "3,1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,0,2,3,1,0,0,0,0,1,0"))
                                                   (rule "div_literals" (formula "72") (term "1,3,1,0,0,0,0,1,0"))
                                                   (rule "qeq_literals" (formula "72") (term "0,3,1,0,0,0,0,1,0"))
                                                   (rule "ifthenelse_true" (formula "72") (term "3,1,0,0,0,0,1,0"))
                                                   (rule "jdiv_axiom_inline" (formula "72") (term "3,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,0,2,3,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "div_literals" (formula "72") (term "1,3,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "qeq_literals" (formula "72") (term "0,3,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "ifthenelse_true" (formula "72") (term "3,1,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "72") (term "1,1,1,0,0,0,0,0,0,0,1,0") (ifseqformula "17"))
                                                   (rule "replace_known_left" (formula "72") (term "1,1,0,0,0,0,0,0,0,1,0") (ifseqformula "42"))
                                                   (rule "concrete_and_3" (formula "72") (term "1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "72") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "17"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "72") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "72") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "concrete_or_1" (formula "72") (term "1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "pullOutSelect" (formula "72") (term "1,1,0,1,0") (inst "selectSK=java_util_TimSort_runBase_1"))
                                                   (rule "applyEq" (formula "73") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "1,0,0,1,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "1,1,1,1,0,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "73") (term "1,0,1,0,1,1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "73") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "eqSymm" (formula "73") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "72"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                                                   (rule "concrete_not_1" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "73") (term "1,1,0,1,1,0"))
                                                   (rule "pullOutSelect" (formula "73") (term "0,0,1") (inst "selectSK=java_util_TimSort_tmp_1"))
                                                   (rule "applyEq" (formula "74") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "74") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "74") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "74") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "13"))
                                                   (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "74") (term "0,0,0,0,0") (inst "selectSK=java_util_TimSort_c_0"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "74"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                                   (rule "concrete_not_1" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "3") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "3") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "3") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "3") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "70"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "3") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "2") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "2") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "74"))
                                                   (rule "concrete_and_4" (formula "2") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "2") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "74"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "3") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "3") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "3") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "3") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,1,0,0") (ifseqformula "74"))
                                                   (rule "concrete_and_4" (formula "3") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "3") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "2") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "2") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "69"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "2") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "69"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "3") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "3") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "75") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=java_util_TimSort_a_0"))
                                                   (rule "applyEq" (formula "76") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,1,1,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "76") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "76") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "76") (term "1,1,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                   (rule "eqClose" (formula "3") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "3") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "3") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "2") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "4") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "4") (term "1,0,0"))
                                                   (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                                                   (rule "eqClose" (formula "4") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_1" (formula "4") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "4") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "4") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "4") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "75"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "3") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "3") (term "1,0,0,0"))
                                                   (rule "eqClose" (formula "3") (term "1,0,0,0"))
                                                   (rule "concrete_or_3" (formula "3") (term "0,0,0"))
                                                   (rule "concrete_or_1" (formula "3") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "3") (term "0"))
                                                   (rule "applyEqReverse" (formula "76") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "76") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "76") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "76") (term "0,0,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "65"))
                                                   (rule "concrete_and_3" (formula "75"))
                                                   (rule "replace_known_right" (formula "75") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "66"))
                                                   (rule "concrete_not_2" (formula "75") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "concrete_and_3" (formula "75") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "replace_known_right" (formula "75") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "66"))
                                                   (rule "concrete_and_2" (formula "75") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "concrete_not_2" (formula "75") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "concrete_and_3" (formula "75") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "elementOfUnion" (formula "2") (term "1,0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                                   (rule "eqClose" (formula "2") (term "0,0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "2") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "2") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                                   (rule "eqClose" (formula "2") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "2") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "2") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "2") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "3") (term "0,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "3") (term "0,0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,1,0,0,0"))
                                                   (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "3") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "72"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,0,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "3") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "2") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "2") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "74"))
                                                   (rule "concrete_and_4" (formula "2") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "2") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "3") (term "0,0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "3") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "74"))
                                                   (rule "concrete_and_4" (formula "3") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "3") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "3") (term "0"))
                                                   (rule "applyEqReverse" (formula "75") (term "1,0,1,0,1,1") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "75") (term "1,0,1,1,1,0,0,0,0,0,0,0,1") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "75") (term "1,0,1,1,0,1,1") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "75") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "75") (term "1,1,0,1") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "75") (term "0,0,1,0") (ifseqformula "3"))
                                                   (rule "applyEqReverse" (formula "75") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "3"))
                                                   (rule "eqClose" (formula "75") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "concrete_and_1" (formula "75") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "applyEqReverse" (formula "75") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "74") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "71"))
                                                   (rule "concrete_and_4" (formula "74") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "concrete_not_2" (formula "74") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "concrete_and_3" (formula "74") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "replace_known_right" (formula "74") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "66"))
                                                   (rule "concrete_not_2" (formula "74") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "concrete_and_1" (formula "74") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
                                                   (rule "replace_known_right" (formula "74") (term "0,1,0") (ifseqformula "71"))
                                                   (rule "concrete_not_2" (formula "74") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "74") (term "0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "1,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,1,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "73"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "2") (term "0,0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "2") (term "0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "71"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "2") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "2") (term "0"))
                                                   (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "69"))
                                                   (rule "concrete_not_2" (formula "73") (term "0"))
                                                   (rule "concrete_and_1" (formula "73"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "1,0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "70"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "72") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "66"))
                                                   (rule "concrete_not_2" (formula "72") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "23"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "20"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "18"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "pullOutSelect" (formula "72") (term "0,1,1,1,0,0,0,0,0,0,0") (inst "selectSK=arr_19"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "9"))
                                                   (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0,0,0,0,0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "68"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "67"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "1") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "65"))
                                                   (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "73") (term "0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "polySimp_addComm0" (formula "72") (term "1,1,0,0,0,0,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "72") (term "0,1"))
                                                   (rule "nnf_imp2or" (formula "72") (term "0,1,0,0,0,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "72") (term "0,0,1"))
                                                   (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1"))
                                                   (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,1"))
                                                   (rule "times_zero_1" (formula "72") (term "1,0,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "72") (term "0,0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,0,1"))
                                                   (rule "nnf_notAnd" (formula "72") (term "0,0,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,1,0,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "72") (term "1,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "72") (term "0,0,0,0,0,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,1,0,1,0"))
                                                   (rule "commuteUnion_2" (formula "72") (term "0,1,0,1,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,1,0,1,0,0"))
                                                   (rule "commuteUnion_2" (formula "72") (term "0,1,0,1,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,1,0,1,0,0,0"))
                                                   (rule "commuteUnion_2" (formula "72") (term "0,1,0,1,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,1,0,1,0,0,0,0"))
                                                   (rule "commuteUnion_2" (formula "72") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,1,0,1,0,0,0,0,0"))
                                                   (rule "commuteUnion_2" (formula "72") (term "0,1,0,1,0,0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,1,0,1,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,1,0,1,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,1,0,2,0,1,0,0,0,0,0,0,0"))
                                                   (rule "commuteUnion_2" (formula "72") (term "0,1,0,2,0,1,0,0,0,0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,1,0,1,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,0,0,1,0,1,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,1,0,1,0,0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,0,0,1,0,1,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0") (ifseqformula "49"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,0,0,1,0,1,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0") (ifseqformula "47"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,0,0,1,0,1,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0") (ifseqformula "46"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,0,0,1,0,1,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "1,0,0") (ifseqformula "45"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,1,0,2,0,1,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "72") (term "0,0,0,0,1,0,2,0,1,0,0,0"))
                                                   (rule "allLeft" (formula "38") (inst "t=add(Z(neglit(1(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "38") (term "0,0,2,0,1"))
                                                   (rule "add_zero_left" (formula "38") (term "0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "38") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "38") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "38") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0,1,1"))
                                                   (rule "inEqSimp_invertInEq1" (formula "38") (term "0,0"))
                                                   (rule "times_zero_2" (formula "38") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "38") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "38") (term "0"))
                                                   (rule "allLeft" (formula "58") (inst "t=Z(3(#))"))
                                                   (rule "replaceKnownSelect_taclet00011000101_44" (formula "58") (term "0,1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00011000101_45" (formula "58") (term "0,1,1"))
                                                   (rule "add_literals" (formula "58") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "58") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "58") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "58") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "58") (term "0"))
                                                   (rule "mul_literals" (formula "58") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "58") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0"))
                                                   (rule "mul_literals" (formula "58") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "58") (term "0,1") (inst "selectSK=arr_20"))
                                                   (rule "simplifySelectOfAnon" (formula "58"))
                                                   (rule "elementOfFreshLocs" (formula "58") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "58") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "58") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "58") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "58") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "58") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "58") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "59") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "59") (term "0,0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "59") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "59") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "59") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "59") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "59") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "58") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "58") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "58") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "58") (term "0,0,1,0,0") (ifseqformula "70"))
                                                   (rule "concrete_and_2" (formula "58") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "58") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "58") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0"))
                                                   (rule "eqClose" (formula "58") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "58") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "58") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                                   (rule "replace_known_left" (formula "58") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "concrete_or_3" (formula "58") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "58") (term "0"))
                                                   (rule "applyEqReverse" (formula "59") (term "0,1,1") (ifseqformula "58"))
                                                   (rule "hideAuxiliaryEq" (formula "58"))
                                                   (rule "polySimp_addComm0" (formula "58") (term "1,1"))
                                                   (rule "pullOutSelect" (formula "58") (term "0,1") (inst "selectSK=arr_21"))
                                                   (rule "simplifySelectOfAnon" (formula "58"))
                                                   (rule "elementOfFreshLocs" (formula "58") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "58") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "58") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "58") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "58") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "58") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "58") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "59") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "59") (term "0,0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "59") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "59") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "59") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "59") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "58") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "58") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "58") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "58") (term "1,0,1,0,0") (ifseqformula "72"))
                                                   (rule "concrete_and_4" (formula "58") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "58") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "58") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "58") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "58") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "58") (term "0,1,0,0") (ifseqformula "67"))
                                                   (rule "concrete_and_2" (formula "58") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "58") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0"))
                                                   (rule "eqClose" (formula "58") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "58") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "58") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "58") (term "1,0,1,0,0,0") (ifseqformula "69"))
                                                   (rule "concrete_and_4" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "58") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "58") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "58") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "58") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "58") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "58") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "58") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "58") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "58") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "58") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "58") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "58") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "58") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "58") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "58") (term "0,0"))
                                                   (rule "allLeft" (formula "39") (inst "t=Z(3(#))"))
                                                   (rule "leq_literals" (formula "39") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "39") (term "0"))
                                                   (rule "add_literals" (formula "39") (term "0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39") (term "0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "36"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0"))
                                                   (rule "allLeft" (formula "61") (inst "t=arr_18<<selectSK>>"))
                                                   (rule "polySimp_homoEq" (formula "61") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "61") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "61") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "61") (term "0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "61") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "61") (term "0,1") (inst "selectSK=arr_22"))
                                                   (rule "simplifySelectOfAnon" (formula "61"))
                                                   (rule "elementOfFreshLocs" (formula "61") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "61") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "61") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "61") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "61") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "61") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "61") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "61") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "62") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "62") (term "0,0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "62") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "62") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "61") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "61") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "61") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "61") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "61") (term "0,0,0,1,0,0") (ifseqformula "73"))
                                                   (rule "concrete_and_2" (formula "61") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "61") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "61") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "61") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "61") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "61") (term "1,0,0"))
                                                   (rule "eqClose" (formula "61") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "61") (term "0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "61") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "61") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "61") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "61") (term "0,0,1,0,0,0") (ifseqformula "70"))
                                                   (rule "concrete_and_2" (formula "61") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "61") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "61") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "61") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "61") (term "1,0,0,1,0,0,0") (ifseqformula "72"))
                                                   (rule "concrete_and_4" (formula "61") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "61") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "61") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "61") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "61") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "61") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "61") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "61") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "61") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "61") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "61") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "61") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "61") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "61") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "62") (term "0,1") (inst "selectSK=arr_23"))
                                                   (rule "simplifySelectOfAnon" (formula "62"))
                                                   (rule "elementOfFreshLocs" (formula "62") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "62") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "62") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "62") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "62") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "62") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "62") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "62") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "63") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "63") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "63") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "63") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "63") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "62") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "62") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "62") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "62") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0,1,0,0") (ifseqformula "76"))
                                                   (rule "concrete_and_4" (formula "62") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "62") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "62") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "62") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "62") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "62") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "62") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "62") (term "0,0,1,0,0") (ifseqformula "71"))
                                                   (rule "concrete_and_2" (formula "62") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "62") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "62") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "62") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "62") (term "1,0,0"))
                                                   (rule "eqClose" (formula "62") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "62") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "62") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "62") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "62") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "62") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "62") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "62") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "62") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "62") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "62") (term "1,1,1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "62") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "62") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "62") (term "1,0,0,1,0,0,0") (ifseqformula "73"))
                                                   (rule "concrete_and_4" (formula "62") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "62") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "62") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "62") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "62") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "62") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "62") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "62") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "62") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "62") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "62") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "62") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "62") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "62") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "62") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "62") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "63") (term "0,1") (inst "selectSK=arr_24"))
                                                   (rule "simplifySelectOfAnon" (formula "63"))
                                                   (rule "elementOfFreshLocs" (formula "63") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "63") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "63") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "63") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "63") (term "0,0,1,0,0") (ifseqformula "77"))
                                                   (rule "concrete_not_2" (formula "63") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "63") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "63") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "63") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "63") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "63") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "63") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "63") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "63") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0,1,0,0") (ifseqformula "77"))
                                                   (rule "concrete_and_4" (formula "63") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "63") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "63") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "63") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "63") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "63") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "63") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "63") (term "0,0,1,0,0") (ifseqformula "72"))
                                                   (rule "concrete_and_2" (formula "63") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "63") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "63") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "63") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "63") (term "1,0,0"))
                                                   (rule "eqClose" (formula "63") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "63") (term "0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "63") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "63") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "63") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "63") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "63") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "63") (term "1,1,1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "63") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "63") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "63") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0,1,0,0,0") (ifseqformula "74"))
                                                   (rule "concrete_and_4" (formula "63") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "63") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "63") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "63") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "63") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "63") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "63") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "63") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "63") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "63") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "63") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "63") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "63") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "63") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "63") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "63") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "63") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "63") (term "0,0"))
                                                   (rule "commute_or_2" (formula "64"))
                                                   (rule "allLeft" (formula "40") (inst "t=arr_18<<selectSK>>"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0"))
                                                   (rule "allLeft" (formula "41") (inst "t=int::select(anon_heap_LOOP<<anonHeapFunction>>,
            self,
            java.util.TimSort::$stackSize)"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "41") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "41") (term "0"))
                                                   (rule "allLeft" (formula "42") (inst "t=Z(4(#))"))
                                                   (rule "add_literals" (formula "42") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "42") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "42") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0"))
                                                   (rule "mul_literals" (formula "42") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                   (rule "add_literals" (formula "42") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0"))
                                                   (rule "mul_literals" (formula "42") (term "1,0"))
                                                   (rule "allLeft" (formula "68") (inst "t=Z(4(#))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_63" (formula "68") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "68") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "68") (term "0"))
                                                   (rule "add_literals" (formula "68") (term "0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "68") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "68") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "68") (term "0"))
                                                   (rule "mul_literals" (formula "68") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                                                   (rule "add_literals" (formula "68") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "68") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "68") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "68") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "68") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "68") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0"))
                                                   (rule "mul_literals" (formula "68") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "68") (term "0,1") (inst "selectSK=arr_25"))
                                                   (rule "simplifySelectOfAnon" (formula "68"))
                                                   (rule "elementOfFreshLocs" (formula "68") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "68") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "68") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "68") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "68") (term "0,0,1,0,0") (ifseqformula "83"))
                                                   (rule "concrete_not_2" (formula "68") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "68") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "68") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "68") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "68") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "69") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "69") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "69") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "69") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "69") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "68") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "68") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "68") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "68") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "68") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "68") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "68") (term "1,0,1,0,0") (ifseqformula "83"))
                                                   (rule "concrete_and_4" (formula "68") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "68") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "68") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "68") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "68") (term "1,0,0"))
                                                   (rule "eqClose" (formula "68") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "68") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "68") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "68") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "68") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "68") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "68") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "68") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "68") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "68") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "68") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "68") (term "0,1,0,0,0") (ifseqformula "77"))
                                                   (rule "concrete_and_2" (formula "68") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "68") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "68") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "68") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "68") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "68") (term "1,0,1,0,0,0") (ifseqformula "79"))
                                                   (rule "concrete_and_4" (formula "68") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "68") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "68") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "68") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "68") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "68") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "68") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "68") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "68") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "68") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "68") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "68") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "68") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "69") (term "0,1") (inst "selectSK=arr_26"))
                                                   (rule "simplifySelectOfAnon" (formula "69"))
                                                   (rule "elementOfFreshLocs" (formula "69") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "69") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "69") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "69") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "69") (term "0,0,1,0,0") (ifseqformula "83"))
                                                   (rule "concrete_not_2" (formula "69") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "69") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "69") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "69") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "69") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "69") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "69") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "69") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "69") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "69") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "69") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "69") (term "1,0,1,0,0") (ifseqformula "83"))
                                                   (rule "concrete_and_4" (formula "69") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "69") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "69") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "69") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "69") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "69") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "69") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "69") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "69") (term "0,1,0,0") (ifseqformula "78"))
                                                   (rule "concrete_and_2" (formula "69") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "69") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "69") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "69") (term "1,0,0"))
                                                   (rule "eqClose" (formula "69") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "69") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "69") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "69") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "69") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "69") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "69") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "69") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "69") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "69") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "69") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "69") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "69") (term "1,0,1,0,0,0") (ifseqformula "80"))
                                                   (rule "concrete_and_4" (formula "69") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "69") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "69") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "69") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "69") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "69") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "69") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "69") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "69") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "69") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "69") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "69") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "69") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "69") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "69") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "69") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "69") (term "0,0"))
                                                   (rule "commute_or" (formula "70"))
                                                   (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "43") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0"))
                                                   (rule "allLeft" (formula "72") (inst "t=add(Z(1(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_65" (formula "72") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "72") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "72") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "72") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "72") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "72") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "72") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "72") (term "0,1") (inst "selectSK=arr_27"))
                                                   (rule "simplifySelectOfAnon" (formula "72"))
                                                   (rule "elementOfFreshLocs" (formula "72") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "72") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "72") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "72") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "72") (term "0,0,1,0,0") (ifseqformula "87"))
                                                   (rule "concrete_not_2" (formula "72") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "72") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "72") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "72") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "72") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "73") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "73") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "73") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "73") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "73") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "73") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "73") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "72") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "72") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "72") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "72") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "72") (term "0,0,0,1,0,0") (ifseqformula "84"))
                                                   (rule "concrete_and_2" (formula "72") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "72") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "72") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "72") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "72") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "72") (term "1,0,0"))
                                                   (rule "eqClose" (formula "72") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "72") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "72") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "72") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "72") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "72") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "72") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "72") (term "0,0,1,0,0,0") (ifseqformula "81"))
                                                   (rule "concrete_and_2" (formula "72") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "72") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "72") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "72") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "72") (term "1,0,0,1,0,0,0") (ifseqformula "83"))
                                                   (rule "concrete_and_4" (formula "72") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "72") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "72") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "72") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "72") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "72") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "72") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "72") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "72") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "72") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "72") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "72") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "72") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "72") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "73") (term "0,1") (inst "selectSK=arr_28"))
                                                   (rule "simplifySelectOfAnon" (formula "73"))
                                                   (rule "elementOfFreshLocs" (formula "73") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "73") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "73") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "73") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "73") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "73") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "73") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "73") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "73") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "73") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "73") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "73") (term "1,0,0,1,0,0") (ifseqformula "87"))
                                                   (rule "concrete_and_4" (formula "73") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "73") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "73") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "73") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "73") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "73") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "73") (term "0,0,1,0,0") (ifseqformula "82"))
                                                   (rule "concrete_and_2" (formula "73") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "73") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "73") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "73") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "73") (term "1,0,0"))
                                                   (rule "eqClose" (formula "73") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "73") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "73") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "73") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "73") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "73") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "73") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "73") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "73") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "73") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "73") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "73") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "73") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "73") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "73") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "73") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "73") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "73") (term "1,0,0,1,0,0,0") (ifseqformula "84"))
                                                   (rule "concrete_and_4" (formula "73") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "73") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "73") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "73") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "73") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "73") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "73") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "73") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "73") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "73") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "73") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "73") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "73") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "73") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "73") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "73") (term "0,0"))
                                                   (rule "commute_or_2" (formula "74"))
                                                   (rule "allLeft" (formula "44") (inst "t=Z(5(#))"))
                                                   (rule "leq_literals" (formula "44") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "44") (term "0"))
                                                   (rule "add_literals" (formula "44") (term "0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44") (term "0"))
                                                   (rule "mul_literals" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0"))
                                                   (rule "mul_literals" (formula "44") (term "1,0"))
                                                   (rule "allLeft" (formula "45") (inst "t=add(Z(1(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "45") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "45") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                                   (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "45") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "45") (term "0"))
                                                   (rule "allLeft" (formula "77") (inst "t=Z(5(#))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_68" (formula "77") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "77") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "77") (term "0"))
                                                   (rule "add_literals" (formula "77") (term "0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "77") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "77") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "77") (term "0"))
                                                   (rule "mul_literals" (formula "77") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "77") (term "0,0"))
                                                   (rule "add_literals" (formula "77") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "77") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "77") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "77") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "77") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "77") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0"))
                                                   (rule "mul_literals" (formula "77") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "77") (term "0,1") (inst "selectSK=arr_29"))
                                                   (rule "simplifySelectOfAnon" (formula "77"))
                                                   (rule "elementOfFreshLocs" (formula "77") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "77") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "77") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "77") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "77") (term "0,0,1,0,0") (ifseqformula "92"))
                                                   (rule "concrete_not_2" (formula "77") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "77") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "77") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "77") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "77") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "78") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "78") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "78") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "78") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "78") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "78") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "78") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "78") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "78") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "77") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "77") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "77") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "77") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "77") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "77") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "77") (term "1,0,1,0,0") (ifseqformula "92"))
                                                   (rule "concrete_and_4" (formula "77") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "77") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "77") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "77") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "77") (term "1,0,0"))
                                                   (rule "eqClose" (formula "77") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "77") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "77") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "77") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "77") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "77") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "77") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "77") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "77") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "77") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "77") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "77") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "77") (term "0,1,0,0,0") (ifseqformula "86"))
                                                   (rule "concrete_and_2" (formula "77") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "77") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "77") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "77") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "77") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "77") (term "1,0,1,0,0,0") (ifseqformula "88"))
                                                   (rule "concrete_and_4" (formula "77") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "77") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "77") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "77") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "77") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "77") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "77") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "77") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "77") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "77") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "77") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "77") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "77") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "78") (term "0,1") (inst "selectSK=arr_30"))
                                                   (rule "simplifySelectOfAnon" (formula "78"))
                                                   (rule "elementOfFreshLocs" (formula "78") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "78") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "78") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "78") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "78") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "78") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "78") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "78") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "78") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "78") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "78") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "78") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "78") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "78") (term "0,0,1,0,0") (ifseqformula "90"))
                                                   (rule "concrete_and_2" (formula "78") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "78") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "78") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "78") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "78") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "78") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "78") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "78") (term "0,1,0,0") (ifseqformula "87"))
                                                   (rule "concrete_and_2" (formula "78") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "78") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "78") (term "1,0,0"))
                                                   (rule "eqClose" (formula "78") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "78") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "78") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "78") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "78") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "78") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "78") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "78") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "78") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "78") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "78") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "78") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "78") (term "1,0,1,0,0,0") (ifseqformula "89"))
                                                   (rule "concrete_and_4" (formula "78") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "78") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "78") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "78") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "78") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "78") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "78") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "78") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "78") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "78") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "78") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "78") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "78") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "78") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "78") (term "0,0"))
                                                   (rule "commute_or" (formula "79"))
                                                   (rule "allLeft" (formula "80") (inst "t=add(Z(2(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_70" (formula "80") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "80") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "80") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "80") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "80") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "80") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "80") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "80") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "80") (term "0,0,0"))
                                                   (rule "add_literals" (formula "80") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "80") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "80") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "80") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "80") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "80") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "80") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "80") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "80") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "80") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "80") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "80") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "80") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "80") (term "0,1") (inst "selectSK=arr_31"))
                                                   (rule "simplifySelectOfAnon" (formula "80"))
                                                   (rule "elementOfFreshLocs" (formula "80") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "80") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "80") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "80") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "80") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "80") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "80") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "80") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "81") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "81") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "81") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "81") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "81") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "81") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "81") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "81") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "81") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "80") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "80") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "80") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "80") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "80") (term "1,0,0,1,0,0") (ifseqformula "95"))
                                                   (rule "concrete_and_4" (formula "80") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "80") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "80") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "80") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "80") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "80") (term "1,0,0"))
                                                   (rule "eqClose" (formula "80") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "80") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "80") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "80") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "80") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "80") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "80") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "80") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "80") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "80") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "80") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "80") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "80") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "80") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "80") (term "0,0,1,0,0,0") (ifseqformula "89"))
                                                   (rule "concrete_and_2" (formula "80") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "80") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "80") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "80") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "80") (term "0,0,0,1,0,0,0") (ifseqformula "95"))
                                                   (rule "concrete_and_2" (formula "80") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "80") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "80") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "80") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "80") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "80") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "80") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "80") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "80") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "80") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "80") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "80") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "80") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "80") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "81") (term "0,1") (inst "selectSK=arr_32"))
                                                   (rule "simplifySelectOfAnon" (formula "81"))
                                                   (rule "elementOfFreshLocs" (formula "81") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "81") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "81") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "81") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "81") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "81") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "81") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "81") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "81") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "81") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "81") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "81") (term "1,0,0,1,0,0") (ifseqformula "95"))
                                                   (rule "concrete_and_4" (formula "81") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "81") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "81") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "81") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "81") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "81") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "81") (term "0,0,1,0,0") (ifseqformula "90"))
                                                   (rule "concrete_and_2" (formula "81") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "81") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "81") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "81") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                                   (rule "eqClose" (formula "81") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "81") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "81") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "81") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "81") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "81") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "81") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "81") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "81") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "81") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "81") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "81") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "81") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "81") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "81") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "81") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "81") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "81") (term "0,0,0,1,0,0,0") (ifseqformula "95"))
                                                   (rule "concrete_and_2" (formula "81") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "81") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "81") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "81") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "81") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "81") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "81") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "81") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "81") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "81") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "81") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "81") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "81") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "81") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "81") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "81") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "81") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "81") (term "0,0"))
                                                   (rule "allLeft" (formula "46") (inst "t=add(Z(2(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "46") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                   (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "83"))
                                                   (rule "allLeft" (formula "47") (inst "t=add(Z(2(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "47") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "47") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "47") (term "0"))
                                                   (rule "allLeft" (formula "85") (inst "t=Z(6(#))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_72" (formula "85") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "85") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "85") (term "0"))
                                                   (rule "add_literals" (formula "85") (term "0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "85") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "85") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "85") (term "0"))
                                                   (rule "mul_literals" (formula "85") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "85") (term "0,0"))
                                                   (rule "add_literals" (formula "85") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "85") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "85") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "85") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "85") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "85") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "0"))
                                                   (rule "mul_literals" (formula "85") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "85") (term "0,1") (inst "selectSK=arr_33"))
                                                   (rule "simplifySelectOfAnon" (formula "85"))
                                                   (rule "elementOfFreshLocs" (formula "85") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "85") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "85") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "85") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "85") (term "0,0,1,0,0") (ifseqformula "100"))
                                                   (rule "concrete_not_2" (formula "85") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "85") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "85") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "85") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "85") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "86") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "86") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "86") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "86") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "86") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "86") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "86") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "85") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "85") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "85") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "85") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "85") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "85") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "85") (term "1,0,1,0,0") (ifseqformula "100"))
                                                   (rule "concrete_and_4" (formula "85") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "85") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "85") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "85") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "85") (term "1,0,0"))
                                                   (rule "eqClose" (formula "85") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "85") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "85") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "85") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "85") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "85") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "85") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "85") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "85") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "85") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "85") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "85") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "85") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "85") (term "0,1,0,0,0") (ifseqformula "94"))
                                                   (rule "concrete_and_2" (formula "85") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "85") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "85") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "85") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "85") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "85") (term "1,0,1,0,0,0") (ifseqformula "96"))
                                                   (rule "concrete_and_4" (formula "85") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "85") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "85") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "85") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "85") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "85") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "85") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "85") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "85") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "85") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "85") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "85") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "85") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "86") (term "0,1") (inst "selectSK=arr_34"))
                                                   (rule "simplifySelectOfAnon" (formula "86"))
                                                   (rule "elementOfFreshLocs" (formula "86") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "86") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "86") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "86") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "86") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "86") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "86") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "86") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "86") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "86") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "86") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "86") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "86") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "86") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "86") (term "0,0,1,0,0") (ifseqformula "98"))
                                                   (rule "concrete_and_2" (formula "86") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "86") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "86") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "86") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "86") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "86") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "86") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "86") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "86") (term "0,1,0,0") (ifseqformula "95"))
                                                   (rule "concrete_and_2" (formula "86") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "86") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "86") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "86") (term "1,0,0"))
                                                   (rule "eqClose" (formula "86") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "86") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "86") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "86") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "86") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "86") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "86") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "86") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "86") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "86") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "86") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "86") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "86") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "86") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "86") (term "1,0,1,0,0,0") (ifseqformula "97"))
                                                   (rule "concrete_and_4" (formula "86") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "86") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "86") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "86") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "86") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "86") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "86") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "86") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "86") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "86") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "86") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "86") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "86") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "86") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "86") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "86") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "86") (term "0,0"))
                                                   (rule "commute_or" (formula "87"))
                                                   (rule "allLeft" (formula "48") (inst "t=Z(6(#))"))
                                                   (rule "leq_literals" (formula "48") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "48") (term "0"))
                                                   (rule "add_literals" (formula "48") (term "0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "48") (term "0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0"))
                                                   (rule "mul_literals" (formula "48") (term "1,0"))
                                                   (rule "allLeft" (formula "89") (inst "t=add(Z(3(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_74" (formula "89") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "89") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "89") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "89") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "89") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "89") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "89") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "89") (term "0,0,0"))
                                                   (rule "add_literals" (formula "89") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "89") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "89") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "89") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "89") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "89") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "89") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "89") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "89") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "89") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "89") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "89") (term "0,1") (inst "selectSK=arr_35"))
                                                   (rule "simplifySelectOfAnon" (formula "89"))
                                                   (rule "elementOfFreshLocs" (formula "89") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "89") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "89") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "89") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "89") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "89") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "89") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "89") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "90") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "90") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "90") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "90") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "90") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "90") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "90") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "90") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "90") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "90") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "89") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "89") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "89") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "89") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "89") (term "0,0,0,1,0,0") (ifseqformula "101"))
                                                   (rule "concrete_and_2" (formula "89") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "89") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "89") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "89") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "89") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "89") (term "1,0,0"))
                                                   (rule "eqClose" (formula "89") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "89") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "89") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "89") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "89") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "89") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "89") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "89") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "89") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "89") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "89") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "89") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "89") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "89") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "89") (term "0,0,1,0,0,0") (ifseqformula "98"))
                                                   (rule "concrete_and_2" (formula "89") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "89") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "89") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "89") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "89") (term "1,0,0,1,0,0,0") (ifseqformula "100"))
                                                   (rule "concrete_and_4" (formula "89") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "89") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "89") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "89") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "89") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "89") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "89") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "89") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "89") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "89") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "89") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "89") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "89") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "89") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "90") (term "0,1") (inst "selectSK=arr_36"))
                                                   (rule "simplifySelectOfAnon" (formula "90"))
                                                   (rule "elementOfFreshLocs" (formula "90") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "90") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "90") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "90") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "90") (term "0,0,1,0,0") (ifseqformula "104"))
                                                   (rule "concrete_not_2" (formula "90") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "90") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "90") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "90") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "90") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "90") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "90") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "90") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "90") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "90") (term "0,0,0,1,0,0") (ifseqformula "102"))
                                                   (rule "concrete_and_2" (formula "90") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "90") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "90") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "90") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "90") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "90") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "90") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "90") (term "0,0,1,0,0") (ifseqformula "99"))
                                                   (rule "concrete_and_2" (formula "90") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "90") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "90") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "90") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "90") (term "1,0,0"))
                                                   (rule "eqClose" (formula "90") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "90") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "90") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "90") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "90") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "90") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "90") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "90") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "90") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "90") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "90") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "90") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "90") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "90") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "90") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "90") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "90") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "90") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "90") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "90") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "90") (term "1,0,0,1,0,0,0") (ifseqformula "101"))
                                                   (rule "concrete_and_4" (formula "90") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "90") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "90") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "90") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "90") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "90") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "90") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "90") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "90") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "90") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "90") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "90") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "90") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "90") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "90") (term "0,0"))
                                                   (rule "commute_or_2" (formula "91"))
                                                   (rule "allLeft" (formula "49") (inst "t=add(Z(3(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "49") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "0,0,0"))
                                                   (rule "allLeft" (formula "50") (inst "t=add(Z(3(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "50") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "50") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "50") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "50") (term "0"))
                                                   (rule "allLeft" (formula "51") (inst "t=Z(7(#))"))
                                                   (rule "add_literals" (formula "51") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "51") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "51") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "51") (term "0"))
                                                   (rule "mul_literals" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0"))
                                                   (rule "mul_literals" (formula "51") (term "1,0"))
                                                   (rule "allLeft" (formula "95") (inst "t=Z(7(#))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_76" (formula "95") (term "0,1,1"))
                                                   (rule "add_literals" (formula "95") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "95") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "95") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "95") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "95") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "95") (term "0"))
                                                   (rule "mul_literals" (formula "95") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "95") (term "0,0"))
                                                   (rule "add_literals" (formula "95") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "95") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "95") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "95") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "95") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "95") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "95") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0"))
                                                   (rule "mul_literals" (formula "95") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "95") (term "0,1") (inst "selectSK=arr_37"))
                                                   (rule "simplifySelectOfAnon" (formula "95"))
                                                   (rule "elementOfFreshLocs" (formula "95") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "95") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "95") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "95") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "95") (term "0,0,1,0,0") (ifseqformula "110"))
                                                   (rule "concrete_not_2" (formula "95") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "95") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "95") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "95") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "95") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "96") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "96") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "96") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "96") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "96") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "96") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "96") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "96") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "96") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "96") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "96") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "95") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "95") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "95") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "95") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "95") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "95") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "95") (term "0,0,1,0,0") (ifseqformula "107"))
                                                   (rule "concrete_and_2" (formula "95") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "95") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "95") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "95") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "95") (term "1,0,0"))
                                                   (rule "eqClose" (formula "95") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "95") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "95") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "95") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "95") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "95") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "95") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "95") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "95") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "95") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "95") (term "0,1,0,0,0") (ifseqformula "104"))
                                                   (rule "concrete_and_2" (formula "95") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "95") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "95") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "95") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "95") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "95") (term "0,0,1,0,0,0") (ifseqformula "110"))
                                                   (rule "concrete_and_2" (formula "95") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "95") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "95") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "95") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "95") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "95") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "95") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "95") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "95") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "95") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "95") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "95") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "95") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "96") (term "0,1") (inst "selectSK=arr_38"))
                                                   (rule "simplifySelectOfAnon" (formula "96"))
                                                   (rule "elementOfFreshLocs" (formula "96") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "96") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "96") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "96") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "96") (term "0,0,1,0,0") (ifseqformula "110"))
                                                   (rule "concrete_not_2" (formula "96") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "96") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "96") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "96") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "96") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "96") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "96") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "96") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "96") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "96") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "96") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "96") (term "1,0,1,0,0") (ifseqformula "110"))
                                                   (rule "concrete_and_4" (formula "96") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "96") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "96") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "96") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "96") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "96") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "96") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "96") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "96") (term "0,1,0,0") (ifseqformula "105"))
                                                   (rule "concrete_and_2" (formula "96") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "96") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "96") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "96") (term "1,0,0"))
                                                   (rule "eqClose" (formula "96") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "96") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "96") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "96") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "96") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "96") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "96") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "96") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "96") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "96") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "96") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "96") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "96") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "96") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "96") (term "0,0,1,0,0,0") (ifseqformula "110"))
                                                   (rule "concrete_and_2" (formula "96") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "96") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "96") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "96") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "96") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "96") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "96") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "96") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "96") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "96") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "96") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "96") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "96") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "96") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "96") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "96") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "96") (term "0,0"))
                                                   (rule "commute_or" (formula "97"))
                                                   (rule "allLeft" (formula "98") (inst "t=add(Z(4(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_78" (formula "98") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "98") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "98") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "98") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "98") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "98") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "98") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "98") (term "0,0,0"))
                                                   (rule "add_literals" (formula "98") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "98") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "98") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "98") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "98") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "98") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "98") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "98") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "98") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "98") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "98") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "98") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "98") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "98") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "98") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "98") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "98") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "98") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "98") (term "0,1") (inst "selectSK=arr_39"))
                                                   (rule "simplifySelectOfAnon" (formula "98"))
                                                   (rule "elementOfFreshLocs" (formula "98") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "98") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "98") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "98") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "98") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "98") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "98") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "98") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "99") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "99") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "99") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "99") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "99") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "99") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "99") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "99") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "99") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "99") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "98") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "98") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "98") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "98") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "98") (term "1,0,0,1,0,0") (ifseqformula "113"))
                                                   (rule "concrete_and_4" (formula "98") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "98") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "98") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "98") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "98") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "98") (term "1,0,0"))
                                                   (rule "eqClose" (formula "98") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "98") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "98") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "98") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "98") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "98") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "98") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "98") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "98") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "98") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "98") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "98") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "98") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "98") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "98") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "98") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "98") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "98") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "98") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "98") (term "0,0,1,0,0,0") (ifseqformula "107"))
                                                   (rule "concrete_and_2" (formula "98") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "98") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "98") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "98") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "98") (term "1,0,0,1,0,0,0") (ifseqformula "109"))
                                                   (rule "concrete_and_4" (formula "98") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "98") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "98") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "98") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "98") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "98") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "98") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "98") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "98") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "98") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "98") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "98") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "98") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "98") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "99") (term "0,1") (inst "selectSK=arr_40"))
                                                   (rule "simplifySelectOfAnon" (formula "99"))
                                                   (rule "elementOfFreshLocs" (formula "99") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "99") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "99") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "99") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "99") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "99") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "99") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "99") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "99") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "99") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "99") (term "1,0,0,1,0,0") (ifseqformula "113"))
                                                   (rule "concrete_and_4" (formula "99") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "99") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "99") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "99") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "99") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "99") (term "0,0,1,0,0") (ifseqformula "108"))
                                                   (rule "concrete_and_2" (formula "99") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "99") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "99") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0"))
                                                   (rule "eqClose" (formula "99") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "99") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "99") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "99") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "99") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "99") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "99") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "99") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "99") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "99") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "99") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "99") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "99") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "99") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "99") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "99") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "99") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "99") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "99") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "99") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "99") (term "0,0,0,1,0,0,0") (ifseqformula "113"))
                                                   (rule "concrete_and_2" (formula "99") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "99") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "99") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "99") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "99") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "99") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "99") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "99") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "99") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "99") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "99") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "99") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "99") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "99") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "99") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "99") (term "0,0"))
                                                   (rule "commute_or_2" (formula "100"))
                                                   (rule "allLeft" (formula "52") (inst "t=add(Z(4(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "52") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "52") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "52") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                                                   (rule "allLeft" (formula "53") (inst "t=add(Z(4(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "53") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                   (rule "add_literals" (formula "53") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "53") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "53") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "53") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "53") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "53") (term "0"))
                                                   (rule "allLeft" (formula "54") (inst "t=Z(8(#))"))
                                                   (rule "leq_literals" (formula "54") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "54") (term "0"))
                                                   (rule "add_literals" (formula "54") (term "0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "54") (term "0"))
                                                   (rule "mul_literals" (formula "54") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                   (rule "add_literals" (formula "54") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0"))
                                                   (rule "mul_literals" (formula "54") (term "1,0"))
                                                   (rule "allLeft" (formula "104") (inst "t=Z(8(#))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_80" (formula "104") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "104") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "104") (term "0"))
                                                   (rule "add_literals" (formula "104") (term "0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "104") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "104") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "104") (term "0"))
                                                   (rule "mul_literals" (formula "104") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "104") (term "0,0"))
                                                   (rule "add_literals" (formula "104") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "104") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "104") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "104") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "104") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "104") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "104") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "104") (term "0"))
                                                   (rule "mul_literals" (formula "104") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "104") (term "0,1") (inst "selectSK=arr_41"))
                                                   (rule "simplifySelectOfAnon" (formula "104"))
                                                   (rule "elementOfFreshLocs" (formula "104") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "104") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "104") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "104") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "104") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "104") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "104") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "104") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "105") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "105") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "105") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "105") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "105") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "105") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "105") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "105") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "105") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "105") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "105") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "104") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "104") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "104") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "104") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "104") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "104") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "104") (term "1,0,1,0,0") (ifseqformula "119"))
                                                   (rule "concrete_and_4" (formula "104") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "104") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "104") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "104") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "104") (term "1,0,0"))
                                                   (rule "eqClose" (formula "104") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "104") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "104") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "104") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "104") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "104") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "104") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "104") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "104") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "104") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "104") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "104") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "104") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "104") (term "0,1,0,0,0") (ifseqformula "113"))
                                                   (rule "concrete_and_2" (formula "104") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "104") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "104") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "104") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "104") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "104") (term "0,0,1,0,0,0") (ifseqformula "119"))
                                                   (rule "concrete_and_2" (formula "104") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "104") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "104") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "104") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "104") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "104") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "104") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "104") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "104") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "104") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "104") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "104") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "104") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "105") (term "0,1") (inst "selectSK=arr_42"))
                                                   (rule "simplifySelectOfAnon" (formula "105"))
                                                   (rule "elementOfFreshLocs" (formula "105") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "105") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "105") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "105") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "105") (term "0,0,1,0,0") (ifseqformula "119"))
                                                   (rule "concrete_not_2" (formula "105") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "105") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "105") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "105") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "105") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "105") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "105") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "105") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "105") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "105") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "105") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "105") (term "0,0,1,0,0") (ifseqformula "117"))
                                                   (rule "concrete_and_2" (formula "105") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "105") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "105") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "105") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "105") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "105") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "105") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "105") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "105") (term "0,1,0,0") (ifseqformula "114"))
                                                   (rule "concrete_and_2" (formula "105") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "105") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "105") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "105") (term "1,0,0"))
                                                   (rule "eqClose" (formula "105") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "105") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "105") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "105") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "105") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "105") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "105") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "105") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "105") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "105") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "105") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "105") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "105") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "105") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "105") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "105") (term "1,0,1,0,0,0") (ifseqformula "116"))
                                                   (rule "concrete_and_4" (formula "105") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "105") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "105") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "105") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "105") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "105") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "105") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "105") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "105") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "105") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "105") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "105") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "105") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "105") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "105") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "105") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "105") (term "0,0"))
                                                   (rule "commute_or" (formula "106"))
                                                   (rule "allLeft" (formula "107") (inst "t=add(Z(5(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_82" (formula "107") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "107") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "107") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "107") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "107") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "107") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "107") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "107") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "107") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "107") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "107") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "107") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "107") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "107") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "107") (term "0,0,0"))
                                                   (rule "add_literals" (formula "107") (term "0,0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "107") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "107") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "107") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "107") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "107") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "107") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "107") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "107") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "107") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "107") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "107") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "107") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "107") (term "0,0,0"))
                                                   (rule "pullOutSelect" (formula "107") (term "0,1") (inst "selectSK=arr_43"))
                                                   (rule "simplifySelectOfAnon" (formula "107"))
                                                   (rule "elementOfFreshLocs" (formula "107") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "107") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "107") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "107") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "107") (term "0,0,1,0,0") (ifseqformula "122"))
                                                   (rule "concrete_not_2" (formula "107") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "107") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "107") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "107") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "107") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "108") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "108") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "108") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "108") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "108") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "108") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "108") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "108") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "108") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "108") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "108") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "107") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "107") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "107") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "107") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "107") (term "0,0,0,1,0,0") (ifseqformula "119"))
                                                   (rule "concrete_and_2" (formula "107") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "107") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "107") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "107") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "107") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "107") (term "1,0,0"))
                                                   (rule "eqClose" (formula "107") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "107") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "107") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "107") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "107") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "107") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "107") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "107") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "107") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "107") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "107") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "107") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "107") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "107") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "107") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "107") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "107") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "107") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "107") (term "0,0,1,0,0,0") (ifseqformula "116"))
                                                   (rule "concrete_and_2" (formula "107") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "107") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "107") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "107") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "107") (term "1,0,0,1,0,0,0") (ifseqformula "118"))
                                                   (rule "concrete_and_4" (formula "107") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "107") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "107") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "107") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "107") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "107") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "107") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "107") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "107") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "107") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "107") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "107") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "107") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "107") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "108") (term "0,1") (inst "selectSK=arr_44"))
                                                   (rule "simplifySelectOfAnon" (formula "108"))
                                                   (rule "elementOfFreshLocs" (formula "108") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "108") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "108") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "108") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "108") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "108") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "108") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "108") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "108") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "108") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "108") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "108") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "108") (term "0,0,0,1,0,0") (ifseqformula "120"))
                                                   (rule "concrete_and_2" (formula "108") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "108") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "108") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "108") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "108") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "108") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "108") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "108") (term "0,0,1,0,0") (ifseqformula "117"))
                                                   (rule "concrete_and_2" (formula "108") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "108") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "108") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "108") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "108") (term "1,0,0"))
                                                   (rule "eqClose" (formula "108") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "108") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "108") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "108") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "108") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "108") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "108") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "108") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "108") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "108") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "108") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "108") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "108") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "108") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "108") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "108") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "108") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "108") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "108") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "108") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "108") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "108") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "108") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "108") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "108") (term "1,0,0,1,0,0,0") (ifseqformula "119"))
                                                   (rule "concrete_and_4" (formula "108") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "108") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "108") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "108") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "108") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "108") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "108") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "108") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "108") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "108") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "108") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "108") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "108") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "108") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "108") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "108") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "108") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "108") (term "0,0"))
                                                   (rule "commute_or_2" (formula "109"))
                                                   (rule "allLeft" (formula "55") (inst "t=add(Z(5(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "55") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "55") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "55") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "55") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "55") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                                   (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                                                   (rule "allLeft" (formula "56") (inst "t=add(Z(5(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "56") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "56") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "56") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "56") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "56") (term "0,0,0"))
                                                   (rule "add_literals" (formula "56") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "56") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "56") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "56") (term "0"))
                                                   (rule "allLeft" (formula "112") (inst "t=Z(9(#))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_84" (formula "112") (term "0,1,1"))
                                                   (rule "leq_literals" (formula "112") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "112") (term "0"))
                                                   (rule "add_literals" (formula "112") (term "0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "112") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "112") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "112") (term "0"))
                                                   (rule "mul_literals" (formula "112") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "112") (term "0,0"))
                                                   (rule "add_literals" (formula "112") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "112") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "112") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "112") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "112") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "112") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "112") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "112") (term "0"))
                                                   (rule "mul_literals" (formula "112") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "112") (term "0,1") (inst "selectSK=arr_45"))
                                                   (rule "simplifySelectOfAnon" (formula "112"))
                                                   (rule "elementOfFreshLocs" (formula "112") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "112") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "112") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "112") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "112") (term "0,0,1,0,0") (ifseqformula "127"))
                                                   (rule "concrete_not_2" (formula "112") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "112") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "112") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "112") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "112") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "113") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "113") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "113") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "113") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "113") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "113") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "113") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "113") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "113") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "113") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "113") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "112") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "112") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "112") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "112") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "112") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "112") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "112") (term "1,0,1,0,0") (ifseqformula "127"))
                                                   (rule "concrete_and_4" (formula "112") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "112") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "112") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "112") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "112") (term "1,0,0"))
                                                   (rule "eqClose" (formula "112") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "112") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "112") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "112") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "112") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "112") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "112") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "112") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "112") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "112") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "112") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "112") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "112") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "112") (term "0,1,0,0,0") (ifseqformula "121"))
                                                   (rule "concrete_and_2" (formula "112") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "112") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "112") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "112") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "112") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "112") (term "0,0,1,0,0,0") (ifseqformula "127"))
                                                   (rule "concrete_and_2" (formula "112") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "112") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "112") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "112") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "112") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "112") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "112") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "112") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "112") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "112") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "112") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "112") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "112") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "113") (term "0,1") (inst "selectSK=arr_46"))
                                                   (rule "simplifySelectOfAnon" (formula "113"))
                                                   (rule "elementOfFreshLocs" (formula "113") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "113") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "113") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "113") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "113") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "113") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "113") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "113") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "113") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "113") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "113") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "113") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "113") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "113") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "113") (term "0,0,1,0,0") (ifseqformula "125"))
                                                   (rule "concrete_and_2" (formula "113") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "113") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "113") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "113") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "113") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "113") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "113") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "113") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "113") (term "0,1,0,0") (ifseqformula "122"))
                                                   (rule "concrete_and_2" (formula "113") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "113") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "113") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "113") (term "1,0,0"))
                                                   (rule "eqClose" (formula "113") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "113") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "113") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "113") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "113") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "113") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "113") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "113") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "113") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "113") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "113") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "113") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "113") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "113") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "113") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "113") (term "1,0,1,0,0,0") (ifseqformula "124"))
                                                   (rule "concrete_and_4" (formula "113") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "113") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "113") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "113") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "113") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "113") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "113") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "113") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "113") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "113") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "113") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "113") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "113") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "113") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "113") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "113") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "113") (term "0,0"))
                                                   (rule "commute_or" (formula "114"))
                                                   (rule "allLeft" (formula "57") (inst "t=Z(9(#))"))
                                                   (rule "leq_literals" (formula "57") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "57") (term "0"))
                                                   (rule "add_literals" (formula "57") (term "0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "57") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "57") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "57") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "57") (term "0"))
                                                   (rule "mul_literals" (formula "57") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                   (rule "add_literals" (formula "57") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "57") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "57") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "57") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "57") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "57") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "57") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0"))
                                                   (rule "mul_literals" (formula "57") (term "1,0"))
                                                   (rule "allLeft" (formula "116") (inst "t=add(Z(6(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_86" (formula "116") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "116") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "116") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "116") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "116") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "116") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "116") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "116") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "116") (term "0,0,0"))
                                                   (rule "add_literals" (formula "116") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "116") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "116") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "116") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "116") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "116") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "116") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "116") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "116") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "116") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "116") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "116") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "116") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "116") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "116") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "116") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "116") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "116") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "116") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "116") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "116") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "116") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "116") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "116") (term "0,1") (inst "selectSK=arr_47"))
                                                   (rule "simplifySelectOfAnon" (formula "116"))
                                                   (rule "elementOfFreshLocs" (formula "116") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "116") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "116") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "116") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "116") (term "0,0,1,0,0") (ifseqformula "131"))
                                                   (rule "concrete_not_2" (formula "116") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "116") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "116") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "116") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "116") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "117") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "117") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "117") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "117") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "117") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "117") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "117") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "117") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "117") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "117") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "117") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "116") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "116") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "116") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "116") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "116") (term "1,0,0,1,0,0") (ifseqformula "131"))
                                                   (rule "concrete_and_4" (formula "116") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "116") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "116") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "116") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "116") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "116") (term "1,0,0"))
                                                   (rule "eqClose" (formula "116") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "116") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "116") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "116") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "116") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "116") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "116") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "116") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "116") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "116") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "116") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "116") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "116") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "116") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "116") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "116") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "116") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "116") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "116") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "116") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "116") (term "0,0,1,0,0,0") (ifseqformula "125"))
                                                   (rule "concrete_and_2" (formula "116") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "116") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "116") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "116") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "116") (term "0,0,0,1,0,0,0") (ifseqformula "131"))
                                                   (rule "concrete_and_2" (formula "116") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "116") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "116") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "116") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "116") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "116") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "116") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "116") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "116") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "116") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "116") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "116") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "116") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "116") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "117") (term "0,1") (inst "selectSK=arr_48"))
                                                   (rule "simplifySelectOfAnon" (formula "117"))
                                                   (rule "elementOfFreshLocs" (formula "117") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "117") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "117") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "117") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "117") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "117") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "117") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "117") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "117") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "117") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "117") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "117") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "117") (term "0,0,0,1,0,0") (ifseqformula "129"))
                                                   (rule "concrete_and_2" (formula "117") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "117") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "117") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "117") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "117") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "117") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "117") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "117") (term "0,0,1,0,0") (ifseqformula "126"))
                                                   (rule "concrete_and_2" (formula "117") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "117") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "117") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "117") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "117") (term "1,0,0"))
                                                   (rule "eqClose" (formula "117") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "117") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "117") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "117") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "117") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "117") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "117") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "117") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "117") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "117") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "117") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "117") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "117") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "117") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "117") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "117") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "117") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "117") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "117") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "117") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "117") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "117") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "117") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "117") (term "0,0,0,1,0,0,0") (ifseqformula "131"))
                                                   (rule "concrete_and_2" (formula "117") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "117") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "117") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "117") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "117") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "117") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "117") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "117") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "117") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "117") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "117") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "117") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "117") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "117") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "117") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "117") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "117") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "117") (term "0,0"))
                                                   (rule "commute_or_2" (formula "118"))
                                                   (rule "allLeft" (formula "58") (inst "t=add(Z(6(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "58") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "58") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "58") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "58") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "58") (term "0,0,0"))
                                                   (rule "allLeft" (formula "59") (inst "t=add(Z(6(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "59") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "59") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "59") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "59") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "59") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "59") (term "0,0,0"))
                                                   (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "59") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "59") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "59") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "59") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "59") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "59") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "59") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "59") (term "0"))
                                                   (rule "allLeft" (formula "60") (inst "t=Z(0(1(#)))"))
                                                   (rule "leq_literals" (formula "60") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "60") (term "0"))
                                                   (rule "add_literals" (formula "60") (term "0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "60") (term "0"))
                                                   (rule "mul_literals" (formula "60") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "60") (term "0,0"))
                                                   (rule "add_literals" (formula "60") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0"))
                                                   (rule "mul_literals" (formula "60") (term "1,0"))
                                                   (rule "allLeft" (formula "122") (inst "t=Z(0(1(#)))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_88" (formula "122") (term "0,1,1"))
                                                   (rule "add_literals" (formula "122") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "122") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "122") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "122") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "122") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "122") (term "0"))
                                                   (rule "mul_literals" (formula "122") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "122") (term "0,0"))
                                                   (rule "add_literals" (formula "122") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "122") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "122") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "122") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "122") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "122") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "122") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "122") (term "0"))
                                                   (rule "mul_literals" (formula "122") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "122") (term "0,1") (inst "selectSK=arr_49"))
                                                   (rule "simplifySelectOfAnon" (formula "122"))
                                                   (rule "elementOfFreshLocs" (formula "122") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "122") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "122") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "122") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "122") (term "0,0,1,0,0") (ifseqformula "137"))
                                                   (rule "concrete_not_2" (formula "122") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "122") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "122") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "122") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "122") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "123") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "123") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "123") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "123") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "123") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "123") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "123") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "123") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "123") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "123") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "123") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "122") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "122") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "122") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "122") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "122") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "122") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "122") (term "0,0,1,0,0") (ifseqformula "134"))
                                                   (rule "concrete_and_2" (formula "122") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "122") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "122") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "122") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "122") (term "1,0,0"))
                                                   (rule "eqClose" (formula "122") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "122") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "122") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "122") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "122") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "122") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "122") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "122") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "122") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "122") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "122") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "122") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "122") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "122") (term "0,1,0,0,0") (ifseqformula "131"))
                                                   (rule "concrete_and_2" (formula "122") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "122") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "122") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "122") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "122") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "122") (term "0,0,1,0,0,0") (ifseqformula "137"))
                                                   (rule "concrete_and_2" (formula "122") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "122") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "122") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "122") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "122") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "122") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "122") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "122") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "122") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "122") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "122") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "122") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "122") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "123") (term "0,1") (inst "selectSK=arr_50"))
                                                   (rule "simplifySelectOfAnon" (formula "123"))
                                                   (rule "elementOfFreshLocs" (formula "123") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "123") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "123") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "123") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "123") (term "0,0,1,0,0") (ifseqformula "137"))
                                                   (rule "concrete_not_2" (formula "123") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "123") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "123") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "123") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "123") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "123") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "123") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "123") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "123") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "123") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "123") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "123") (term "1,0,1,0,0") (ifseqformula "137"))
                                                   (rule "concrete_and_4" (formula "123") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "123") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "123") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "123") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "123") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "123") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "123") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "123") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "123") (term "0,1,0,0") (ifseqformula "132"))
                                                   (rule "concrete_and_2" (formula "123") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "123") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "123") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "123") (term "1,0,0"))
                                                   (rule "eqClose" (formula "123") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "123") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "123") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "123") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "123") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "123") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "123") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "123") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "123") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "123") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "123") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "123") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "123") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "123") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "123") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "123") (term "0,0,1,0,0,0") (ifseqformula "137"))
                                                   (rule "concrete_and_2" (formula "123") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "123") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "123") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "123") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "123") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "123") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "123") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "123") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "123") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "123") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "123") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "123") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "123") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "123") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "123") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "123") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "123") (term "0,0"))
                                                   (rule "commute_or" (formula "124"))
                                                   (rule "allLeft" (formula "61") (inst "t=add(Z(7(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "61") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "61") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "61") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "61") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "61") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                                                   (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "61") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "61") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "0,0,0"))
                                                   (rule "allLeft" (formula "126") (inst "t=add(Z(7(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_90" (formula "126") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "126") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "126") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "126") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "126") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "126") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "126") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "126") (term "0,0,0"))
                                                   (rule "add_literals" (formula "126") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "126") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "126") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "126") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "126") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "126") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "126") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "126") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "126") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "126") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "126") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "126") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "126") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "126") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "126") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "126") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "126") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "126") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "126") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "126") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "126") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "126") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "126") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "126") (term "0,1") (inst "selectSK=arr_51"))
                                                   (rule "simplifySelectOfAnon" (formula "126"))
                                                   (rule "elementOfFreshLocs" (formula "126") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "126") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "126") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "126") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "126") (term "0,1,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "126") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "126") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "126") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "127") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "127") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "127") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "127") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "127") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "127") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "127") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "127") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "127") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "127") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "127") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "126") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "126") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "126") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "126") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "126") (term "0,0,0,1,0,0") (ifseqformula "138"))
                                                   (rule "concrete_and_2" (formula "126") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "126") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "126") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "126") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "126") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "126") (term "1,0,0"))
                                                   (rule "eqClose" (formula "126") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "126") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "126") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "126") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "126") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "126") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "126") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "126") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "126") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "126") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "126") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "126") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "126") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "126") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "126") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "126") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "126") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "126") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "126") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "126") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "126") (term "0,0,1,0,0,0") (ifseqformula "135"))
                                                   (rule "concrete_and_2" (formula "126") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "126") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "126") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "126") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "126") (term "0,0,0,1,0,0,0") (ifseqformula "141"))
                                                   (rule "concrete_and_2" (formula "126") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "126") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "126") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "126") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "126") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "126") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "126") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "126") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "126") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "126") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "126") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "126") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "126") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "126") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "127") (term "0,1") (inst "selectSK=arr_52"))
                                                   (rule "simplifySelectOfAnon" (formula "127"))
                                                   (rule "elementOfFreshLocs" (formula "127") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "127") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "127") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "127") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "127") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "127") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "127") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "127") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "127") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "127") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "127") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "127") (term "0,0,0,1,0,0") (ifseqformula "139"))
                                                   (rule "concrete_and_2" (formula "127") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "127") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "127") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "127") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "127") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "127") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "127") (term "0,0,1,0,0") (ifseqformula "136"))
                                                   (rule "concrete_and_2" (formula "127") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "127") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "127") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "127") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "127") (term "1,0,0"))
                                                   (rule "eqClose" (formula "127") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "127") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "127") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "127") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "127") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "127") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "127") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "127") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "127") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "127") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "127") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "127") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "127") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "127") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "127") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "127") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "127") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "127") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "127") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "127") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "127") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "127") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "127") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "127") (term "0,0,0,1,0,0,0") (ifseqformula "141"))
                                                   (rule "concrete_and_2" (formula "127") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "127") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "127") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "127") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "127") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "127") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "127") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "127") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "127") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "127") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "127") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "127") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "127") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "127") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "127") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "127") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "127") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "127") (term "0,0"))
                                                   (rule "commute_or_2" (formula "128"))
                                                   (rule "allLeft" (formula "62") (inst "t=Z(1(1(#)))"))
                                                   (rule "add_literals" (formula "62") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "62") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "62") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "62") (term "0"))
                                                   (rule "mul_literals" (formula "62") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "62") (term "0,0"))
                                                   (rule "add_literals" (formula "62") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0"))
                                                   (rule "mul_literals" (formula "62") (term "1,0"))
                                                   (rule "allLeft" (formula "63") (inst "t=add(Z(7(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "63") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "63") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "63") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "63") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "63") (term "0,0,0"))
                                                   (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "63") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "63") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "63") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "63") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "63") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "63") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "63") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "63") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "63") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "63") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "63") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "63") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "63") (term "0"))
                                                   (rule "allLeft" (formula "131") (inst "t=Z(1(1(#)))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_92" (formula "131") (term "0,1,1"))
                                                   (rule "add_literals" (formula "131") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "131") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "131") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "131") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "131") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "131") (term "0"))
                                                   (rule "mul_literals" (formula "131") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "131") (term "0,0"))
                                                   (rule "add_literals" (formula "131") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "131") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "131") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "131") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "131") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "131") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "131") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "131") (term "0"))
                                                   (rule "mul_literals" (formula "131") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "131") (term "0,1") (inst "selectSK=arr_53"))
                                                   (rule "simplifySelectOfAnon" (formula "131"))
                                                   (rule "elementOfFreshLocs" (formula "131") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "131") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "131") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "131") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "131") (term "0,0,1,0,0") (ifseqformula "146"))
                                                   (rule "concrete_not_2" (formula "131") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "131") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "131") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "131") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "131") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "132") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "132") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "132") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "132") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "132") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "132") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "132") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "132") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "132") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "132") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "132") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "131") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "131") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "131") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "131") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "131") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "131") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "131") (term "0,0,1,0,0") (ifseqformula "143"))
                                                   (rule "concrete_and_2" (formula "131") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "131") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "131") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "131") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "131") (term "1,0,0"))
                                                   (rule "eqClose" (formula "131") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "131") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "131") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "131") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "131") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "131") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "131") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "131") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "131") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "131") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "131") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "131") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "131") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "131") (term "0,1,0,0,0") (ifseqformula "140"))
                                                   (rule "concrete_and_2" (formula "131") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "131") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "131") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "131") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "131") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "131") (term "0,0,1,0,0,0") (ifseqformula "146"))
                                                   (rule "concrete_and_2" (formula "131") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "131") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "131") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "131") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "131") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "131") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "131") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "131") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "131") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "131") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "131") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "131") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "131") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "132") (term "0,1") (inst "selectSK=arr_54"))
                                                   (rule "simplifySelectOfAnon" (formula "132"))
                                                   (rule "elementOfFreshLocs" (formula "132") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "132") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "132") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "132") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "132") (term "0,0,1,0,0") (ifseqformula "146"))
                                                   (rule "concrete_not_2" (formula "132") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "132") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "132") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "132") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "132") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "132") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "132") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "132") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "132") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "132") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "132") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "132") (term "1,0,1,0,0") (ifseqformula "146"))
                                                   (rule "concrete_and_4" (formula "132") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "132") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "132") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "132") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "132") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "132") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "132") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "132") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "132") (term "0,1,0,0") (ifseqformula "141"))
                                                   (rule "concrete_and_2" (formula "132") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "132") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "132") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "132") (term "1,0,0"))
                                                   (rule "eqClose" (formula "132") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "132") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "132") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "132") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "132") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "132") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "132") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "132") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "132") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "132") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "132") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "132") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "132") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "132") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "132") (term "1,0,1,0,0,0") (ifseqformula "143"))
                                                   (rule "concrete_and_4" (formula "132") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "132") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "132") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "132") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "132") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "132") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "132") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "132") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "132") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "132") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "132") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "132") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "132") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "132") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "132") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "132") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "132") (term "0,0"))
                                                   (rule "commute_or" (formula "133"))
                                                   (rule "allLeft" (formula "134") (inst "t=add(Z(8(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_94" (formula "134") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "134") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "134") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "134") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "134") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "134") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "134") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "134") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "134") (term "0,0,0"))
                                                   (rule "add_literals" (formula "134") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "134") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "134") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "134") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "134") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "134") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "134") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "134") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "134") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "134") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "134") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "134") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "134") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "134") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "134") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "134") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "134") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "134") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "134") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "134") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "134") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "134") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "134") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "134") (term "0,1") (inst "selectSK=arr_55"))
                                                   (rule "simplifySelectOfAnon" (formula "134"))
                                                   (rule "elementOfFreshLocs" (formula "134") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "134") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "134") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "134") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "134") (term "0,0,1,0,0") (ifseqformula "149"))
                                                   (rule "concrete_not_2" (formula "134") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "134") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "134") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "134") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "134") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "135") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "135") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "135") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "135") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "135") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "135") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "135") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "135") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "135") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "135") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "135") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "134") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "134") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "134") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "134") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "134") (term "0,0,0,1,0,0") (ifseqformula "146"))
                                                   (rule "concrete_and_2" (formula "134") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "134") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "134") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "134") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "134") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "134") (term "1,0,0"))
                                                   (rule "eqClose" (formula "134") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "134") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "134") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "134") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "134") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "134") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "134") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "134") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "134") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "134") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "134") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "134") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "134") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "134") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "134") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "134") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "134") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "134") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "134") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "134") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "134") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "134") (term "0,0,1,0,0,0") (ifseqformula "143"))
                                                   (rule "concrete_and_2" (formula "134") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "134") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "134") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "134") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "134") (term "0,0,0,1,0,0,0") (ifseqformula "149"))
                                                   (rule "concrete_and_2" (formula "134") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "134") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "134") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "134") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "134") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "134") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "134") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "134") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "134") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "134") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "134") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "134") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "134") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "134") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "135") (term "0,1") (inst "selectSK=arr_56"))
                                                   (rule "simplifySelectOfAnon" (formula "135"))
                                                   (rule "elementOfFreshLocs" (formula "135") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "135") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "135") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "135") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "135") (term "0,0,1,0,0") (ifseqformula "149"))
                                                   (rule "concrete_not_2" (formula "135") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "135") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "135") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "135") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "135") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "135") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "135") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "135") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "135") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "135") (term "0,0,0,1,0,0") (ifseqformula "147"))
                                                   (rule "concrete_and_2" (formula "135") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "135") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "135") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "135") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "135") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "135") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "135") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "135") (term "0,0,1,0,0") (ifseqformula "144"))
                                                   (rule "concrete_and_2" (formula "135") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "135") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "135") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "135") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "135") (term "1,0,0"))
                                                   (rule "eqClose" (formula "135") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "135") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "135") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "135") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "135") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "135") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "135") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "135") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "135") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "135") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "135") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "135") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "135") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "135") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "135") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "135") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "135") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "135") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "135") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "135") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "135") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "135") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "135") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "135") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "135") (term "1,0,0,1,0,0,0") (ifseqformula "146"))
                                                   (rule "concrete_and_4" (formula "135") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "135") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "135") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "135") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "135") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "135") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "135") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "135") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "135") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "135") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "135") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "135") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "135") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "135") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "135") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "135") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "135") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "135") (term "0,0"))
                                                   (rule "allLeft" (formula "64") (inst "t=add(Z(8(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "64") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "64") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "64") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "64") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                                   (rule "add_literals" (formula "64") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "64") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "64") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "64") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "64") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "64") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "64") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "64") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "64") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0"))
                                                   (rule "commute_or_2" (formula "137"))
                                                   (rule "allLeft" (formula "65") (inst "t=Z(2(1(#)))"))
                                                   (rule "leq_literals" (formula "65") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "65") (term "0"))
                                                   (rule "add_literals" (formula "65") (term "0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "65") (term "0"))
                                                   (rule "mul_literals" (formula "65") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                                                   (rule "add_literals" (formula "65") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0"))
                                                   (rule "mul_literals" (formula "65") (term "1,0"))
                                                   (rule "allLeft" (formula "139") (inst "t=Z(2(1(#)))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_96" (formula "139") (term "0,1,1"))
                                                   (rule "add_literals" (formula "139") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "139") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "139") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "139") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "139") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "139") (term "0"))
                                                   (rule "mul_literals" (formula "139") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "139") (term "0,0"))
                                                   (rule "add_literals" (formula "139") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "139") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "139") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "139") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "139") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "139") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "139") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "139") (term "0"))
                                                   (rule "mul_literals" (formula "139") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "139") (term "0,1") (inst "selectSK=arr_57"))
                                                   (rule "simplifySelectOfAnon" (formula "139"))
                                                   (rule "elementOfFreshLocs" (formula "139") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "139") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "139") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "139") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "139") (term "0,0,1,0,0") (ifseqformula "154"))
                                                   (rule "concrete_not_2" (formula "139") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "139") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "139") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "139") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "139") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "140") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "140") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "140") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "140") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "140") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "140") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "140") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "140") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "140") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "140") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "140") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "139") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "139") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "139") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "139") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "139") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "139") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "139") (term "0,0,1,0,0") (ifseqformula "151"))
                                                   (rule "concrete_and_2" (formula "139") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "139") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "139") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "139") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "139") (term "1,0,0"))
                                                   (rule "eqClose" (formula "139") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "139") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "139") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "139") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "139") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "139") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "139") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "139") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "139") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "139") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "139") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "139") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "139") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "139") (term "0,1,0,0,0") (ifseqformula "148"))
                                                   (rule "concrete_and_2" (formula "139") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "139") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "139") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "139") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "139") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "139") (term "1,0,1,0,0,0") (ifseqformula "150"))
                                                   (rule "concrete_and_4" (formula "139") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "139") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "139") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "139") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "139") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "139") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "139") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "139") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "139") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "139") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "139") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "139") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "139") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "140") (term "0,1") (inst "selectSK=arr_58"))
                                                   (rule "simplifySelectOfAnon" (formula "140"))
                                                   (rule "elementOfFreshLocs" (formula "140") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "140") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "140") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "140") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "140") (term "0,0,1,0,0") (ifseqformula "154"))
                                                   (rule "concrete_not_2" (formula "140") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "140") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "140") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "140") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "140") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "140") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "140") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "140") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "140") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "140") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "140") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "140") (term "1,0,1,0,0") (ifseqformula "154"))
                                                   (rule "concrete_and_4" (formula "140") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "140") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "140") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "140") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "140") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "140") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "140") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "140") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "140") (term "0,1,0,0") (ifseqformula "149"))
                                                   (rule "concrete_and_2" (formula "140") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "140") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "140") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "140") (term "1,0,0"))
                                                   (rule "eqClose" (formula "140") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "140") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "140") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "140") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "140") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "140") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "140") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "140") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "140") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "140") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "140") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "140") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "140") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "140") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "140") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "140") (term "0,0,1,0,0,0") (ifseqformula "154"))
                                                   (rule "concrete_and_2" (formula "140") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "140") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "140") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "140") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "140") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "140") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "140") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "140") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "140") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "140") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "140") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "140") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "140") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "140") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "140") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "140") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "140") (term "0,0"))
                                                   (rule "commute_or" (formula "141"))
                                                   (rule "allLeft" (formula "66") (inst "t=add(Z(8(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "66") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "66") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "66") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "66") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "66") (term "0,0,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "66") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "66") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "66") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "66") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "66") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "66") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "66") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "66") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "66") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "66") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "66") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "66") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "66") (term "0"))
                                                   (rule "allLeft" (formula "143") (inst "t=add(Z(9(#)), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_98" (formula "143") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "143") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "143") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "143") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "143") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "143") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "143") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "143") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "143") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "143") (term "0,0,0"))
                                                   (rule "add_literals" (formula "143") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "143") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "143") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "143") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "143") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "143") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "143") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "143") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "143") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "143") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "143") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "143") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "143") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "143") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "143") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "143") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "143") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "143") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "143") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "143") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "143") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "143") (term "0,1") (inst "selectSK=arr_59"))
                                                   (rule "simplifySelectOfAnon" (formula "143"))
                                                   (rule "elementOfFreshLocs" (formula "143") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "143") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "143") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "143") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "143") (term "0,0,1,0,0") (ifseqformula "158"))
                                                   (rule "concrete_not_2" (formula "143") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "143") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "143") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "143") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "143") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "144") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "144") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "144") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "144") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "144") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "144") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "144") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "144") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "144") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "144") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "144") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "143") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "143") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "143") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "143") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "143") (term "1,0,0,1,0,0") (ifseqformula "158"))
                                                   (rule "concrete_and_4" (formula "143") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "143") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "143") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "143") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "143") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "143") (term "1,0,0"))
                                                   (rule "eqClose" (formula "143") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "143") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "143") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "143") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "143") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "143") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "143") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "143") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "143") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "143") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "143") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "143") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "143") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "143") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "143") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "143") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "143") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "143") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "143") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "143") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "143") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "143") (term "0,0,1,0,0,0") (ifseqformula "152"))
                                                   (rule "concrete_and_2" (formula "143") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "143") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "143") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "143") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "143") (term "1,0,0,1,0,0,0") (ifseqformula "154"))
                                                   (rule "concrete_and_4" (formula "143") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "143") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "143") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "143") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "143") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "143") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "143") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "143") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "143") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "143") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "143") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "143") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "143") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "143") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "144") (term "0,1") (inst "selectSK=arr_60"))
                                                   (rule "simplifySelectOfAnon" (formula "144"))
                                                   (rule "elementOfFreshLocs" (formula "144") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "144") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "144") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "144") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "144") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "144") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "144") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "144") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "144") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "144") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "144") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "144") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "144") (term "1,0,0,1,0,0") (ifseqformula "158"))
                                                   (rule "concrete_and_4" (formula "144") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "144") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "144") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "144") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "144") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "144") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "144") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "144") (term "0,0,1,0,0") (ifseqformula "153"))
                                                   (rule "concrete_and_2" (formula "144") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "144") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "144") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "144") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "144") (term "1,0,0"))
                                                   (rule "eqClose" (formula "144") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "144") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "144") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "144") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "144") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "144") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "144") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "144") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "144") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "144") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "144") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "144") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "144") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "144") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "144") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "144") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "144") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "144") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "144") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "144") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "144") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "144") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "144") (term "1,0,0,1,0,0,0") (ifseqformula "155"))
                                                   (rule "concrete_and_4" (formula "144") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "144") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "144") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "144") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "144") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "144") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "144") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "144") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "144") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "144") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "144") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "144") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "144") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "144") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "144") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "144") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "144") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "144") (term "0,0"))
                                                   (rule "commute_or_2" (formula "145"))
                                                   (rule "allLeft" (formula "67") (inst "t=add(Z(9(#)), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "67") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "67") (term "0,0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "67") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "67") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "67") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "67") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "67") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "67") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "67") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "67") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                   (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "67") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "67") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "67") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "67") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "67") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "67") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "67") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "67") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "67") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "67") (term "0,0,0"))
                                                   (rule "allLeft" (formula "68") (inst "t=Z(3(1(#)))"))
                                                   (rule "add_literals" (formula "68") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "68") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "68") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "68") (term "0"))
                                                   (rule "mul_literals" (formula "68") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                                                   (rule "add_literals" (formula "68") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0"))
                                                   (rule "mul_literals" (formula "68") (term "1,0"))
                                                   (rule "allLeft" (formula "69") (inst "t=add(Z(9(#)),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "69") (term "0,0,2,0,1"))
                                                   (rule "polySimp_homoEq" (formula "69") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "69") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "69") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "69") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                   (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "69") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "69") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "69") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "69") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "69") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "69") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "69") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "69") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "69") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "69") (term "0"))
                                                   (rule "allLeft" (formula "149") (inst "t=Z(3(1(#)))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_100" (formula "149") (term "0,1,1"))
                                                   (rule "add_literals" (formula "149") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "149") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "149") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "149") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "149") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "149") (term "0"))
                                                   (rule "mul_literals" (formula "149") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "149") (term "0,0"))
                                                   (rule "add_literals" (formula "149") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "149") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "149") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "149") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "149") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "149") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "149") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "149") (term "0"))
                                                   (rule "mul_literals" (formula "149") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "149") (term "0,1") (inst "selectSK=arr_61"))
                                                   (rule "simplifySelectOfAnon" (formula "149"))
                                                   (rule "elementOfFreshLocs" (formula "149") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "149") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "149") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "149") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "149") (term "0,0,1,0,0") (ifseqformula "164"))
                                                   (rule "concrete_not_2" (formula "149") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "149") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "149") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "149") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "149") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "150") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "150") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "150") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "150") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "150") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "150") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "150") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "150") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "150") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "150") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "150") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "149") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "149") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "149") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "149") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "149") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "149") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "149") (term "0,0,1,0,0") (ifseqformula "161"))
                                                   (rule "concrete_and_2" (formula "149") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "149") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "149") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "149") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "149") (term "1,0,0"))
                                                   (rule "eqClose" (formula "149") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "149") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "149") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "149") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "149") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "149") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "149") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "149") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "149") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "149") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "149") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "149") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "149") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "149") (term "0,1,0,0,0") (ifseqformula "158"))
                                                   (rule "concrete_and_2" (formula "149") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "149") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "149") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "149") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "149") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "149") (term "0,0,1,0,0,0") (ifseqformula "164"))
                                                   (rule "concrete_and_2" (formula "149") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "149") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "149") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "149") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "149") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "149") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "149") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "149") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "149") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "149") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "149") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "149") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "149") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "150") (term "0,1") (inst "selectSK=arr_62"))
                                                   (rule "simplifySelectOfAnon" (formula "150"))
                                                   (rule "elementOfFreshLocs" (formula "150") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "150") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "150") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "150") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "150") (term "0,0,1,0,0") (ifseqformula "164"))
                                                   (rule "concrete_not_2" (formula "150") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "150") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "150") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "150") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "150") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "150") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "150") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "150") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "150") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "150") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "150") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "150") (term "1,0,1,0,0") (ifseqformula "164"))
                                                   (rule "concrete_and_4" (formula "150") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "150") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "150") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "150") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "150") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "150") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "150") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "150") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "150") (term "0,1,0,0") (ifseqformula "159"))
                                                   (rule "concrete_and_2" (formula "150") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "150") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "150") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "150") (term "1,0,0"))
                                                   (rule "eqClose" (formula "150") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "150") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "150") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "150") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "150") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "150") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "150") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "150") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "150") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "150") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "150") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "150") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "150") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "150") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "150") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "150") (term "1,0,1,0,0,0") (ifseqformula "161"))
                                                   (rule "concrete_and_4" (formula "150") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "150") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "150") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "150") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "150") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "150") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "150") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "150") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "150") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "150") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "150") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "150") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "150") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "150") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "150") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "150") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "150") (term "0,0"))
                                                   (rule "commute_or" (formula "151"))
                                                   (rule "allLeft" (formula "152") (inst "t=add(Z(0(1(#))), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_102" (formula "152") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "152") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "152") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "152") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "152") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "152") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "152") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "152") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "152") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "152") (term "0,0,0"))
                                                   (rule "add_literals" (formula "152") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "152") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "152") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "152") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "152") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "152") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "152") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "152") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "152") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "152") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "152") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "152") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "152") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "152") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "152") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "152") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "152") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "152") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "152") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "152") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "152") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "152") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "152") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "152") (term "0,1") (inst "selectSK=arr_63"))
                                                   (rule "simplifySelectOfAnon" (formula "152"))
                                                   (rule "elementOfFreshLocs" (formula "152") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "152") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "152") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "152") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "152") (term "0,0,1,0,0") (ifseqformula "167"))
                                                   (rule "concrete_not_2" (formula "152") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "152") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "152") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "152") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "152") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "153") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "153") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "153") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "153") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "153") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "153") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "153") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "153") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "153") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "153") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "153") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "152") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "152") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "152") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "152") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "152") (term "0,0,0,1,0,0") (ifseqformula "164"))
                                                   (rule "concrete_and_2" (formula "152") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "152") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "152") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "152") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "152") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "152") (term "1,0,0"))
                                                   (rule "eqClose" (formula "152") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "152") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "152") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "152") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "152") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "152") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "152") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "152") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "152") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "152") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "152") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "152") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "152") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "152") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "152") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "152") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "152") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "152") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "152") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "152") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "152") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "152") (term "0,0,1,0,0,0") (ifseqformula "161"))
                                                   (rule "concrete_and_2" (formula "152") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "152") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "152") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "152") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "152") (term "0,0,0,1,0,0,0") (ifseqformula "167"))
                                                   (rule "concrete_and_2" (formula "152") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "152") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "152") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "152") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "152") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "152") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "152") (term "0,0,0,0"))
                                                   (rule "equalUnique" (formula "152") (term "1,0,0,0,0"))
                                                   (rule "concrete_and_4" (formula "152") (term "0,0,0,0"))
                                                   (rule "concrete_or_2" (formula "152") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "152") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "152") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "152") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "152") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "153") (term "0,1") (inst "selectSK=arr_64"))
                                                   (rule "simplifySelectOfAnon" (formula "153"))
                                                   (rule "elementOfFreshLocs" (formula "153") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "153") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "153") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "153") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "153") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "153") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "153") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "153") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "153") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "153") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "153") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "153") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "153") (term "0,0,0,1,0,0") (ifseqformula "165"))
                                                   (rule "concrete_and_2" (formula "153") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "153") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "153") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "153") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "153") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "153") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "153") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "153") (term "0,0,1,0,0") (ifseqformula "162"))
                                                   (rule "concrete_and_2" (formula "153") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "153") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "153") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "153") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "153") (term "1,0,0"))
                                                   (rule "eqClose" (formula "153") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "153") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "153") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "153") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "153") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "153") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "153") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "153") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "153") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "153") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "153") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "153") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "153") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "153") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "153") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "153") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "153") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "153") (term "1,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "153") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "153") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "153") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "153") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "153") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "153") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "153") (term "1,0,0,1,0,0,0") (ifseqformula "164"))
                                                   (rule "concrete_and_4" (formula "153") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "153") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "153") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "153") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "153") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "153") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "153") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "153") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "153") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "153") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "153") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "153") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "153") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "153") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "153") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "153") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "153") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "153") (term "0,0"))
                                                   (rule "commute_or_2" (formula "154"))
                                                   (rule "allLeft" (formula "70") (inst "t=add(Z(0(1(#))), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "70") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "70") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "70") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "70") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "70") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "70") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "70") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "70") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "70") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "70") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "70") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0"))
                                                   (rule "allLeft" (formula "71") (inst "t=Z(4(1(#)))"))
                                                   (rule "add_literals" (formula "71") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "71") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "71") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "71") (term "0"))
                                                   (rule "mul_literals" (formula "71") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                                                   (rule "add_literals" (formula "71") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "0"))
                                                   (rule "mul_literals" (formula "71") (term "1,0"))
                                                   (rule "allLeft" (formula "157") (inst "t=Z(4(1(#)))"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_104" (formula "157") (term "0,1,1"))
                                                   (rule "add_literals" (formula "157") (term "0,2,0,1"))
                                                   (rule "leq_literals" (formula "157") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "157") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "157") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "157") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "157") (term "0"))
                                                   (rule "mul_literals" (formula "157") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "157") (term "0,0"))
                                                   (rule "add_literals" (formula "157") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "157") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "157") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "157") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "157") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "157") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "157") (term "0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "157") (term "0"))
                                                   (rule "mul_literals" (formula "157") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "157") (term "0,1") (inst "selectSK=arr_65"))
                                                   (rule "simplifySelectOfAnon" (formula "157"))
                                                   (rule "elementOfFreshLocs" (formula "157") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "157") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "157") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "157") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "157") (term "0,0,1,0,0") (ifseqformula "172"))
                                                   (rule "concrete_not_2" (formula "157") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "157") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "157") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "157") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "157") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "158") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "158") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "158") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "158") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "158") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "158") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "158") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "158") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "158") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "158") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "158") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "157") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "157") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "157") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "157") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "157") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "157") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "157") (term "0,0,1,0,0") (ifseqformula "169"))
                                                   (rule "concrete_and_2" (formula "157") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "157") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "157") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "157") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "157") (term "1,0,0"))
                                                   (rule "eqClose" (formula "157") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "157") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "157") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "157") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "157") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "157") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "157") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "157") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "157") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "157") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "157") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "157") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "157") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "157") (term "0,1,0,0,0") (ifseqformula "166"))
                                                   (rule "concrete_and_2" (formula "157") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "157") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "157") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "157") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "157") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "157") (term "0,0,1,0,0,0") (ifseqformula "172"))
                                                   (rule "concrete_and_2" (formula "157") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "157") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "157") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "157") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "157") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "157") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "157") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "157") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "157") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "157") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "157") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "157") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "157") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "158") (term "0,1") (inst "selectSK=arr_66"))
                                                   (rule "simplifySelectOfAnon" (formula "158"))
                                                   (rule "elementOfFreshLocs" (formula "158") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "158") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "158") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "158") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "158") (term "0,1,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "158") (term "1,1,0,0"))
                                                   (rule "concrete_and_4" (formula "158") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "158") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "158") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "158") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "158") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "158") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "158") (term "0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "158") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "158") (term "0,0,1,0,0") (ifseqformula "170"))
                                                   (rule "concrete_and_2" (formula "158") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "158") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "158") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "158") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "158") (term "1,0,0"))
                                                   (rule "leq_literals" (formula "158") (term "1,0,1,0,0"))
                                                   (rule "concrete_and_3" (formula "158") (term "0,1,0,0"))
                                                   (rule "eqSymm" (formula "158") (term "0,1,0,0"))
                                                   (rule "replace_known_right" (formula "158") (term "0,1,0,0") (ifseqformula "167"))
                                                   (rule "concrete_and_2" (formula "158") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "158") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "158") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "158") (term "1,0,0"))
                                                   (rule "eqClose" (formula "158") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "158") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "158") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "158") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "158") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "158") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "158") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "158") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "158") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "158") (term "1,1,0,0"))
                                                   (rule "elementOfUnion" (formula "158") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "158") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "158") (term "1,0,1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "158") (term "0,1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "158") (term "0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "158") (term "1,0,1,0,0,0") (ifseqformula "169"))
                                                   (rule "concrete_and_4" (formula "158") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "158") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "158") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "158") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "158") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "158") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "158") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "158") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "158") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "158") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "158") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "158") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "158") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "158") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "158") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "158") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "158") (term "0,0"))
                                                   (rule "commute_or" (formula "159"))
                                                   (rule "allLeft" (formula "72") (inst "t=add(Z(0(1(#))),
    int::select(anon_heap_LOOP<<anonHeapFunction>>,
                self,
                java.util.TimSort::$stackSize))"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "72") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "72") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "72") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
                                                   (rule "add_literals" (formula "72") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "72") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "72") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "72") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "72") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "72") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "72") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "72") (term "0"))
                                                   (rule "allLeft" (formula "73") (inst "t=add(Z(1(1(#))), arr_18<<selectSK>>)"))
                                                   (rule "polySimp_addAssoc" (formula "73") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "73") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "73") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "73") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "73") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "73") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "73") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "73") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "73") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "73") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                                                   (rule "add_literals" (formula "73") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "73") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "73") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "73") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "73") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "73") (term "0,0,0"))
                                                   (rule "allLeft" (formula "162") (inst "t=add(Z(1(1(#))), arr_18<<selectSK>>)"))
                                                   (rule "replaceKnownSelect_taclet21001100011000101_106" (formula "162") (term "0,1,1"))
                                                   (rule "polySimp_homoEq" (formula "162") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "162") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "162") (term "0,2,0,1,0,0,1"))
                                                   (rule "add_literals" (formula "162") (term "0,0,2,0,1,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "162") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "162") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "162") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "162") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "162") (term "0,0,0"))
                                                   (rule "add_literals" (formula "162") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "162") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "162") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "162") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "162") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "162") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "162") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "162") (term "0,0,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "162") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "162") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "162") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "162") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "162") (term "1,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "162") (term "0,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "162") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "162") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "162") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "162") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "162") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "162") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "162") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "162") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "162") (term "1,1,1,0"))
                                                   (rule "pullOutSelect" (formula "162") (term "0,1") (inst "selectSK=arr_67"))
                                                   (rule "simplifySelectOfAnon" (formula "162"))
                                                   (rule "elementOfFreshLocs" (formula "162") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "162") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "162") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "162") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "162") (term "0,0,1,0,0") (ifseqformula "177"))
                                                   (rule "concrete_not_2" (formula "162") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "162") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "162") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "concrete_not_1" (formula "162") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "162") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "163") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "163") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "163") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "163") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "163") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "163") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "163") (term "1,1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "163") (term "0,1,1"))
                                                   (rule "polySimp_mulComm0" (formula "163") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "163") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "163") (term "0,1,1"))
                                                   (rule "elementOfUnion" (formula "162") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "162") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "162") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "162") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "162") (term "1,0,0,1,0,0") (ifseqformula "177"))
                                                   (rule "concrete_and_4" (formula "162") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "162") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "162") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "162") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "162") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "162") (term "1,0,0"))
                                                   (rule "eqClose" (formula "162") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "162") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "162") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "162") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "162") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "162") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "162") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "162") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "162") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "162") (term "0,1,0,0"))
                                                   (rule "times_zero_2" (formula "162") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "162") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "162") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "162") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "162") (term "1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "162") (term "1,1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "162") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "162") (term "1,1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "162") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "162") (term "1,0,1,0,0"))
                                                   (rule "elementOfUnion" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "162") (term "1,0,0,0"))
                                                   (rule "replace_known_right" (formula "162") (term "0,0,1,0,0,0") (ifseqformula "171"))
                                                   (rule "concrete_and_2" (formula "162") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "162") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "162") (term "1,0,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "162") (term "0,0,1,0,0,0"))
                                                   (rule "replace_known_right" (formula "162") (term "1,0,0,1,0,0,0") (ifseqformula "173"))
                                                   (rule "concrete_and_4" (formula "162") (term "0,0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "162") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "162") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "162") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "162") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "162") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfUnion" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "162") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "162") (term "1,1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "162") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "162") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "162") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "162") (term "1,0,0,0"))
                                                   (rule "concrete_and_4" (formula "162") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "162") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "163") (term "0,1") (inst "selectSK=arr_68"))
                                                   (rule "simplifySelectOfAnon" (formula "163"))
                                                   (rule "elementOfFreshLocs" (formula "163") (term "1,0,0"))
                                                   (rule "equalUnique" (formula "163") (term "0,1,0,0,0"))
                                                   (rule "concrete_not_2" (formula "163") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "163") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "163") (term "0,0,1,0,0") (ifseqformula "177"))
                                                   (rule "concrete_not_2" (formula "163") (term "0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "163") (term "1,0,0"))
                                                   (rule "replace_known_left" (formula "163") (term "0,1,0,0") (ifseqformula "8"))
                                                   (rule "concrete_not_1" (formula "163") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "163") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "163") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "163") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "163") (term "0,0,1,0,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "163") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "163") (term "1,0,0,1,0,0") (ifseqformula "177"))
                                                   (rule "concrete_and_4" (formula "163") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "163") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "163") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "163") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "163") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "163") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "163") (term "0,0,1,0,0"))
                                                   (rule "replace_known_right" (formula "163") (term "0,0,1,0,0") (ifseqformula "172"))
                                                   (rule "concrete_and_2" (formula "163") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "163") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "163") (term "0,0"))
                                                   (rule "elementOfUnion" (formula "163") (term "0,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "163") (term "1,0,0"))
                                                   (rule "eqClose" (formula "163") (term "0,0,1,0,0"))
                                                   (rule "concrete_and_1" (formula "163") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "163") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "163") (term "1,0,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "163") (term "1,0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "163") (term "0,1,0,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "163") (term "0,1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "163") (term "0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "163") (term "0,0,0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "163") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "163") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "163") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "163") (term "0,0,0,1,0,0"))
                                                   (rule "selectOfAnon" (formula "180") (term "2,0,1,0,0,0"))
                                                   (rule "elementOfFreshLocs" (formula "180") (term "1,0,2,0,1,0,0,0"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,0,2,0,1,0,0,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,0,0,2,0,1,0,0,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "180") (term "1,0,0,0,0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "180") (term "1,0,0,0,0,0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "180") (term "0,0,0,0,0,0,0,0,0,2,0,1,0,0,0"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,2,0,1,0,0,0") (inst "iv=iv"))
                                                   (rule "selectOfAnon" (formula "165") (term "0,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "165") (term "1,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "selectOfAnon" (formula "165") (term "0,1,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "165") (term "1,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "selectOfAnon" (formula "180") (term "0,1,0,1"))
                                                   (rule "elementOfFreshLocs" (formula "180") (term "1,0,0,1,0,1"))
                                                   (rule "selectOfAnon" (formula "165") (term "1,1,1,0"))
                                                   (rule "elementOfFreshLocs" (formula "165") (term "1,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "1,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "1,0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "0,0,0,0,0,0,0,0,0,1,1,1,0"))
                                                   (rule "selectOfAnon" (formula "79") (term "2,0"))
                                                   (rule "elementOfFreshLocs" (formula "79") (term "1,0,2,0"))
                                                   (rule "elementOfUnion" (formula "79") (term "0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "79") (term "1,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "79") (term "0,0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,0,1,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfUnion" (formula "165") (term "0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfSingleton" (formula "165") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,0,0,1,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "79") (term "0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "79") (term "0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "79") (term "0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfUnion" (formula "79") (term "0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "79") (term "1,0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfSingleton" (formula "79") (term "0,0,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "79") (term "1,0,0,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "79") (term "1,0,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfSingleton" (formula "79") (term "1,0,0,0,0,0,0,0,2,0"))
                                                   (rule "elementOfArrayRange" (formula "79") (term "1,0,0,0,0,2,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,2,0,1,0,0,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,0,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "1,0,0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "1,1,0,0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,1,1,0,0,0,0,0,0,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "0,1,1,0,0,0,0,0,0,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,1,0,0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "0,0,1,0,0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "0,0,0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "1,0,1,0,0,0,0,0,0,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,1,0,1") (inst "iv=iv"))
                                                   (rule "selectOfAnon" (formula "180") (term "0,1,1,0,1"))
                                                   (rule "elementOfFreshLocs" (formula "180") (term "1,0,0,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,0,1,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "1,0,0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "1,1,0,0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "0,1,1,0,0,0,0,0,0,1,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,1,0,0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "0,0,1,0,0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "1,0,1,0,0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "0,0,0,0,0,0,0,1,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,1,1,0,0,0,0,0,0,1,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,1,1,0,1") (inst "iv=iv"))
                                                   (rule "selectOfAnon" (formula "180") (term "1,1,1,0,1"))
                                                   (rule "elementOfFreshLocs" (formula "180") (term "1,0,1,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,0,1,1,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "1,0,0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfUnion" (formula "180") (term "1,1,0,0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "0,1,1,0,0,0,0,0,1,1,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "180") (term "0,1,0,0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "0,0,1,0,0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "1,0,1,0,0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfSingleton" (formula "180") (term "0,0,0,0,0,0,1,1,1,0,1"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,0,0,0,1,1,1,0,1") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "163") (term "0,0,0"))
                                                   (rule "elementOfArrayRange" (formula "163") (term "1,0,0,0") (inst "iv=iv"))
                                                   (rule "elementOfUnion" (formula "163") (term "0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "163") (term "1,0,0,0,0"))
                                                   (rule "elementOfUnion" (formula "163") (term "0,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "163") (term "1,0,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "163") (term "0,0,0,0,0,0"))
                                                   (rule "elementOfArrayRange" (formula "165") (term "1,0,0,0,0,1,1,0") (inst "iv=iv"))
                                                   (rule "elementOfArrayRange" (formula "180") (term "1,1,1,0,0,0,0,0,1,1,1,0,1") (inst "iv=iv"))
                                                   (opengoal " ")
                                                )
                                             )
                                          )
                                          (branch "Null Reference (x_arr_12 = null)"
                                             (rule "false_right" (formula "72"))
                                             (rule "simplifyUpdate2" (formula "1"))
                                             (rule "applyOnRigidFormula" (formula "1"))
                                             (rule "applyOnPV" (formula "1") (term "0"))
                                             (rule "simplifyUpdate1" (formula "1") (term "1"))
                                             (rule "close" (formula "70") (ifseqformula "1"))
                                          )
                                          (branch "Index Out of Bounds (x_arr_12 != null, but x_27 Out of Bounds!)"
                                             (rule "false_right" (formula "72"))
                                             (rule "simplifyUpdate2" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "simplifyUpdate2" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "applyOnRigidFormula" (formula "1"))
                                             (rule "simplifyUpdate2" (formula "1") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "63"))
                                             (rule "simplifyUpdate1" (formula "63") (term "1"))
                                             (rule "applyOnPV" (formula "63") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                             (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                             (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                             (rule "applyOnPV" (formula "1") (term "1,0"))
                                             (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                             (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                             (rule "applyOnPV" (formula "1") (term "0,1"))
                                             (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                                             (rule "applyOnPV" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                             (rule "concrete_and_2" (formula "1") (term "1"))
                                             (rule "concrete_or_4" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "42"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Null Reference (x_arr_10 = null)"
                                          (rule "false_right" (formula "72"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "applyOnRigidFormula" (formula "1"))
                                          (rule "applyOnPV" (formula "1") (term "0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1"))
                                          (rule "close" (formula "70") (ifseqformula "1"))
                                       )
                                       (branch "Index Out of Bounds (x_arr_10 != null, but n Out of Bounds!)"
                                          (rule "false_right" (formula "72"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "applyOnRigidFormula" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "1") (term "1"))
                                          (rule "applyOnRigidFormula" (formula "63"))
                                          (rule "simplifyUpdate1" (formula "63") (term "1"))
                                          (rule "applyOnPV" (formula "63") (term "0"))
                                          (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                          (rule "applyOnPV" (formula "1") (term "1,0"))
                                          (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                          (rule "applyOnPV" (formula "1") (term "0,1"))
                                          (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                                          (rule "applyOnPV" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (rule "concrete_and_2" (formula "1") (term "0"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_and_2" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "Null Reference (x_arr_9 = null)"
                                 (rule "false_right" (formula "65"))
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "applyOnRigidFormula" (formula "1"))
                                 (rule "applyOnPV" (formula "1") (term "0"))
                                 (rule "simplifyUpdate1" (formula "1") (term "1"))
                                 (rule "close" (formula "63") (ifseqformula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_9 != null, but x_22 Out of Bounds!)"
                                 (rule "false_right" (formula "65"))
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "applyOnRigidFormula" (formula "1"))
                                 (rule "simplifyUpdate2" (formula "1") (term "1"))
                                 (rule "applyOnRigidFormula" (formula "56"))
                                 (rule "applyOnPV" (formula "56") (term "0"))
                                 (rule "simplifyUpdate1" (formula "56") (term "1"))
                                 (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                 (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                 (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                 (rule "applyOnPV" (formula "1") (term "1,0"))
                                 (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                 (rule "applyOnPV" (formula "1") (term "0,1"))
                                 (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                 (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                                 (rule "applyOnPV" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "15"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (rule "concrete_and_2" (formula "1") (term "1"))
                                 (rule "concrete_or_4" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "1"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "inEqSimp_homoInEq1" (formula "38"))
                                 (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0"))
                                 (rule "leq_literals" (formula "38"))
                                 (rule "closeFalse" (formula "38"))
                              )
                           )
                           (branch "Null Reference (x_arr_7 = null)"
                              (rule "false_right" (formula "65"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "applyOnPV" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1"))
                              (rule "close" (formula "63") (ifseqformula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_7 != null, but n Out of Bounds!)"
                              (rule "false_right" (formula "65"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1") (term "1"))
                              (rule "applyOnRigidFormula" (formula "56"))
                              (rule "applyOnPV" (formula "56") (term "0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1"))
                              (rule "applyOnRigidFormula" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                              (rule "applyOnPV" (formula "1") (term "1,0"))
                              (rule "applyOnRigidFormula" (formula "1") (term "1"))
                              (rule "applyOnPV" (formula "1") (term "0,1"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                              (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                              (rule "applyOnPV" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "15"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (rule "concrete_and_2" (formula "1") (term "1"))
                              (rule "concrete_or_4" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "1"))
                              (rule "andLeft" (formula "38"))
                              (rule "inEqSimp_homoInEq1" (formula "38"))
                              (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                              (rule "add_literals" (formula "38") (term "1,1,0"))
                              (rule "times_zero_1" (formula "38") (term "1,0"))
                              (rule "add_zero_right" (formula "38") (term "0"))
                              (rule "leq_literals" (formula "38"))
                              (rule "closeFalse" (formula "38"))
                           )
                        )
                        (branch "Null Reference (x_arr_6 = null)"
                           (rule "false_right" (formula "65"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "close" (formula "63") (ifseqformula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_6 != null, but x_18 Out of Bounds!)"
                           (rule "false_right" (formula "65"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "simplifyUpdate2" (formula "1") (term "1"))
                           (rule "applyOnRigidFormula" (formula "56"))
                           (rule "applyOnPV" (formula "56") (term "0"))
                           (rule "simplifyUpdate1" (formula "56") (term "1"))
                           (rule "applyOnRigidFormula" (formula "1") (term "0"))
                           (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                           (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                           (rule "applyOnPV" (formula "1") (term "1,0"))
                           (rule "applyOnRigidFormula" (formula "1") (term "1"))
                           (rule "applyOnPV" (formula "1") (term "0,1"))
                           (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                           (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                           (rule "applyOnPV" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "15"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                           (rule "concrete_and_2" (formula "1") (term "1"))
                           (rule "concrete_or_4" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "38"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
               (branch "Null Reference (x_arr_4 = null)"
                  (rule "false_right" (formula "57"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "close" (formula "55") (ifseqformula "1"))
               )
               (branch "Index Out of Bounds (x_arr_4 != null, but x_13 Out of Bounds!)"
                  (rule "false_right" (formula "57"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1") (term "1"))
                  (rule "applyOnRigidFormula" (formula "48"))
                  (rule "simplifyUpdate1" (formula "48") (term "1"))
                  (rule "applyOnPV" (formula "48") (term "0"))
                  (rule "applyOnRigidFormula" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                  (rule "applyOnPV" (formula "1") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                  (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "add_zero_left" (formula "1") (term "0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "14"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (rule "concrete_and_2" (formula "1") (term "1"))
                  (rule "concrete_or_4" (formula "1"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "34"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr_2 = null)"
               (rule "false_right" (formula "57"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "close" (formula "55") (ifseqformula "1"))
            )
            (branch "Index Out of Bounds (x_arr_2 != null, but n Out of Bounds!)"
               (rule "false_right" (formula "57"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate2" (formula "1") (term "1"))
               (rule "applyOnRigidFormula" (formula "48"))
               (rule "simplifyUpdate1" (formula "48") (term "1"))
               (rule "applyOnPV" (formula "48") (term "0"))
               (rule "applyOnRigidFormula" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1,0"))
               (rule "simplifyUpdate1" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0,1"))
               (rule "simplifyUpdate1" (formula "1") (term "1,1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "14"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (rule "concrete_and_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "1"))
               (rule "andLeft" (formula "34"))
               (rule "inEqSimp_homoInEq1" (formula "34"))
               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
               (rule "add_literals" (formula "34") (term "1,1,0"))
               (rule "times_zero_1" (formula "34") (term "1,0"))
               (rule "add_zero_right" (formula "34") (term "0"))
               (rule "leq_literals" (formula "34"))
               (rule "closeFalse" (formula "34"))
            )
         )
         (branch "Null Reference (x_arr_1 = null)"
            (rule "false_right" (formula "57"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "close" (formula "55") (ifseqformula "1"))
         )
         (branch "Index Out of Bounds (x_arr_1 != null, but x_9 Out of Bounds!)"
            (rule "false_right" (formula "57"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "48"))
            (rule "simplifyUpdate1" (formula "48") (term "1"))
            (rule "applyOnPV" (formula "48") (term "0"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "simplifyUpdate1" (formula "1") (term "1,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "14"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
            (rule "concrete_and_2" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "34"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if x_1 false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "57"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "47"))
      (rule "applyOnPV" (formula "47") (term "0"))
      (rule "simplifyUpdate1" (formula "47") (term "1"))
      (rule "boolean_equal" (formula "47"))
      (rule "closeTrue" (formula "47"))
   )
)
(branch "Use Case"
   (opengoal " ")
)
)

}
