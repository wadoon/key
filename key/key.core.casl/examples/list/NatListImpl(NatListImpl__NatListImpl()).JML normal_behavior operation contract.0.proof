\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Mar 09 19:06:42 CET 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , floatRules-floatRules\\:strictfpOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\include "reverse.key",  "additional-proofs.key";

\proofObligation "#Proof Obligation Settings
#Wed Mar 09 19:06:42 CET 2022
contract=NatListImpl[NatListImpl\\:\\:NatListImpl()].JML normal_behavior operation contract.0
name=NatListImpl[NatListImpl\\:\\:NatListImpl()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "hannes" ) (keyVersion "6bf67feba6"))

(autoModeTime "1173")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "3") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "3") (term "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "self_25"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=n"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "n"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "3"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=n_1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "n_1"))
(rule "allocateInstance" (formula "3"))
 (builtin "One Step Simplification" (formula "4"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallWithinClass" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute_this" (formula "6"))
 (builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "6") (term "1"))
(rule "methodCallReturn" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute_this" (formula "6"))
 (builtin "One Step Simplification" (formula "6"))
(rule "eval_order_access4_this" (formula "6") (term "1") (inst "#v1=n_arr"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "n_arr"))
(rule "arrayCreation" (formula "6") (term "1") (inst "#v0=n_arr_1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "n_arr_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "dim0"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "less_literals" (formula "6") (term "0,0,1,0"))
 (builtin "One Step Simplification" (formula "6"))
(rule "ifSplit" (formula "6"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=n_arr_2"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "n_arr_2"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "6") (term "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=n_arr_3"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "n_arr_3"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "6") (term "1"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "allocateInstanceWithLength" (formula "6"))
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1"))
   (rule "blockEmpty" (formula "9") (term "1"))
   (rule "assignment" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "wellFormedStoreObject" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "wellFormedStorePrimitive" (formula "1") (term "0"))
   (rule "wellFormedCreate" (formula "1") (term "0"))
   (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
   (rule "castDel" (formula "1") (term "1,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
   (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "methodCall" (formula "10"))
   (branch "Normal Execution (newObject != null )"
      (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "assignment_write_attribute_this" (formula "10"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallWithinClass" (formula "10") (term "1"))
      (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "arrayInitialisation" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_elimSub" (formula "10") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "2,1,0,1,0"))
      (rule "applyEq" (formula "10") (term "1,2,1,0,1,0") (ifseqformula "1"))
      (rule "add_literals" (formula "10") (term "2,1,0,1,0"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "blockEmpty" (formula "10") (term "1"))
      (rule "assignment_write_attribute_this" (formula "10"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallReturnIgnoreResult" (formula "10") (term "1"))
      (rule "blockEmpty" (formula "10") (term "1"))
      (rule "methodCallReturn" (formula "10") (term "1"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "blockEmpty" (formula "10") (term "1"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "blockEmpty" (formula "10") (term "1"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "assignment_write_attribute_this" (formula "10"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "blockEmpty" (formula "10") (term "1"))
      (rule "assignment_write_attribute" (formula "10"))
      (branch "Normal Execution (self_25 != null)"
          (builtin "One Step Simplification" (formula "10"))
         (rule "tryEmpty" (formula "10") (term "1"))
         (rule "emptyModality" (formula "10") (term "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "eqSymm" (formula "10") (term "1,0,0,1"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "pullOutSelect" (formula "10") (term "0,0,0,0") (inst "selectSK=NatListImpl_a_0"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "11") (term "0,0,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "pullOutSelect" (formula "10") (term "0,0,0,1,1,0") (inst "selectSK=NatListImpl_impl_0"))
         (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfMemset" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfCreate" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "len_nil" (formula "10") (term "0,0,1,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "commuteUnion" (formula "10") (term "1,0,0"))
         (rule "JML_represents_clause_for_INatList_footprint" (formula "10") (term "0,0,1,0") (ifseqformula "3"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "0,1,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "0,1,0,0,0,1,0"))
         (rule "subsetUnionLeft" (formula "10") (term "0,1,0"))
         (rule "subsetSingletonLeft" (formula "10") (term "1,0,1,0"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
         (rule "subsetUnionLeft" (formula "10") (term "0,1,0"))
         (rule "subsetSingletonLeft" (formula "10") (term "0,0,1,0"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
         (rule "JML_represents_clause_for_INatList_footprint" (formula "10") (term "2,0,0,0,0,1") (ifseqformula "3"))
         (rule "elementOfUnion" (formula "10") (term "0,0,0,0,1"))
         (rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1"))
         (rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,0,1"))
         (rule "JML_represents_clause_for_INatList_footprint" (formula "10") (term "0,0,0") (ifseqformula "3"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "0,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "0,1,0,0,0,0"))
         (rule "subsetUnionLeft" (formula "10") (term "0,0"))
         (rule "subsetSingletonLeft" (formula "10") (term "1,0,0"))
         (rule "subsetUnionLeft" (formula "10") (term "0,0,0"))
         (rule "subsetSingletonLeft" (formula "10") (term "0,0,0,0"))
         (rule "elementOfUnion" (formula "10") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
         (rule "elementOfUnion" (formula "10") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
         (rule "Class_invariant_axiom_for_NatListImpl" (formula "10") (term "1,1,0") (inst "x=x_1") (inst "x_0=x_0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "eqSymm" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,1,0,0,1,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "0,1,1,0,0,1,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "0,1,1,0,0,1,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "1,0,0,1,0,1,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "1,0,0,1,0,1,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "1,0,0,1,0,1,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "0,1,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "0,1,1,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,1,0,0,1,0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "0,1,1,0,0,1,0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "0,1,1,0,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "replace_known_right" (formula "10") (term "0,1,0,0,0,0,0,1,1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,1,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,1,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,1,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet001_4" (formula "10") (term "0,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_7" (formula "10") (term "0,0,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "1,0,1,0,1,0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_2" (formula "10") (term "1,0,1,0,1,0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_3" (formula "10") (term "1,0,1,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,1,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_4" (formula "10") (term "0,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_7" (formula "10") (term "0,0,1,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,1,0,0,1,1,0"))
         (rule "len_nil" (formula "10") (term "0,1,1,1,0"))
         (rule "qeq_literals" (formula "10") (term "1,1,1,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,0,0,1,1,0"))
         (rule "len_nil" (formula "10") (term "0,1,1,1,0"))
         (rule "eqSymm" (formula "10") (term "1,1,1,0"))
         (rule "replace_known_left" (formula "10") (term "1,1,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,1,1,0,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet001_4" (formula "10") (term "0,1,1,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_7" (formula "10") (term "0,1,1,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "applyEq" (formula "10") (term "0,1,0,0,1,1,0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "10") (term "1,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0,1,1,1,0") (ifseqformula "1"))
         (rule "times_zero_2" (formula "10") (term "1,0,0,1,0,0,1,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1,1,1,0"))
         (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "times_zero_2" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
         (rule "nonNull" (formula "10") (term "0,0,1,1,0") (inst "i=i"))
         (rule "sub_literals" (formula "10") (term "2,1,0,1,1,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "greater_literals" (formula "10") (term "0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,1,1,0"))
         (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,0,0,1,1,0"))
         (rule "nnf_imp2or" (formula "10") (term "0,1,1,1,0"))
         (rule "nnf_imp2or" (formula "10") (term "0,1,0,1,1,0"))
         (rule "nnf_imp2or" (formula "10") (term "0,0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,1,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "10") (term "0,1,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "JML_represents_clause_for_INatList_footprint" (formula "10") (term "1,1,0,0") (ifseqformula "3"))
         (rule "commute_and" (formula "10") (term "0"))
         (rule "associativeLawUnion" (formula "10") (term "1,1,0"))
         (rule "associativeLawUnion" (formula "10") (term "0,1,1,0"))
         (rule "cut_direct" (formula "10") (term "0,0"))
         (branch "CUT: n_arr_3.* ⊆ freshLocs(heap) TRUE"
             (builtin "One Step Simplification" (formula "11"))
            (rule "cut_direct" (formula "11") (term "0"))
            (branch "CUT: n_arr_3.* ⊆ freshLocs(heap) ∪ {(n_1, NatListImpl::$a)} ∪ n_1.a.* ∪ {(n_1, NatListImpl::$impl)} TRUE"
                (builtin "One Step Simplification" (formula "12"))
               (rule "allRight" (formula "12") (inst "sk=f_0"))
               (rule "allRight" (formula "12") (inst "sk=o_0"))
               (rule "orRight" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "17"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "14"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
               (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_8"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "commute_and" (formula "23"))
               (rule "commute_and" (formula "21"))
               (rule "commute_and" (formula "9") (term "0,0"))
               (rule "commute_and" (formula "8") (term "0,0"))
               (rule "commute_and" (formula "6") (term "0,0"))
               (rule "commute_and" (formula "5") (term "0,0"))
               (rule "commute_and" (formula "4") (term "0,0"))
               (rule "commute_and" (formula "3") (term "0,0"))
               (rule "commute_and" (formula "2") (term "0,0"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "commute_and_2" (formula "7") (term "0,1,0,0,0"))
               (rule "inEqSimp_and_contradInEq1" (formula "7") (term "0,1,0,0,0"))
               (rule "qeq_literals" (formula "7") (term "1,0,1,0,0,0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
               (rule "hideAuxiliaryEq" (formula "7"))
               (rule "cut_direct" (formula "23") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "false_right" (formula "24"))
                  (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "1"))
                  (rule "eqSymm" (formula "21") (term "1"))
                  (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "false_right" (formula "21"))
                  (rule "applyEqRigid" (formula "8") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "8") (term "1,0,0"))
                  (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "4") (term "1,0,0"))
                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "1"))
                  (rule "eqSymm" (formula "20") (term "1"))
                  (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "false_right" (formula "20"))
                  (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "5") (term "1,0,0"))
                  (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "4") (term "1,0,0"))
                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "3") (term "1,0,0"))
                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "4") (term "1,0,0"))
                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2") (term "1,0,0"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "CUT: o_0 = null FALSE"
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "notRight" (formula "24"))
                  (rule "ifthenelse_split" (formula "2") (term "0"))
                  (branch "f_0 = java.lang.Object::<created> ∧ o_0 = n_1 TRUE"
                     (rule "andLeft" (formula "2"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "9") (term "0,0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                     (rule "hideAuxiliaryEq" (formula "9"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "19") (ifseqformula "1"))
                  )
                  (branch "f_0 = java.lang.Object::<created> ∧ o_0 = n_1 FALSE"
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = n_1 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")))
                        (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                        (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                        (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "17")))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "12"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "20"))
                        (rule "sortsDisjointModuloNull" (formula "20"))
                        (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "false_right" (formula "20"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "17") (ifseqformula "1"))
                     )
                     (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = n_1 FALSE"
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = n_arr_3 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "false_right" (formula "21"))
                           (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "false_right" (formula "15"))
                           (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "false_right" (formula "21"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "16") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = n_arr_3 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = n_arr_3 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "3"))
                              (rule "eqSymm" (formula "18") (term "1"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "1"))
                              (rule "replace_known_right" (formula "18") (term "1,1") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                              (rule "false_right" (formula "18"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "false_right" (formula "17"))
                              (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "9"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "false_right" (formula "11"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "15"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "11") (ifseqformula "1"))
                           )
                           (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = n_arr_3 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = n_arr_3 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "false_right" (formula "15"))
                                 (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "false_right" (formula "20"))
                                 (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "14") (ifseqformula "1"))
                              )
                              (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = n_arr_3 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = n_arr_3 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "false_right" (formula "22"))
                                    (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "false_right" (formula "20"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
                                    (rule "false_right" (formula "15"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "15") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = n_arr_3 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "CUT: n_arr_3.* ⊆ freshLocs(heap) ∪ {(n_1, NatListImpl::$a)} ∪ n_1.a.* ∪ {(n_1, NatListImpl::$impl)} FALSE"
                (builtin "One Step Simplification" (formula "12"))
               (rule "false_right" (formula "12"))
               (rule "subsetToElementOfRight" (formula "11") (inst "ov=ov") (inst "fv=fv"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "allRight" (formula "11") (inst "sk=ov_0"))
               (rule "allRight" (formula "11") (inst "sk=fv_0"))
               (rule "impRight" (formula "11"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
               (rule "elementOfUnion" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "elementOfSingleton" (formula "13"))
               (rule "eqSymm" (formula "13") (term "0"))
               (rule "sortsDisjointModuloNull" (formula "13") (term "0"))
               (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "9")))
               (rule "false_right" (formula "13"))
               (rule "elementOfUnion" (formula "12"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "eqSymm" (formula "13"))
               (rule "elementOfUnion" (formula "12"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
               (rule "closeTrue" (formula "12"))
            )
         )
         (branch "CUT: n_arr_3.* ⊆ freshLocs(heap) FALSE"
             (builtin "One Step Simplification" (formula "11"))
            (rule "false_right" (formula "11"))
            (rule "subsetToElementOfRight" (formula "10") (inst "ov=ov") (inst "fv=fv"))
             (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")) (ifInst ""  (formula "6")))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch "Null Reference (self_25 = null)"
         (rule "false_right" (formula "11"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (newObject = null)"
       (builtin "One Step Simplification" (formula "11"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
