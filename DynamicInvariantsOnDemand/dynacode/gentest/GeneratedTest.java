/** This is a test driver generated by KeY 2.7 (internal: 90bb886cd7b78027c8f6703803461f09e5699bb9) (www.key-project.org). 
 * Possible use cases:
 *  Use Case 1. Using JUnit 4:
 *        javac -cp .:PATH_TO_JUNIT4_JAR *.java
 *        java  -cp .:PATH_TO_JUNIT4_JAR:PATH_TO_HAMCREST_JAR org.junit.runner.JUnitCore GeneratedTest
 *  Use Case 2. Use JML runtime checker: 
 *      Compile this file and and execute the main method with a JML runtime checker. On linux you can use the built-in scripts:
 *        ./compileWithOpenJML.sh
 *        ./executeWithOpenJML.sh GeneratedTest
 *  Use Case 3. Use simply a program debugger to follow and understand the execution of the program.
 * @author Christoph Gladisch
 * @author Mihai Herda
 */
package gentest;
import dynacode.DynaCode;
import genmethod.GeneratedMethodHelper;
import genmethod.GeneratedMethodReturnObject;
import genmethod.IGeneratedMethod;
import helperfunctions.HelperFunctions;
import java.util.ArrayList;
import java.util.HashMap;
public class GeneratedTest implements IGeneratedTest { 
private static HashMap<String, ArrayList<Integer>> varTraces = new HashMap<String, ArrayList<Integer>>();
IGeneratedMethod generatedMethod = GeneratedMethodHelper.getGeneratedMethod();

 public GeneratedTest(){}

public HashMap<String, ArrayList<Integer>> callGeneratedTest(){
   GeneratedTest testSuiteObject;
   testSuiteObject=new GeneratedTest ();

   testSuiteObject.testcode0();
    return varTraces;
 }

  //Test Case for NodeNr: 2258
 public void  testcode0(){
   //Test preamble: creating objects and intializing test data
   int r_0 = (int)136;
   int q_0 = (int)-72;
   boolean measuredByEmpty = (boolean)true;
   int x = (int)64;
   int y = (int)1;

   //Other variables

   //Calling the method under test   
   ArrayList<Integer> inputVars = new ArrayList<Integer>();
   inputVars.add(y);
   inputVars.add(q_0);
   inputVars.add(r_0);
   HashMap<String, ArrayList<Integer>> traces = generatedMethod.callGeneratedMethod(inputVars);
   varTraces = HelperFunctions.mergeMapsKeyWise(varTraces, traces);
 }


}