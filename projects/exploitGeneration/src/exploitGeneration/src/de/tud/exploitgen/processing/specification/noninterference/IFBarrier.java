/**
 * 
 */
package de.tud.exploitgen.processing.specification.noninterference;

import java.util.List;

/**
 * this class represents the forbidden information flow from source (high variables) to destination (low variables) 
 * @author Huy Do
 *
 */
public class IFBarrier {
   private List<String> source;  //high variables
   private List<String> sink;   //low variable
   /**
    * @param source
    * @param destination
    */
   public IFBarrier(List<String> source, List<String> destination) {
      super();
      this.source = source;
      this.sink = destination;
   }
   /**
    * @return the source
    */
   public List<String> getSource() {
      return source;
   }
   /**
    * @param source the source to set
    */
   public void setSource(List<String> source) {
      this.source = source;
   }
   /**
    * @return the destination
    */
   public List<String> getDestination() {
      return sink;
   }
   /**
    * @param destination the destination to set
    */
   public void setDestination(List<String> destination) {
      this.sink = destination;
   }
   
   /**
    * get declaration in the format: l1 l2 ... ln | h1 h2 ... hm
    * */
   public String getDeclaration(){
      String result="";
      for(String low: sink){
         result += low + " ";
      }
      result +="| ";
      for(String high: source){
         result += high + " ";
      }
      return result;
   }
   
}
