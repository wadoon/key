/**
 * 
 */
package de.tud.exploitgen.util;



import de.tud.exploitgen.infrastructure.KeYJavaMethod;
import de.uka.ilkd.key.proof.init.ProofInputException;
import de.uka.ilkd.key.symbolic_execution.model.IExecutionVariable;

/**
 * this class check properties of a variable represented by a IExecutionVaribale object
 * @author Huy Do
 *
 */
public class VariableChecker {
   /*
    * check if a variable is a high variable or not
    * first simple implementation: just check via its name (start by "h")
    * todo: improve it by using metadata supplied by JML specifications
    * */
   private KeYJavaMethod method;// contains meta data including JML specifications
   
   /**
    * @param method
    */
   public VariableChecker(KeYJavaMethod method) {
      super();
      this.method = method;
   }
   
   public boolean isHigh(IExecutionVariable var) throws ProofInputException{
         if (var.getName().startsWith("h"))
            return true;
         else return false;
     
   }
   /*
    * check if a variable is a high variable or not
    * first simple implementation: just check via its name (start by "l")
    * todo: improve it by using metadata supplied by JML specifications
    * */
   public boolean isLow(IExecutionVariable var)throws ProofInputException{
     
         if (var.getName().startsWith("l"))
            return true;
         else return false;
     
   }
   
   /*
    * check if variables is heap (name = "self")
    * */
   public boolean isHeap(IExecutionVariable var)throws ProofInputException{     
         if(var.getName().equals("self"))
            return true;
         else return false;
      
   }
}
