package de.tud.exploitgen.findsecret;


import java.util.HashMap;
import java.util.Map;



public class SISupporter4LowIndependent extends SISupporter {

	public SISupporter4LowIndependent(BadMethod badMethod) {
		super(badMethod);
		// TODO Auto-generated constructor stub
	}	
	
	/*
	 * for methods whose all paths are low-independent, we don't have to care about the value of low inputs
	 * all values will be assigned by 0
	 * */
	public Map<String, Long> findBestLowInput(){
		Map<String, Long> result = new HashMap<String, Long>();		
		for(String lowVar: badMethod.getListRiskyPaths().get(0).getVc().getListLowVars()){
			result.put(lowVar, (long)0);
		}
		return result;
	}
}
