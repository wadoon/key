package de.tud.exploitgen.findsecret.maxsmt;



import java.util.LinkedList;
import java.util.List;

import de.uka.ilkd.key.smt.lang.SMTFile;
import de.uka.ilkd.key.smt.lang.SMTFunction;
import de.uka.ilkd.key.smt.lang.SMTSort;
import de.uka.ilkd.key.smt.lang.SMTTerm;

public class MaxSMTFile extends SMTFile {
	private List<String> listMaxSMTClauseNames;
	private List<String> listVar2GetValues;
	
	public MaxSMTFile(){
		super();
		listMaxSMTClauseNames = new LinkedList<String>();
		listVar2GetValues = new LinkedList<String>();
	}
	
	public void addMaxSMTClauseName(String clauseName){
		listMaxSMTClauseNames.add(clauseName);
	}
	
	public void addVarName(String varName){
		listVar2GetValues.add(varName);
	}
	
	public String toString(){
		StringBuffer out = new StringBuffer();
		
		/*out.append(";==========OPTIONS==========\n\n");
		
		out.append("(set-option :smt.arith.solver 1) ; enables difference logic solver for sparse constraints \n");
		out.append("(set-option :smt.arith.solver 3) ; enables difference logic solver for dense constraints\n");*/
		
		out.append("\n;==========SORTS==========\n");
		
		for(SMTSort s: getSorts()){
			out.append('\n');
			out.append(s.toString());
			out.append('\n');
			
		}
		
		out.append("\n;==========FUNCTIONS==========\n");
		
		for(SMTFunction f : getFunctions()){
			out.append('\n');
			if(f.getComment()!=null){
				String comment = f.getComment();
				comment = ";"+comment.replace('\n', ' ');				
				out.append(comment);
				out.append('\n');
			}
			out.append(f.toString());
			out.append('\n');
			
		}
		
		out.append("\n;==========ASSERTIONS==========\n");
		
		for(SMTTerm f : getFormulas()){
			
			if(f== SMTTerm.TRUE) continue;
			out.append('\n');
			if(f.getComment()!=null){
				String comment = f.getComment();
				comment = ";"+comment.replace('\n', ' ');				
				out.append(comment);
				out.append('\n');
			}
			
			out.append("(assert ");
			out.append(f.toString());
			out.append(")");
			out.append('\n');
			
		}
		
		
		
		out.append("(check-sat)\n");
		
		for(String varName: listVar2GetValues){
			out.append("(get-value ("+varName+"))\n");
		}
		
		for(String clauseName: listMaxSMTClauseNames){
			out.append("(get-value ("+clauseName+"))\n");
		}
		return out.toString();
		
	}
}
