/**
 * 
 */
package de.tud.exploitgen.processing.exploit;

import java.util.List;

import de.tud.exploitgen.infrastructure.KeYJavaMethod;
import de.tud.exploitgen.util.IFBarrier;

/**
 * this class wrap an exploit test case. It includes:
 * experimental method
 * information flow security  specification
 * list of exploit model generated concerning method and specification 
 * @author Huy Do
 *
 */
public class ExploitTestCases {
   private KeYJavaMethod javaMethod;
   private IFBarrier spec;
   private List<ExploitModel> exploitModels;
   /**
    * @param method
    * @param spec
    * @param listExploitModel
    */
   public ExploitTestCases(KeYJavaMethod method, IFBarrier spec,
         List<ExploitModel> listExploitModel) {
      super();
      this.javaMethod = method;
      this.spec = spec;
      this.exploitModels = listExploitModel;
   }
   /**
    * @return the method
    */
   public KeYJavaMethod getMethod() {
      return javaMethod;
   }
   /**
    * @param method the method to set
    */
   public void setMethod(KeYJavaMethod method) {
      this.javaMethod = method;
   }
   /**
    * @return the spec
    */
   public IFBarrier getSpec() {
      return spec;
   }
   /**
    * @param spec the spec to set
    */
   public void setSpec(IFBarrier spec) {
      this.spec = spec;
   }
   /**
    * @return the exploitModel
    */
   public List<ExploitModel> getExploitModel() {
      return exploitModels;
   }
   /**
    * @param exploitModels the exploitModel to set
    */
   public void setExploitModel(List<ExploitModel> exploitModels) {
      this.exploitModels = exploitModels;
   }
   
}
