/**
 * 
 */
package de.tud.exploitgen.processing.exploit;

import java.util.LinkedList;
import java.util.List;

import de.tud.exploitgen.infrastructure.KeYJavaClass;

/**
 * this class represents an exploit test suite for a java class, it includes:
 *   A list of ExploitTestCase
 *   class which is being resolved
 * @author Huy Do
 *
 */
public class ExploitTestSuite {
   private List<ExploitTestCases> listETC;
   KeYJavaClass javaClass;
   /**
    * @return the listETC
    */
   public List<ExploitTestCases> getListETC() {
      return listETC;
   }
   /**
    * @param listETC the listETC to set
    */
   public void setListETC(List<ExploitTestCases> listETC) {
      this.listETC = listETC;
   }
   /**
    * @return the keYJavaClass
    */
   public KeYJavaClass getKeYJavaClass() {
      return javaClass;
   }
   /**
    * @param keYJavaClass the keYJavaClass to set
    */
   public void setKeYJavaClass(KeYJavaClass keYJavaClass) {
      this.javaClass = keYJavaClass;
   }
   /**
    * @param keYJavaClass
    */
   public ExploitTestSuite(KeYJavaClass keYJavaClass) {
      super();
      this.javaClass = keYJavaClass;
      //create an empty list of exploit test case
      listETC=new LinkedList<ExploitTestCases>();
   }   
   
   //add an exploit test case into this test suite
   public void addExploitTestCase(final ExploitTestCases etc){
      if(etc!=null)
         listETC.add(etc);
   }
   
   //add an exploit test suite into this test suite
   public void addExploitTestSuite(final ExploitTestSuite ets){
      if(!ets.isEmpty()){
         for(ExploitTestCases etc:ets.getListETC())
            listETC.add(etc);
      }
   }
   //check if there is no exploit test case
   public boolean isEmpty(){
      return listETC.isEmpty()?true:false;
   }  
 
  //get the amount of exploits
   public int getAmouttOfExploits(){
      int count=0;
      for(ExploitTestCases etcs: getListETC()){
         count+=etcs.getExploitModel().size();
      }
      return count;
   }
}
