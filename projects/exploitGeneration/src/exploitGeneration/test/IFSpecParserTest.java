import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import junit.framework.TestCase;
import org.junit.Test;


/**
 * 
 */

import de.tud.exploitgen.processing.specification.IFSpecParser;


/**
 * @author Huy Do
 *
 */
public class IFSpecParserTest extends TestCase{
   @Test
   public void testGetIFSpecifications() throws IOException{
      String input="asslfksfjsdkf skjfsk /*! l | h ;\n l1 | h1 h2 h3 ;\n !*/ kajsfksjfk sdfjk /*! l2 | h2 ; !*/fsdfsd "; 
      IFSpecParser ifsp=new IFSpecParser();
     List<String> out=ifsp.getIFSpecifications(input);   
       assertEquals(out.size(),2); 
      System.out.println(out.size());
      
      List<String> specs=ifsp.getIFSpecifications(input);
      //solve each specification
      for(String spec:specs){
         //get all single declaration in the specification
         List<String> declars =ifsp.getSingleDeclaration(spec);
         //solve each declaration to get IFBarrier object
         for(String declar:declars){
            System.out.println(declar);
            List<String> source=ifsp.getVariables(ifsp.getSourcePhrase(declar));
            List<String> destination=ifsp.getVariables(ifsp.getDestinationPhrase(declar));            
            for(String var:destination){
               System.out.print(var + ",");               
            }
            System.out.println();
            
            for(String var:source){
               System.out.print(var + ",");               
            }
            System.out.println();
         }
      }
   }
}
