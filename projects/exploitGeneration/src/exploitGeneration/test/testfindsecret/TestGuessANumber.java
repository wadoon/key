package testfindsecret;

import org.junit.*;
import junit.framework.TestCase;
import java.lang.reflect.*;
import java.util.*;
import findsecret.GuessANumber;

public  class TestGuessANumber extends TestCase {
    
    /**
     * check method makeGuess with noninterference specification: num
     * | secret
     */
    
    @Test
    public void test_makeGuess_self_num_0 ()
        throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {
        
        /*
         * Prepare for execution 1
         */
        GuessANumber self_1 = new GuessANumber();        
        int self_num_1 = 1;        
        int self_secret_1 = 1;        
        
        /*
         * Configure variable: self_1
         */
        setFieldValue(self_1,"num",self_num_1);        
        setFieldValue(self_1,"secret",self_secret_1);        
        
        /*
         * Perform execution 1
         */
        self_1.makeGuess();        
        
        /*
         * Get the value of low variable self_num after execution 1
         */
        int self_num_out_1 = ((Integer)getFieldValue(self_1,"num")).intValue();
        
        /*
         * Prepare for execution 2
         */
        GuessANumber self_2 = new GuessANumber();        
        int self_num_2 = 1;        
        int self_secret_2 = 2;        
        
        /*
         * Configure variable: self_2
         */
        setFieldValue(self_2,"num",self_num_2);        
        setFieldValue(self_2,"secret",self_secret_2);        
        
        /*
         * Perform execution 2
         */
        self_2.makeGuess();        
        
        /*
         * Get the value of low variable self_num after execution 2
         */
        int self_num_out_2 = ((Integer)getFieldValue(self_2,"num")).intValue();
        
        assertNotNull(self_num_out_1);        
        assertNotNull(self_num_out_2);        
        /*
         * assert that the value of low variable self_num is not changed after
         * performing two executions
         */
        assertTrue(self_num_out_1 == self_num_out_2);        
    }
    
    /**
     * Sets a field of some object to a given value
     */
    private void setFieldValue (Object instance, String fieldName, Object value)
        throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {
        Field field = instance.getClass().getDeclaredField(fieldName);        
        field.setAccessible(true);        
        field.set(instance, value );        
    }
    
    /**
     * Gets the field of a given object
     */
    private <T> T getFieldValue (Object instance, String fieldName)
        throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {
        Field field = instance.getClass().getDeclaredField(fieldName);        
        field.setAccessible(true);        
        return (T)field.get(instance);        
    }
}
