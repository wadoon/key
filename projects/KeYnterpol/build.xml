<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
Copyright (C) 2009-2012 University of Freiburg

This file is part of SMTInterpol.

SMTInterpol is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

SMTInterpol is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with SMTInterpol.  If not, see <http://www.gnu.org/licenses/>.
-->
<project default="create_run_jar" name="Create Runnable Jar for Project SMTInterpol">

  <property name="smtinterpol" location="src/de/uni_freiburg/informatik/ultimate/smtinterpol"/>
  <property name="smtlib" location="${smtinterpol}/smtlib"/>
  <property name="smtlib2" location="${smtinterpol}/smtlib2"/>
  <property name="cupJar" location="java-cup-12joho.jar"/>
  <property name="optimize" value="on"/>
  <property name="jar.basename" value="smtinterpol"/>

  <!-- Build smtlib1 parser and lexer -->
  <uptodate property="smtlib1.cup.current">
    <srcfiles dir="src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib" includes="*.cup,*.flex" />
    <mapper>
      <globmapper from="smtlib.cup" to="Parser.java"/>
      <globmapper from="smtlib.cup" to="LexerSymbols.java"/>
      <globmapper from="smtlib.flex" to="Lexer.java"/>
    </mapper>
  </uptodate>
  <target name="smtlib1.cup" unless="smtlib1.cup.current">
    <java classname="java_cup.Main" classpath="{cupJar}" fork="true" dir="${smtlib}">
      <arg value="smtlib.cup" />
    </java>
    <java jar="${flexJar}" fork="true" dir="${smtlib}">
      <arg value="smtlib.flex" />
    </java>
  </target>

  <!-- Build smtlib2 parser and lexer -->
  <uptodate property="smtlib2.cup.current">
    <srcfiles dir="src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2" includes="*.cup,*.flex" />
    <mapper>
      <globmapper from="smtlib.cup" to="Parser.java"/>
      <globmapper from="smtlib.cup" to="LexerSymbols.java"/>
      <globmapper from="smtlib.flex" to="Lexer.java"/>
    </mapper>
  </uptodate>
  <target name="smtlib2.cup" unless="smtlib2.cup.current">
    <java classname="java_cup.Main" classpath="${cupJar}" fork="true" dir="${smtlib2}">
      <arg value="smtlib.cup" />
    </java>
    <java jar="${flexJar}" fork="true" dir="${smtlib2}">
      <arg value="smtlib.flex" />
    </java>
  </target>

  <!-- Compile SMTInterpol -->
  <target name="compile" depends="smtlib1.cup,smtlib2.cup">
    <mkdir dir="bin"/>
    <javac srcdir="src"
      destdir="bin" optimize="${optimize}" includeAntRuntime="false">
      <classpath>
        <pathelement location="log4j-1.2.15.jar"/>
        <pathelement path="${dir.javacup}/JavaCup/bin"/>
        <pathelement location="${cupJar}"/>
      </classpath>
    </javac>
  </target>

  <!-- Create an executable jar -->
  <target name="create_run_jar" depends="compile">
    <jar destfile="${jar.basename}.jar" filesetmanifest="mergewithoutmain">
      <manifest>
        <attribute name="Main-Class" value="de.uni_freiburg.informatik.ultimate.smtinterpol.smtlib2.Main"/>
      </manifest>
      <fileset dir="bin">
	<exclude name="**/*.svn" />
      </fileset>
      <zipfileset src="${cupJar}">
	<include name="java_cup/runtime/**"/>
      </zipfileset>
      <zipfileset excludes="META-INF/**" src="log4j-1.2.15.jar"/>
      <zipfileset file="COPYING" />
      <zipfileset file="COPYING.LESSER" />
      <zipfileset file="AUTHORS" />
      <zipfileset file="README" />
    </jar>
  </target>

  <!-- Delete compiled class files -->
  <target name="clean" description="Deletes a previous build">
    <echo message="Deleting bin tree"/>
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="bin"/>
    </delete>
  </target>

  <!-- Delete the executable jar and the source zip -->
  <target name="distclean" description="Deletes a previously build jar" depends="clean">
    <delete file="${jar.basename}.jar" failonerror="false"/>
  </target>

  <!-- Clean before creating an executable jar -->
  <target name="cleanbuild" description="Clean and rebuild jar" depends="clean,create_run_jar"/>
</project>
