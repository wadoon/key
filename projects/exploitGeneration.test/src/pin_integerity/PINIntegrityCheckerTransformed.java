package pin_integerity;

public class PINIntegrityCheckerTransformed {
	int p1;
	int m;
	/*! m | p1  ; !*/
	/*@requires 0<=p1 && p1<16 && m>=0 && m<16;
	 @ensures m>=0;@*/
	public void check(){
		if(valid(p1, m) )
			m=1;
		else
			m=0;
	}
	
	private boolean valid(int p, int m){
		p= p % 10;
		int b1, b2, b3, b4;
		if((p %2) == (m %2))
			b1=0;
		else
			b1=1;
		//return b1<1;
		//p = p/2;
		//m=m/2;
		if(((p >> 1) %2) == ((m >> 1) %2))
			b2=0;
		else
			b2=1;
		return (b2*2+b1<3);
		/*p = p/2;
		m=m/2;
		if((p %2) == (m %2))
			b3=0;
		else
			b3=1;
		p = p/2;
		m=m/2;
		if((p %2) == (m %2))
			b4=0;
		else
			b4=1;
		
		if((b4*8+b3*4+b2*2+b1)<10)
			return true;
		else
			return false;*/
	}

}
