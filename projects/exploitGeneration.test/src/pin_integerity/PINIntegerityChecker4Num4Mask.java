package pin_integerity;

public class PINIntegerityChecker4Num4Mask {
	int p1, p2, p3, p4, m1, m2, m3, m4;
	/*! m1 m2 m3 m4 | p1 p2 p3 p4 ; !*/
	/*@requires 0<=p1 && p1<16 && 0<=p2 && p2<16 && 0<=p3 && p3<16 && 0<=p4 && p4<16 ;@*/
	public void check(){
		if((m1>15)|(m1<0)|(m2>15)|(m2<0)|(m3>15)|(m3<0)|(m4>15)|(m4<0)){
			m1=-1;m2=-1;m3=-1;m4=-1;
		}else{
			p1 = p1%10;
			p1 = p2%10;
			p3 = p3%10;
			p4 = p4%10;
			
			if(((p1 ^ m1)<10) & ((p2 ^ m2)<10) & ((p3 ^ m3)<10) & ((p4 ^ m4)<10)){
				m1=0;m2=0;m3=0;m4=0;
			}else if(((p1 ^ m1)<10) & ((p2 ^ m2)<10) & ((p3 ^ m3)<10) & ((p4 ^ m4)>10)){
				m1=1;m2=1;m3=1;m4=1;
			}else if(((p1 ^ m1)<10) & ((p2 ^ m2)<10) & ((p3 ^ m3)>10) & ((p4 ^ m4)<10)){
				m1=2;m2=2;m3=2;m4=2;
			}else if(((p1 ^ m1)<10) & ((p2 ^ m2)<10) & ((p3 ^ m3)>10) & ((p4 ^ m4)>10)){
				m1=3;m2=3;m3=3;m4=3;
			}else if(((p1 ^ m1)<10) & ((p2 ^ m2)>10) & ((p3 ^ m3)<10) & ((p4 ^ m4)<10)){
				m1=4;m2=4;m3=4;m4=4;
			}else if(((p1 ^ m1)<10) & ((p2 ^ m2)>10) & ((p3 ^ m3)<10) & ((p4 ^ m4)>10)){
				m1=5;m2=5;m3=5;m4=5;
			}else if(((p1 ^ m1)<10) & ((p2 ^ m2)>10) & ((p3 ^ m3)>10) & ((p4 ^ m4)<10)){
				m1=6;m2=6;m3=6;m4=6;
			}else if(((p1 ^ m1)<10) & ((p2 ^ m2)>10) & ((p3 ^ m3)>10) & ((p4 ^ m4)>10)){
				m1=7;m2=7;m3=7;m4=7;
			}else if(((p1 ^ m1)>10) & ((p2 ^ m2)<10) & ((p3 ^ m3)<10) & ((p4 ^ m4)<10)){
				m1=8;m2=8;m3=8;m4=8;
			}else if(((p1 ^ m1)>10) & ((p2 ^ m2)<10) & ((p3 ^ m3)<10) & ((p4 ^ m4)>10)){
				m1=9;m2=9;m3=9;m4=9;
			}else if(((p1 ^ m1)>10) & ((p2 ^ m2)<10) & ((p3 ^ m3)>10) & ((p4 ^ m4)<10)){
				m1=10;m2=10;m3=10;m4=10;
			}else if(((p1 ^ m1)>10) & ((p2 ^ m2)<10) & ((p3 ^ m3)>10) & ((p4 ^ m4)>10)){
				m1=11;m2=11;m3=11;m4=11;
			}else if(((p1 ^ m1)>10) & ((p2 ^ m2)>10) & ((p3 ^ m3)<10) & ((p4 ^ m4)<10)){
				m1=12;m2=12;m3=12;m4=12;
			}else if(((p1 ^ m1)>10) & ((p2 ^ m2)>10) & ((p3 ^ m3)<10) & ((p4 ^ m4)>10)){
				m1=13;m2=13;m3=13;m4=13;
			}else if(((p1 ^ m1)>10) & ((p2 ^ m2)>10) & ((p3 ^ m3)>10) & ((p4 ^ m4)<10)){
				m1=14;m2=14;m3=14;m4=14;
			}else //if(((p1 ^ m)>10) & ((p2 ^ m)>10) & ((p3 ^ m)>10) & ((p4 ^ m)>10))
				{
				m1=15;m2=15;m3=15;m4=15;
			}
		}
	}
}
