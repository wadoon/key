package evoting;

public class ServerFaulty {
	//public int[] votesForCandidates;
		public Result result;
		public int numberOfCandidates;
		int[] votes;
		/*! result votes numberOfCandidates | votes ; !*/

		private void onCollectBallot(Message message){
			int vote = message.getBallot();
			if((vote>=0) && (vote<numberOfCandidates))
				result.bulletin[vote]++;
		}
		
		public ServerFaulty(){
			result = null;
			numberOfCandidates=0;
			votes=null;
		}
		public ServerFaulty(int numberOfCandidates){
			this.numberOfCandidates= numberOfCandidates;
			this.result = new Result(numberOfCandidates);
		}
		
		/*@normal_behavior
		 @requires numberOfCandidates>0 && votes.length>0 && votes.length<10;
		 	@*/
		public void election(){
			result = new Result(numberOfCandidates);
			
			/*@loop_invariant 
	       i>=0 && 
	       i<= votes.length && 
	       (\forall int k; k>=0 && k< numberOfCandidates; 
	         result.bulletin[k] == (\sum int j; 0 <= j && j < i; (k==votes[j] ? 1 : 0)))  ; 
	      @assignable result.bulletin[*],i;
	      @decreases votes.length-i;
	      @*/
			for(int i=0; i < votes.length; i++)
				if(votes[i]>=0 && votes[i]<numberOfCandidates)
					//result.bulletin[votes[i]]++;
					onCollectBallot(new Message(i, votes[i]));
			clearInfo();
		}
		
		 Result publishResult(){
			return result;
		}
		
		/*@requires true;@*/
		private void clearInfo(){
			votes = null;	
		}

}
