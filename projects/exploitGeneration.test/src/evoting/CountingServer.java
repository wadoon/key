package evoting;

public class CountingServer {
	public Result result;
	private int numberOfCandidates;
	int[] ballots;
	/*! result ballots | ballots ; !*/

	public CountingServer(){
		result = null;
		numberOfCandidates=0;
		ballots=null;
	}
	public CountingServer(int ballots[], int numberOfCandidates){
		this.ballots = ballots;
		this.numberOfCandidates = numberOfCandidates;
	}
		
	/*@normal_behavior
	 @requires numberOfCandidates>0 && ballots.length>0;
	 	@escapes (\seq_def int i; 0; numberOfCandidates;
	 	(\num_of int j; 0 <= j && j < ballots.length; i==ballots[j]));
	 	@*/
	public void counting(){
		result = new Result(numberOfCandidates);		
		/*@loop_invariant 
       i>=0 && 
       i<= ballots.length && 
       (\forall int k; k>=0 && k< numberOfCandidates; 
         result.bulletin[k] == (\sum int j; 0 <= j && j < i; (k==ballots[j] ? 1 : 0)))  ; 
      @assignable result.bulletin[*],i;
      @decreases ballots.length-i;
      @*/
		for(int i=0; i < ballots.length; i++)
			if(ballots[i]>=0 && ballots[i]<numberOfCandidates)
				result.bulletin[ballots[i]]++;
		clearBallots();
	}
	
	 Result publishResult(){
		counting();
		return result;
	}
	
	/*@requires true;@*/
	private void clearBallots(){
		ballots = new int[0];
	}
}
