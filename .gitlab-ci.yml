#
# This files describes the workflow of the continous integration
# checker for KeY run within gitlab.
#
# Jenkins runs are triggered from somewhere else.
#

cache:
  policy: pull-push
  paths:
    - .gradle/wrapper
    - .gradle/caches
  untracked: true
  key: ${CI_COMMIT_REF_SLUG}

variables:
  GRADLE_OPTS:  "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2 -Dorg.gradle.configureondemand=true"
  GIT_DEPTH: 0
  # SONAR_TOKEN: configured in gitlab-ci web ui. Ask <weigl@kit.edu> if you need this token.

before_script:
  #  - echo `pwd` # debug
  #  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
    - primary
    - secondary
    - ternary

compile:testClasses:
  dependencies:  ["compile:classes"]
  stage: primary
  image: wadoon/key-test-docker:jdk11
  script:
    - javac -version
    - cd key
    - gradle --build-cache --parallel testClasses
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - build
      - .gradle
  only:
    changes:
      - key/*/src/**
      - build.gradle

